OpenMPCHelpBook_102=Blocks the thread executing the function until the specified lock is available and then sets the lock. A simple lock is available if it is unlocked. A nestable lock is available if it is unlocked or if it is already owned by the thread executing the function.
OpenMPCHelpBook_109=Blocks the thread executing the function until the specified lock is available and then sets the lock. A simple lock is available if it is unlocked. A nestable lock is available if it is unlocked or if it is already owned by the thread executing the function.
OpenMPCHelpBook_116=Attempts to set a lock but do not block execution of the thread.
OpenMPCHelpBook_123=Attempts to set a lock but do not block execution of the thread.
OpenMPCHelpBook_130=Provides the means of releasing ownership of a lock.
OpenMPCHelpBook_137=Provides the means of releasing ownership of a lock.
OpenMPCHelpBook_144=Returns the time elapsed from a fixed starting time. The value of the fixed starting time is determined at the start of the current program, and remains constant throughout program execution.
OpenMPCHelpBook_151=Returns the number of seconds between clock ticks.
OpenMPCHelpBook_74=These functions (this and omp_init_nest_lock) provide the only means of initializing a lock. Each function initializes the lock associated with the parameter lock for use in subsequent calls.
OpenMPCHelpBook_81=These functions (this and omp_init_lock) provide the only means of initializing a lock. Each function initializes the lock associated with the parameter lock for use in subsequent calls.
OpenMPCHelpBook_95=Ensures that the specified lock variable lock is uninitialized.
OpenMPCHelpBook_get_dynamic=This function returns non-zero if dynamic thread adjustments enabled and returns 0 otherwise.
OpenMPCHelpBook_get_max_threads=This function returns the maximum value that can be returned by calls to omp_get_num_threads.
OpenMPCHelpBook_get_nested=This function returns non-zero if nested parallelism is enabled and 0 if it is disabled.
OpenMPCHelpBook_get_num_procs=This function returns the maximum number of processors that could be assigned to the program.
OpenMPCHelpBook_get_num_threads=This function returns the number of threads currently in the team executing the parallel region from which it is called.
OpenMPCHelpBook_get_thread_num=This function returns the thread number, within its team, of the thread executing the function. The thread number lies between 0 and omp_get_num_threads()-1, inclusive. The master thread of the team is thread 0.
OpenMPCHelpBook_in_parallel=This function returns non-zero if it is called within the dynamic extent of a parallel region executing in parallel; otherwise, it returns 0.
OpenMPCHelpBook_omp_c_and_fortran_help_book_title=OpenMP C and Fortran Help Book
OpenMPCHelpBook_set_dynamic=This function enables or disables dynamic adjustment of the number of threads available for execution of parallel regions.
OpenMPCHelpBook_set_nested=This function enables or disables nested parallelism.
OpenMPCHelpBook_set_num_threads=Sets the number of threads that will be used in the next parallel region
