<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.2"?>
<plugin>

	<!-- -->
	<!-- ScannerConfigurationDiscoveryProfile definitions -->
	<!-- -->

	<!-- We have to extend the core of CDT's make so that we can define a new ScannerConfigurationDiscoveryProfile -->
	<!-- A ScannerConfigurationDiscoveryProfile is used to discover information about the standard options used by the compiler, e.g. the standard include directories -->

	<!-- PPU GCC Managed Make per Project Profile -->
	<!-- The Profile gathers together information about the standard include directories and standard definitions used by the compiler -->
	<extension
			id="PPUGCCManagedMakePerProjectProfile"
			name="%PPUGCCManagedMakePerProjectProfileName"
			point="org.eclipse.cdt.make.core.ScannerConfigurationDiscoveryProfile">

		<!-- The ScannerInfoCollector manages the information generated by the Profile so that it can be easily accessed afterwards -->
		<scannerInfoCollector
				class="org.eclipse.ptp.cell.make.internal.core.scannerconfig.DefaultCellScannerInfoCollector"
				scope="project">
		</scannerInfoCollector>

		<!-- The ScannerInfoProvider search for the information needed by the profile and send it to the ScannerInfoCollector -->
		<scannerInfoProvider providerId="specsFile1">
			<!-- Specifies the compiler command that returns the information about standard include directories and standard definitions -->
			<!-- The compiler command used will be always a C compiler command -->
			<!-- The output for C or C++ projects will be different as the ScannerInfoProvider substitute the ${specs_file} variable below with a dummy "c" file or "cpp" file -->
			<run
					arguments="-E -P -v -dD ${plugin_state_location}/${specs_file}"
					command="ppu-gcc"
					class="org.eclipse.ptp.cell.make.internal.core.scannerconfig.CellSpecsRunSIProvider">
			</run>
			<!-- Specifies the parser for the output generated by the compiler with the above command line -->
			<scannerInfoConsoleParser
					class="org.eclipse.cdt.make.internal.core.scannerconfig.gnu.GCCSpecsConsoleParser">
			</scannerInfoConsoleParser>
		</scannerInfoProvider>

	</extension>

	<!-- SPU GCC Managed Make per Project Profile -->
	<!-- The Profile gathers together information about the standard include directories and standard definitions used by the compiler -->
	<extension
			id="SPUGCCManagedMakePerProjectProfile"
			name="%SPUGCCManagedMakePerProjectProfileName"
			point="org.eclipse.cdt.make.core.ScannerConfigurationDiscoveryProfile">

		<!-- The ScannerInfoCollector manages the information generated by the Profile so that it can be easily accessed afterwards -->
		<scannerInfoCollector
				class="org.eclipse.ptp.cell.make.internal.core.scannerconfig.DefaultCellScannerInfoCollector"
				scope="project">
		</scannerInfoCollector>

		<!-- The ScannerInfoProvider search for the information needed by the profile and send it to the ScannerInfoCollector -->
		<scannerInfoProvider providerId="specsFile2">
			<!-- Specifies the compiler command that returns the information about standard include directories and standard definitions -->
			<!-- The compiler command used will be always a C compiler command -->
			<!-- The output for C or C++ projects will be different as the ScannerInfoProvider substitute the ${specs_file} variable below with a dummy "c" file or "cpp" file -->
			<run
					arguments="-E -P -v -dD ${plugin_state_location}/${specs_file}"
					command="spu-gcc"
					class="org.eclipse.ptp.cell.make.internal.core.scannerconfig.CellSpecsRunSIProvider">
			</run>
			<!-- Specifies the parser for the output generated by the compiler with the above command line -->
			<scannerInfoConsoleParser
					class="org.eclipse.cdt.make.internal.core.scannerconfig.gnu.GCCSpecsConsoleParser">
			</scannerInfoConsoleParser>
		</scannerInfoProvider>

	</extension>

	<!-- PPU XL C Managed Make Per Project Profile -->
	<!-- The Profile gathers together information about the standard include directories and standard definitions used by the compiler -->
	<extension
			id="PPUXLCManagedMakePerProjectProfile"
			name="%PPUXLCManagedMakePerProjectProfileName"
			point="org.eclipse.cdt.make.core.ScannerConfigurationDiscoveryProfile">

		<!-- The ScannerInfoCollector manages the information generated by the Profile so that it can be easily accessed afterwards -->
		<scannerInfoCollector
				class="org.eclipse.ptp.cell.make.internal.core.scannerconfig.DefaultCellScannerInfoCollector"
				scope="project">
		</scannerInfoCollector>

		<!-- The ScannerInfoProvider search for the information needed by the profile and send it to the ScannerInfoCollector -->
		<scannerInfoProvider providerId="specsFile3">
			<!-- Specifies the compiler command that returns the information about standard include directories and standard definitions -->
			<!-- The compiler command used will be always a C compiler command -->
			<!-- The output for C or C++ projects will be different as the ScannerInfoProvider substitute the ${specs_file} variable below with a dummy "c" file or "cpp" file -->

			<run
					arguments="-E -v ${plugin_state_location}/${specs_file}"
					command="ppuxlc"
					class="org.eclipse.ptp.cell.make.internal.core.scannerconfig.CellSpecsRunSIProvider">
			</run>
			
			<!-- Specifies the parser for the output generated by the compiler with the above command line -->
			<scannerInfoConsoleParser
					class="org.eclipse.ptp.cell.make.internal.core.scannerconfig.xl.XLCSpecsConsoleParser">
			</scannerInfoConsoleParser>
		</scannerInfoProvider>

	</extension>

	<!-- SPU XL C Managed Make Per Project Profile -->
	<!-- The Profile gathers together information about the standard include directories and standard definitions used by the compiler -->
	<extension
			id="SPUXLCManagedMakePerProjectProfile"
			name="%SPUXLCManagedMakePerProjectProfileName"
			point="org.eclipse.cdt.make.core.ScannerConfigurationDiscoveryProfile">

		<!-- The ScannerInfoCollector manages the information generated by the Profile so that it can be easily accessed afterwards -->
		<scannerInfoCollector
				class="org.eclipse.ptp.cell.make.internal.core.scannerconfig.DefaultCellScannerInfoCollector"
				scope="project">
		</scannerInfoCollector>

		<!-- The ScannerInfoProvider search for the information needed by the profile and send it to the ScannerInfoCollector -->
		<scannerInfoProvider providerId="specsFile4">
			<!-- Specifies the compiler command that returns the information about standard include directories and standard definitions -->
			<!-- The compiler command used will be always a C compiler command -->
			<!-- The output for C or C++ projects will be different as the ScannerInfoProvider substitute the ${specs_file} variable below with a dummy "c" file or "cpp" file -->

			<run
					arguments="-E -v ${plugin_state_location}/${specs_file}"
					command="spuxlc"
					class="org.eclipse.ptp.cell.make.internal.core.scannerconfig.CellSpecsRunSIProvider">
			</run>
			<!-- Specifies the parser for the output generated by the compiler with the above command line -->
			<scannerInfoConsoleParser
					class="org.eclipse.ptp.cell.make.internal.core.scannerconfig.xl.XLCSpecsConsoleParser">
			</scannerInfoConsoleParser>
		</scannerInfoProvider>

	</extension>

	<!-- -->
	<!-- Define C/C++ intermediate "object" files ContentTypes for PPU Projects with Embed SPU code -->
	<!-- -->

	<extension point="org.eclipse.core.runtime.contentTypes">

		<!-- declares a content type for intermediate spu object files copied to a PPU project -->
		<content-type
				id="compiledSPUIntermediateObjectFile"
				name="%objectFileName"
				priority="high">
		</content-type>

		<file-association
				content-type="org.eclipse.ptp.cell.managedbuilder.core.compiledSPUIntermediateObjectFile"
				file-extensions="spuo">
		</file-association>

	</extension>

</plugin>
