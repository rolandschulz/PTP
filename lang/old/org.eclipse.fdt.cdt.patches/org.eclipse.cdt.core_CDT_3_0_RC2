Index: plugin.xml
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/plugin.xml,v
retrieving revision 1.83
diff -u -r1.83 plugin.xml
--- plugin.xml	6 Jul 2005 18:36:50 -0000	1.83
+++ plugin.xml	13 Jul 2005 19:42:36 -0000
@@ -21,6 +21,7 @@
       <import plugin="org.eclipse.core.runtime"/>
       <import plugin="org.eclipse.text"/>
       <import plugin="org.eclipse.core.variables"/>
+      <import plugin="org.eclipse.fdt.core"/>
    </requires>
 
 <!-- =================================================================================== -->
Index: model/org/eclipse/cdt/core/model/CoreModel.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/core/model/CoreModel.java,v
retrieving revision 1.64
diff -u -r1.64 CoreModel.java
--- model/org/eclipse/cdt/core/model/CoreModel.java	6 Jul 2005 02:20:16 -0000	1.64
+++ model/org/eclipse/cdt/core/model/CoreModel.java	13 Jul 2005 19:42:36 -0000
@@ -10,6 +10,8 @@
  *******************************************************************************/
 package org.eclipse.cdt.core.model;
 
+// Temporary hack to add Fortran source files.
+import org.eclipse.fdt.core.FortranCorePlugin;
 
 import org.eclipse.cdt.core.CCProjectNature;
 import org.eclipse.cdt.core.CCorePlugin;
@@ -44,7 +46,7 @@
 import org.eclipse.core.runtime.content.IContentType;
 import org.eclipse.core.runtime.jobs.ISchedulingRule;
 
-public class CoreModel {
+public class CoreModel implements ICoreModel {
 	private static CoreModel cmodel = null;
 	private static CModelManager manager = CModelManager.getDefault();
 	private static PathEntryManager pathEntryManager = PathEntryManager.getDefault();
@@ -245,6 +247,10 @@
 				return true;
 			} else if (CCorePlugin.CONTENT_TYPE_ASMSOURCE.equals(id)) {
 				return true;
+			} else if (FortranCorePlugin.CONTENT_TYPE_FORTRANSOURCE.equals(id)) {
+//				 Temporary hack to add Fortran source files.
+//				 need to add extension point so that files types can be added as valie source files.
+				return true;
 			}
 		}
 		return false;
Index: model/org/eclipse/cdt/internal/core/model/Archive.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/Archive.java,v
retrieving revision 1.18
diff -u -r1.18 Archive.java
--- model/org/eclipse/cdt/internal/core/model/Archive.java	23 Jun 2005 16:01:07 -0000	1.18
+++ model/org/eclipse/cdt/internal/core/model/Archive.java	13 Jul 2005 19:42:36 -0000
@@ -107,7 +107,7 @@
 	/* (non-Javadoc)
 	 * @see org.eclipse.cdt.internal.core.model.CElement#closing(java.lang.Object)
 	 */
-	protected void closing(Object info) throws CModelException {
+	public void closing(Object info) throws CModelException {
 		ICProject cproject = getCProject();
 		CProjectInfo pinfo = (CProjectInfo)CModelManager.getDefault().peekAtInfo(cproject);
 		if (pinfo != null && pinfo.vLib != null) {
Index: model/org/eclipse/cdt/internal/core/model/ArchiveContainerInfo.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/ArchiveContainerInfo.java,v
retrieving revision 1.3
diff -u -r1.3 ArchiveContainerInfo.java
--- model/org/eclipse/cdt/internal/core/model/ArchiveContainerInfo.java	15 Jul 2004 17:00:02 -0000	1.3
+++ model/org/eclipse/cdt/internal/core/model/ArchiveContainerInfo.java	13 Jul 2005 19:42:36 -0000
@@ -29,7 +29,7 @@
 	/* (non-Javadoc)
 	 * @see org.eclipse.cdt.internal.core.model.CElementInfo#addChild(org.eclipse.cdt.core.model.ICElement)
 	 */
-	protected void addChild(ICElement child) {
+	public void addChild(ICElement child) {
 		if (!includesChild(child)) {
 			super.addChild(child);
 		}
Index: model/org/eclipse/cdt/internal/core/model/Binary.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/Binary.java,v
retrieving revision 1.29
diff -u -r1.29 Binary.java
--- model/org/eclipse/cdt/internal/core/model/Binary.java	23 Jun 2005 16:01:07 -0000	1.29
+++ model/org/eclipse/cdt/internal/core/model/Binary.java	13 Jul 2005 19:42:36 -0000
@@ -379,7 +379,7 @@
 	/* (non-Javadoc)
 	 * @see org.eclipse.cdt.internal.core.model.CElement#closing(java.lang.Object)
 	 */
-	protected void closing(Object info) throws CModelException {
+	public void closing(Object info) throws CModelException {
 		ICProject cproject = getCProject();
 		CProjectInfo pinfo = (CProjectInfo)CModelManager.getDefault().peekAtInfo(cproject);
 		if (pinfo != null && pinfo.vBin != null) {
Index: model/org/eclipse/cdt/internal/core/model/BinaryContainerInfo.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/BinaryContainerInfo.java,v
retrieving revision 1.3
diff -u -r1.3 BinaryContainerInfo.java
--- model/org/eclipse/cdt/internal/core/model/BinaryContainerInfo.java	15 Jul 2004 17:00:02 -0000	1.3
+++ model/org/eclipse/cdt/internal/core/model/BinaryContainerInfo.java	13 Jul 2005 19:42:36 -0000
@@ -29,7 +29,7 @@
 	/* (non-Javadoc)
 	 * @see org.eclipse.cdt.internal.core.model.CElementInfo#addChild(org.eclipse.cdt.core.model.ICElement)
 	 */
-	protected void addChild(ICElement child) {
+	public void addChild(ICElement child) {
 		if (!includesChild(child)) {
 			super.addChild(child);
 		}
Index: model/org/eclipse/cdt/internal/core/model/BufferManager.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/BufferManager.java,v
retrieving revision 1.5
diff -u -r1.5 BufferManager.java
--- model/org/eclipse/cdt/internal/core/model/BufferManager.java	27 Jun 2005 03:46:47 -0000	1.5
+++ model/org/eclipse/cdt/internal/core/model/BufferManager.java	13 Jul 2005 19:42:36 -0000
@@ -84,7 +84,7 @@
 	/**
 	 * Adds a buffer to the table of open buffers.
 	 */
-	protected void addBuffer(IBuffer buffer) {
+	public void addBuffer(IBuffer buffer) {
 		openBuffers.put(buffer.getOwner(), buffer);
 	}
 
Index: model/org/eclipse/cdt/internal/core/model/CContainerInfo.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/CContainerInfo.java,v
retrieving revision 1.14
diff -u -r1.14 CContainerInfo.java
--- model/org/eclipse/cdt/internal/core/model/CContainerInfo.java	23 Jun 2005 16:01:07 -0000	1.14
+++ model/org/eclipse/cdt/internal/core/model/CContainerInfo.java	13 Jul 2005 19:42:36 -0000
@@ -32,7 +32,7 @@
 	/**
 	 * Constructs a new C Model Info 
 	 */
-	protected CContainerInfo(CElement element) {
+	public CContainerInfo(CElement element) {
 		super(element);
 	}
 
Index: model/org/eclipse/cdt/internal/core/model/CElement.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/CElement.java,v
retrieving revision 1.37
diff -u -r1.37 CElement.java
--- model/org/eclipse/cdt/internal/core/model/CElement.java	8 Jul 2005 21:32:13 -0000	1.37
+++ model/org/eclipse/cdt/internal/core/model/CElement.java	13 Jul 2005 19:42:36 -0000
@@ -318,7 +318,7 @@
 	/**
 	 * This element is being closed.  Do any necessary cleanup.
 	 */
-	protected void closing(Object info) throws CModelException {
+	public void closing(Object info) throws CModelException {
 	}
 
 	/**
Index: model/org/eclipse/cdt/internal/core/model/CElementDelta.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/CElementDelta.java,v
retrieving revision 1.11
diff -u -r1.11 CElementDelta.java
--- model/org/eclipse/cdt/internal/core/model/CElementDelta.java	26 Aug 2004 15:17:48 -0000	1.11
+++ model/org/eclipse/cdt/internal/core/model/CElementDelta.java	13 Jul 2005 19:42:36 -0000
@@ -206,7 +206,7 @@
 	 * Adds the child delta to the collection of affected children.  If the
 	 * child is already in the collection, walk down the hierarchy.
 	 */
-	protected void addResourceDelta(IResourceDelta child) {
+	public void addResourceDelta(IResourceDelta child) {
 		switch (fKind) {
 			case ADDED:
 			case REMOVED:
@@ -474,7 +474,7 @@
 	 * Creates the delta tree for the given element and delta, and then
 	 * inserts the tree as an affected child of this node.
 	 */
-	protected void insertDeltaTree(ICElement element, CElementDelta delta) {
+	public void insertDeltaTree(ICElement element, CElementDelta delta) {
 		CElementDelta childDelta= createDeltaTree(element, delta);
 		if (!equalsAndSameParent(element, getElement())) {
 			addAffectedChild(childDelta);
Index: model/org/eclipse/cdt/internal/core/model/CElementInfo.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/CElementInfo.java,v
retrieving revision 1.11
diff -u -r1.11 CElementInfo.java
--- model/org/eclipse/cdt/internal/core/model/CElementInfo.java	28 Jun 2004 22:16:07 -0000	1.11
+++ model/org/eclipse/cdt/internal/core/model/CElementInfo.java	13 Jul 2005 19:42:36 -0000
@@ -16,7 +16,7 @@
  * Holds cached structure and properties for a C element.
  * Subclassed to carry properties for specific kinds of elements.
  */
-class CElementInfo {
+public class CElementInfo {
 	/**
 	 * Shared empty collection used for efficiency.
 	 */
@@ -50,13 +50,13 @@
 		return element;
 	}
 
-	protected void addChild(ICElement child) {
+	public void addChild(ICElement child) {
 		// Do not add a check if the child is contained here
 		// because it causes a performance bottle neck for large files.
 		fChildren.add(child);
 	}
 
-	protected ICElement[] getChildren() {
+	public ICElement[] getChildren() {
 		synchronized (fChildren) {
 			ICElement[] array= new ICElement[fChildren.size()];		
 			return (ICElement[]) fChildren.toArray( array );
@@ -76,7 +76,7 @@
 	/**
 	 * @see ICElement.isStructureKnown()
 	 */
-	protected boolean isStructureKnown() {
+	public boolean isStructureKnown() {
 		return fIsStructureKnown;
 	}
 
@@ -88,7 +88,7 @@
 		fChildren.clear();
 	}
 
-	protected void setChildren(List children) {
+	public void setChildren(List children) {
 		fChildren.addAll(children);
 	}
 
@@ -130,7 +130,7 @@
 	 * Sets whether the structure of this element known
 	 * @see ICElement.isStructureKnown()
 	 */
-	protected void setIsStructureKnown(boolean newIsStructureKnown) {
+	public void setIsStructureKnown(boolean newIsStructureKnown) {
 		fIsStructureKnown = newIsStructureKnown;
 	}
 
Index: model/org/eclipse/cdt/internal/core/model/CModelCache.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/CModelCache.java,v
retrieving revision 1.4
diff -u -r1.4 CModelCache.java
--- model/org/eclipse/cdt/internal/core/model/CModelCache.java	27 Jun 2005 03:46:47 -0000	1.4
+++ model/org/eclipse/cdt/internal/core/model/CModelCache.java	13 Jul 2005 19:42:36 -0000
@@ -84,7 +84,7 @@
  *  Returns the info for this element without
  *  disturbing the cache ordering.
  */
-protected Object peekAtInfo(ICElement element) {
+public Object peekAtInfo(ICElement element) {
 	switch (element.getElementType()) {
 		case ICElement.C_MODEL:
 		case ICElement.C_PROJECT:
@@ -103,7 +103,7 @@
 /**
  * Remember the info for the element.
  */
-protected void putInfo(ICElement element, Object info) {
+public void putInfo(ICElement element, Object info) {
 	switch (element.getElementType()) {
 		case ICElement.C_MODEL:
 		case ICElement.C_PROJECT:
@@ -124,7 +124,7 @@
 /**
  * Removes the info of the element from the cache.
  */
-protected void removeInfo(ICElement element) {
+public void removeInfo(ICElement element) {
 	switch (element.getElementType()) {
 		case ICElement.C_MODEL:
 		case ICElement.C_PROJECT:
Index: model/org/eclipse/cdt/internal/core/model/CModelInfo.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/CModelInfo.java,v
retrieving revision 1.9
diff -u -r1.9 CModelInfo.java
--- model/org/eclipse/cdt/internal/core/model/CModelInfo.java	2 May 2004 03:03:43 -0000	1.9
+++ model/org/eclipse/cdt/internal/core/model/CModelInfo.java	13 Jul 2005 19:42:36 -0000
@@ -19,7 +19,7 @@
 	/**
 	 * Constructs a new C Model Info 
 	 */
-	protected CModelInfo(CElement element) {
+	public CModelInfo(CElement element) {
 		super(element);
 	}
 
@@ -52,7 +52,7 @@
 	/**
 	 * Returns an array of non-C resources contained in the receiver.
 	 */
-	Object[] getNonCResources() {
+	public Object[] getNonCResources() {
 		if (nonCResources == null) {
 			nonCResources = computeNonCResources();
 		}
Index: model/org/eclipse/cdt/internal/core/model/CModelManager.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/CModelManager.java,v
retrieving revision 1.97
diff -u -r1.97 CModelManager.java
--- model/org/eclipse/cdt/internal/core/model/CModelManager.java	8 Jul 2005 21:32:14 -0000	1.97
+++ model/org/eclipse/cdt/internal/core/model/CModelManager.java	13 Jul 2005 19:42:36 -0000
@@ -956,7 +956,7 @@
 	/**
 	 * Returns the set of elements which are out of synch with their buffers.
 	 */
-	protected Map getElementsOutOfSynchWithBuffers() {
+	public Map getElementsOutOfSynchWithBuffers() {
 		return this.elementsOutOfSynchWithBuffers;
 	}
 
@@ -1023,7 +1023,7 @@
 	 * Removes all cached info from the C Model, including all children,
 	 * but does not close this element.
 	 */
-	protected synchronized void removeChildrenInfo(ICElement openedElement) {
+	public synchronized void removeChildrenInfo(ICElement openedElement) {
 		// remove children
 		Object existingInfo = this.cache.peekAtInfo(openedElement);
 		if (openedElement instanceof IParent && existingInfo instanceof CElementInfo) {
Index: model/org/eclipse/cdt/internal/core/model/CProject.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/CProject.java,v
retrieving revision 1.40
diff -u -r1.40 CProject.java
--- model/org/eclipse/cdt/internal/core/model/CProject.java	23 Jun 2005 16:01:07 -0000	1.40
+++ model/org/eclipse/cdt/internal/core/model/CProject.java	13 Jul 2005 19:42:36 -0000
@@ -670,7 +670,7 @@
 	/* (non-Javadoc)
 	 * @see org.eclipse.cdt.internal.core.model.CElement#closing(java.lang.Object)
 	 */
-	protected void closing(Object info) throws CModelException {
+	public void closing(Object info) throws CModelException {
 		if (info instanceof CProjectInfo) {
 			CProjectInfo pinfo = (CProjectInfo)info;
 			if (pinfo.vBin != null) {
Index: model/org/eclipse/cdt/internal/core/model/CProjectInfo.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/CProjectInfo.java,v
retrieving revision 1.13
diff -u -r1.13 CProjectInfo.java
--- model/org/eclipse/cdt/internal/core/model/CProjectInfo.java	26 May 2004 02:59:22 -0000	1.13
+++ model/org/eclipse/cdt/internal/core/model/CProjectInfo.java	13 Jul 2005 19:42:37 -0000
@@ -29,14 +29,14 @@
  * Info for ICProject.
  */
 
-class CProjectInfo extends OpenableInfo {
+public class CProjectInfo extends OpenableInfo {
 
-	BinaryContainer vBin;
-	ArchiveContainer vLib;
-	ILibraryReference[] libReferences;
-	IIncludeReference[] incReferences;
-	ISourceRoot[] sourceRoots;
-	IOutputEntry[] outputEntries;
+	public BinaryContainer vBin;
+	public ArchiveContainer vLib;
+	public ILibraryReference[] libReferences;
+	public IIncludeReference[] incReferences;
+	public ISourceRoot[] sourceRoots;
+	public IOutputEntry[] outputEntries;
 
 	Object[] nonCResources = null;
 
Index: model/org/eclipse/cdt/internal/core/model/CoreModelMessages.properties
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/CoreModelMessages.properties,v
retrieving revision 1.3
diff -u -r1.3 CoreModelMessages.properties
--- model/org/eclipse/cdt/internal/core/model/CoreModelMessages.properties	23 Jun 2005 16:02:15 -0000	1.3
+++ model/org/eclipse/cdt/internal/core/model/CoreModelMessages.properties	13 Jul 2005 19:42:37 -0000
@@ -74,6 +74,6 @@
 PathEntryManager.3=Source attachment not found
 PathEntryManager.4=Library not found
 PathEntryManager.5=Referenced project is not accessible
-PathEntryManager.6=Referenced project is not a C/C++ project
+PathEntryManager.6=Referenced project is not a Make project
 PathEntryManager.1=Workspace include path in accessible
 PathEntryManager.7=Workspace library path in accessible
Index: model/org/eclipse/cdt/internal/core/model/DeleteResourceElementsOperation.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/DeleteResourceElementsOperation.java,v
retrieving revision 1.4
diff -u -r1.4 DeleteResourceElementsOperation.java
--- model/org/eclipse/cdt/internal/core/model/DeleteResourceElementsOperation.java	10 Sep 2004 15:48:15 -0000	1.4
+++ model/org/eclipse/cdt/internal/core/model/DeleteResourceElementsOperation.java	13 Jul 2005 19:42:37 -0000
@@ -21,7 +21,7 @@
 	 * to delete cannot be <code>null</code> or empty, and must have a corresponding
 	 * resource.
 	 */
-	protected DeleteResourceElementsOperation(ICElement[] elementsToProcess, boolean force) {
+	public DeleteResourceElementsOperation(ICElement[] elementsToProcess, boolean force) {
 		super(elementsToProcess, force);
 	}
 
Index: model/org/eclipse/cdt/internal/core/model/DeltaProcessor.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/DeltaProcessor.java,v
retrieving revision 1.61
diff -u -r1.61 DeltaProcessor.java
--- model/org/eclipse/cdt/internal/core/model/DeltaProcessor.java	30 Jun 2005 16:07:38 -0000	1.61
+++ model/org/eclipse/cdt/internal/core/model/DeltaProcessor.java	13 Jul 2005 19:42:37 -0000
@@ -37,7 +37,7 @@
 	 */
 	protected CElementDelta fCurrentDelta;
 	
-	protected IndexManager indexManager = new IndexManager();
+	public IndexManager indexManager = new IndexManager();
 
 	/* The C element that was last created (see createElement(IResource). 
 	 * This is used as a stack of C elements (using getParent() to pop it, and 
Index: model/org/eclipse/cdt/internal/core/model/Openable.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/Openable.java,v
retrieving revision 1.14
diff -u -r1.14 Openable.java
--- model/org/eclipse/cdt/internal/core/model/Openable.java	23 Jun 2005 16:01:07 -0000	1.14
+++ model/org/eclipse/cdt/internal/core/model/Openable.java	13 Jul 2005 19:42:37 -0000
@@ -97,7 +97,7 @@
 	/**
 	 * This element is being closed.  Do any necessary cleanup.
 	 */
-	protected void closing(Object info) throws CModelException {
+	public void closing(Object info) throws CModelException {
 		closeBuffer();
 	}
 
Index: model/org/eclipse/cdt/internal/core/model/SourceManipulationInfo.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/SourceManipulationInfo.java,v
retrieving revision 1.9
diff -u -r1.9 SourceManipulationInfo.java
--- model/org/eclipse/cdt/internal/core/model/SourceManipulationInfo.java	27 Jan 2005 03:39:09 -0000	1.9
+++ model/org/eclipse/cdt/internal/core/model/SourceManipulationInfo.java	13 Jul 2005 19:42:37 -0000
@@ -17,7 +17,7 @@
  * Element info for ISourceReference elements. 
  */
 /* package */
-class SourceManipulationInfo extends CElementInfo {
+public class SourceManipulationInfo extends CElementInfo {
 
 	protected int fStartPos;
 	protected int fLength;
@@ -29,7 +29,7 @@
 
 	int modifiers;
 
-	protected SourceManipulationInfo(CElement element) {
+	public SourceManipulationInfo(CElement element) {
 		super(element);
 		setIsStructureKnown(true);
 		modifiers = 0;
@@ -74,7 +74,7 @@
 		fEndLine = endLine;
 	}
 
-	protected ISourceRange getSourceRange() {
+	public ISourceRange getSourceRange() {
 		return new SourceRange(fStartPos,
 						fLength,
 						fIdStartPos,
Index: model/org/eclipse/cdt/internal/core/model/TranslationUnit.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/TranslationUnit.java,v
retrieving revision 1.39
diff -u -r1.39 TranslationUnit.java
--- model/org/eclipse/cdt/internal/core/model/TranslationUnit.java	8 Jul 2005 21:32:13 -0000	1.39
+++ model/org/eclipse/cdt/internal/core/model/TranslationUnit.java	13 Jul 2005 19:42:37 -0000
@@ -664,7 +664,7 @@
 	/* (non-Javadoc)
 	 * @see org.eclipse.cdt.internal.core.model.Openable#closing(java.lang.Object)
 	 */
-	protected void closing(Object info) throws CModelException {
+	public void closing(Object info) throws CModelException {
 		IContentType cType = CCorePlugin.getContentType(getCProject().getProject(), getElementName());
 		if (cType != null) {
 			setContentTypeID(cType.getId());
Index: model/org/eclipse/cdt/internal/core/model/TranslationUnitInfo.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/model/org/eclipse/cdt/internal/core/model/TranslationUnitInfo.java,v
retrieving revision 1.9
diff -u -r1.9 TranslationUnitInfo.java
--- model/org/eclipse/cdt/internal/core/model/TranslationUnitInfo.java	12 Apr 2004 15:23:23 -0000	1.9
+++ model/org/eclipse/cdt/internal/core/model/TranslationUnitInfo.java	13 Jul 2005 19:42:37 -0000
@@ -11,15 +11,15 @@
 /**
  * The Element Info of a Translation Unit.
  */
-class TranslationUnitInfo extends OpenableInfo {
+public class TranslationUnitInfo extends OpenableInfo {
 
 	/** 
 	 * Timestamp of original resource at the time this element
 	 * was opened or last updated.
 	 */
-	protected long fTimestamp;
+	public long fTimestamp;
 
-	protected TranslationUnitInfo (CElement element) {
+	public TranslationUnitInfo (CElement element) {
 		super(element);
 	}
 
Index: parser/org/eclipse/cdt/core/parser/ParserLanguage.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/parser/org/eclipse/cdt/core/parser/ParserLanguage.java,v
retrieving revision 1.4
diff -u -r1.4 ParserLanguage.java
--- parser/org/eclipse/cdt/core/parser/ParserLanguage.java	23 Jun 2005 16:02:14 -0000	1.4
+++ parser/org/eclipse/cdt/core/parser/ParserLanguage.java	13 Jul 2005 19:42:37 -0000
@@ -21,7 +21,7 @@
 	public final static ParserLanguage C   = new ParserLanguage( 1 );
 	public final static ParserLanguage CPP = new ParserLanguage( 2 );
 
-	private ParserLanguage( int value )
+	protected ParserLanguage( int value )
 	{
 		super( value ); 
 	}
Index: src/org/eclipse/cdt/core/CCorePlugin.java
===================================================================
RCS file: /home/tools/org.eclipse.cdt-core/org.eclipse.cdt.core/src/org/eclipse/cdt/core/CCorePlugin.java,v
retrieving revision 1.85
diff -u -r1.85 CCorePlugin.java
--- src/org/eclipse/cdt/core/CCorePlugin.java	6 Jul 2005 18:36:50 -0000	1.85
+++ src/org/eclipse/cdt/core/CCorePlugin.java	13 Jul 2005 19:42:37 -0000
@@ -18,6 +18,7 @@
 
 import org.eclipse.cdt.core.dom.CDOM;
 import org.eclipse.cdt.core.model.CoreModel;
+import org.eclipse.cdt.core.model.ICoreModel;
 import org.eclipse.cdt.core.model.IWorkingCopy;
 import org.eclipse.cdt.core.parser.IScannerInfoProvider;
 import org.eclipse.cdt.core.resources.IConsole;
@@ -601,7 +602,7 @@
 		return parser;
 	}
 
-	public CoreModel getCoreModel() {
+	public ICoreModel getCoreModel() {
 		return fCoreModel;
 	}
 
Index: model/org/eclipse/cdt/core/model/ICoreModel.java
===================================================================
RCS file: model/org/eclipse/cdt/core/model/ICoreModel.java
diff -N model/org/eclipse/cdt/core/model/ICoreModel.java
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ model/org/eclipse/cdt/core/model/ICoreModel.java	1 Jan 1970 00:00:00 -0000
@@ -0,0 +1,89 @@
+
+package org.eclipse.cdt.core.model;
+
+import org.eclipse.cdt.internal.core.search.indexing.IndexManager;
+import org.eclipse.core.resources.IFile;
+import org.eclipse.core.resources.IFolder;
+import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.runtime.IPath;
+
+
+public interface ICoreModel {
+
+	/**
+	 * Creates an ICElement form and IPath. Returns null if not found.
+	 */
+	public abstract ICElement create(IPath path);
+
+	/**
+	 * Creates a translation form and IPath. Returns null if not found.
+	 */
+	public abstract ITranslationUnit createTranslationUnitFrom(ICProject cproject, IPath path);
+
+	/**
+	 * Creates an ICElement form and IFile. Returns null if not found.
+	 */
+	public abstract ICElement create(IFile file);
+
+	/**
+	 * Creates an ICElement form and IFolder. Returns null if not found.
+	 */
+	public abstract ICContainer create(IFolder folder);
+
+	/**
+	 * Creates an ICElement form and IProject. Returns null if not found.
+	 */
+	public abstract ICProject create(IProject project);
+
+	/**
+	 * Creates an ICElement form and IResource. Returns null if not found.
+	 */
+	public abstract ICElement create(IResource resource);
+
+	/**
+	 * Returns the default ICModel.
+	 */
+	public abstract ICModel getCModel();
+
+	/**
+	 * Return true if IFile is a shared library, i.e. libxx.so
+	 */
+	public abstract boolean isSharedLib(IFile file);
+
+	/**
+	 * Return true if IFile is a an object(ELF), i.e. *.o
+	 */
+	public abstract boolean isObject(IFile file);
+
+	/**
+	 * Return true if IFile is an ELF executable
+	 */
+	public abstract boolean isExecutable(IFile file);
+
+	/**
+	 * Return true if IFile is an ELF.
+	 */
+	public abstract boolean isBinary(IFile file);
+
+	/**
+	 * Return true if IFile is an Achive, *.a
+	 */
+	public abstract boolean isArchive(IFile file);
+
+	public abstract void addElementChangedListener(IElementChangedListener listener);
+
+	/**
+	 * Removes the given element changed listener. Has no affect if an
+	 * identical listener is not registered.
+	 * 
+	 * @param listener
+	 *            the listener
+	 */
+	public abstract void removeElementChangedListener(IElementChangedListener listener);
+
+	public abstract void startIndexing();
+
+	public abstract IndexManager getIndexManager();
+
+}
