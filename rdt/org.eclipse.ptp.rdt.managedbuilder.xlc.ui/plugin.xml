<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>
   <extension
         point="org.eclipse.cdt.managedbuilder.core.buildDefinitions">
      <managedBuildRevision
            fileVersion="4.0.0">
      </managedBuildRevision>
      <builder
            commandLauncher="org.eclipse.ptp.rdt.core.remotemake.RemoteCommandLauncher"
            id="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.remoteMakeBuilder"
            isAbstract="false"
            isVariableCaseSensitive="false"
            name="%builder.name"
            superClass="cdt.managedbuild.target.gnu.builder">
      </builder>
      <projectType
            buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe"
            id="org.eclipse.ptp.rdt.managedbuild.target.xlc.exe"
            isAbstract="false"
            isTest="false"
            name="%TargetName.xlc.exe"
            projectEnvironmentSupplier="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.environment.RemoteProjectEnvironmentSupplier"
            projectMacroSupplier="org.eclipse.cdt.managedbuilder.xlc.ui.XLCProjectMacroSupplier">
      	<configuration
      		name="%ConfigName.Dbg"
      		artifactExtension="exe"
      		cleanCommand="rm -rf"
      		errorParsers="org.eclipse.cdt.errorparsers.xlc.XlcErrorParser"
			id="org.eclipse.ptp.rdt.managedbuild.config.xlc.exe.debug">
			<toolChain
         archList="all"
         configurationEnvironmentSupplier="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.environment.RemoteConfigurationEnvironmentSupplier"
         id="org.eclipse.ptp.rdt.managedbuild.toolchain.xlc.exe.debug"
         name="%ToolChainName.Dbg"
         osList="all"
         scannerConfigDiscoveryProfileId="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.RemoteXLCPerFileProfile"
         supportsManagedBuild="true"
         targetTool="org.eclipse.ptp.rdt.managedbuild.tool.xlc.c.linker.exe.debug;org.eclipse.ptp.rdt.managedbuild.tool.xlc.cpp.linker.exe.debug">
			      <targetPlatform
					  id="org.eclipse.ptp.rdt.managedbuild.target.xlc.platform.exe.debug"
				 	  name="%PlatformName.Dbg"          					  
					  osList="all"					  
					  archList="all">
				  </targetPlatform>
			  	  <builder
					  superClass="org.eclipse.ptp.rdt.managedbuilder.xlc.builder.base"
					  id="org.eclipse.ptp.rdt.managedbuilder.xlc.builder.exe.debug">		              
			      </builder>
			      <tool
                      id="org.eclipse.ptp.rdt.managedbuild.tool.xlc.cpp.compiler.exe.debug"
                      superClass="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.compiler.cpp">
                      <option
                          id="org.eclipse.ptp.rdt.xlc.cpp.compiler.exe.debug.option.optimization.level"
                          defaultValue="xlc.c.compiler.optimization.level.none"
                          superClass="xlc.c.compiler.option.optimization.level">
                      </option>
                      <option
						  id="org.eclipse.ptp.rdt.xlc.cpp.compiler.exe.debug.option.debugging.g"
                          defaultValue="true"
                          superClass="xlc.c.compiler.option.ecd.g">
                      </option>
                  </tool>
                  <tool
					  id="org.eclipse.ptp.rdt.managedbuild.tool.xlc.c.compiler.exe.debug"
                      superClass="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.compiler.c">
					  <option
						  id="org.eclipse.ptp.rdt.xlc.c.compiler.exe.debug.option.optimization.level"
						  defaultValue="xlc.c.optimization.level.none"
						  superClass="xlc.c.compiler.option.optimization.level">
					  </option>
					  <option
						  id="org.eclipse.ptp.rdt.xlc.c.compiler.exe.debug.option.debugging.g"
						  defaultValue="true"
						  superClass="xlc.c.compiler.option.ecd.g">
					  </option>
                  </tool>
                  <tool
                      id="org.eclipse.ptp.rdt.managedbuild.tool.xlc.c.linker.exe.debug"
                      superClass="org.eclipse.ptp.rdt.managedbuild.tool.xlc.c.linker.exe.base">
                  </tool>
                  <tool
                      id="org.eclipse.ptp.rdt.managedbuild.tool.xlc.cpp.linker.exe.debug"
                      superClass="org.eclipse.ptp.rdt.managedbuild.tool.xlc.cpp.linker.exe.base">
                  </tool>                  
				  <tool
					  id="org.eclipse.ptp.rdt.managedbuild.tool.xlc.assembler.exe.debug"
					  superClass="cdt.managedbuild.tool.xlc.assembler">
				  </tool>
			 </toolChain>  
		</configuration>
		<configuration
			name="%ConfigName.Rel"
			artifactExtension="exe"
			cleanCommand="rm -rf"
			errorParsers="org.eclipse.cdt.errorparsers.xlc.XlcErrorParser"
			id="org.eclipse.ptp.rdt.managedbuild.config.xlc.exe.release">
			<toolChain
         archList="all"
         configurationEnvironmentSupplier="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.environment.RemoteConfigurationEnvironmentSupplier"
         id="org.eclipse.ptp.rdt.managedbuild.toolchain.xlc.exe.release"
         name="%ToolChainName.Dbg"
         osList="all"
         scannerConfigDiscoveryProfileId="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.RemoteXLCPerFileProfile"
         supportsManagedBuild="true"
         targetTool="org.eclipse.ptp.rdt.managedbuild.tool.xlc.c.linker.exe.release;org.eclipse.ptp.rdt.managedbuild.tool.xlc.cpp.linker.exe.release">
		          <targetPlatform
		              id="org.eclipse.ptp.rdt.managedbuild.target.xlc.platform.exe.release"
		              name="%PlatformName.Rel"		             
		              osList="all"
		              archList="all">		              
		          </targetPlatform>
				  <builder
				  	  superClass="org.eclipse.ptp.rdt.managedbuilder.xlc.builder.base"
				      id="org.eclipse.ptp.rdt.managedbuilder.xlc.builder.release">
				  </builder> 
				  <tool
                      id="org.eclipse.ptp.rdt.managedbuild.tool.xlc.cpp.compiler.exe.release"
                      superClass="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.compiler.cpp">                     
					  <option
						  id="org.eclipse.ptp.rdt.xlc.cpp.compiler.exe.release.option.optimization.level"
						  defaultValue="xlc.c.optimization.level.Level5"
						  superClass="xlc.c.compiler.option.optimization.level">
					  </option>
					  <option
						  id="org.eclipse.ptp.rdt.xlc.cpp.compiler.exe.release.option.debugging.g"
						  defaultValue="false"
						  superClass="xlc.c.compiler.option.ecd.g">
					  </option>
                  </tool>
                  <tool
                      id="org.eclipse.ptp.rdt.managedbuild.tool.xlc.c.compiler.exe.release"
                      superClass="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.compiler.c">                          
					  <option
						  id="org.eclipse.ptp.rdt.xlc.c.compiler.exe.release.option.optimization.level"
						  defaultValue="xlc.c.optimization.level.Level5"
						  superClass="xlc.c.compiler.option.optimization.level">
					  </option>
					  <option
						  id="org.eclipse.ptp.rdt.xlc.c.compiler.exe.release.option.debugging.g"
						  defaultValue="false"
						  superClass="xlc.c.compiler.option.ecd.g">
					  </option>
                  </tool>
                  <tool
                      id="org.eclipse.ptp.rdt.managedbuild.tool.xlc.c.linker.exe.release"
                      superClass="org.eclipse.ptp.rdt.managedbuild.tool.xlc.c.linker.exe.base">
                  </tool> 
                  <tool
                      id="org.eclipse.ptp.rdt.managedbuild.tool.xlc.cpp.linker.exe.release"
                      superClass="org.eclipse.ptp.rdt.managedbuild.tool.xlc.cpp.linker.exe.base">
                  </tool>  
				  <tool
					  id="org.eclipse.ptp.rdt.managedbuild.tool.xlc.assembler.exe.release"
					  superClass="org.eclipse.ptp.rdt.managedbuild.tool.xlc.assembler.exe.base">
				  </tool>
            </toolChain>
            
		</configuration>
	</projectType>	
	<toolChain
       archList="all"
       configurationEnvironmentSupplier="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.environment.RemoteConfigurationEnvironmentSupplier"
       id="org.eclipse.ptp.rdt.managedbuild.toolchain.xlc.base"
       name="%ToolChainName.Dbg"
       osList="all"
       scannerConfigDiscoveryProfileId="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.RemoteXLCPerFileProfile"
       supportsManagedBuild="false"
       targetTool="org.eclipse.ptp.rdt.managedbuild.tool.xlc.c.linker.exe.debug;org.eclipse.ptp.rdt.managedbuild.tool.xlc.cpp.linker.exe.debug">
			  	  <builder
					  superClass="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.remoteMakeBuilder"
					  id="org.eclipse.ptp.rdt.managedbuilder.xlc.builder.base">		              
			      </builder>
			      <tool
                      id="org.eclipse.ptp.rdt.managedbuild.tool.xlc.cpp.compiler.base"
                      superClass="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.compiler.cpp">
                  </tool>
                  <tool
					  id="org.eclipse.ptp.rdt.managedbuild.tool.xlc.c.compiler.base"
                      superClass="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.compiler.c">
                  </tool>
                  <tool
                      id="org.eclipse.ptp.rdt.managedbuild.tool.xlc.c.linker.exe.base"
                      superClass="cdt.managedbuild.tool.xlc.c.linker">
                  </tool>
                  <tool
                      id="org.eclipse.ptp.rdt.managedbuild.tool.xlc.cpp.linker.exe.base"
                      superClass="cdt.managedbuild.tool.xlc.cpp.linker">
                  </tool>                  
				  <tool
					  id="org.eclipse.ptp.rdt.managedbuild.tool.xlc.assembler.exe.base"
					  superClass="cdt.managedbuild.tool.xlc.assembler">
				  </tool>
			 </toolChain>
 <tool
       id="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.compiler.cpp"
       isAbstract="false"
       name="%tool.cpp.name"
       superClass="cdt.managedbuild.tool.xlc.cpp.compiler.abstract">
           <inputType
          id="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.cpp.c.compiler.input"
          primaryInput="true"
          scannerConfigDiscoveryProfileId="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.RemoteXLCPerFileProfile"
          superClass="cdt.managedbuild.tool.xlc.c.compiler.input">
          </inputType>
    <inputType
          id="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.cpp.compiler.input"
          primaryInput="true"
          scannerConfigDiscoveryProfileId="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.RemoteXLCPerFileProfile"
          superClass="cdt.managedbuild.tool.xlc.cpp.compiler.input">
    </inputType>
    <outputType
			outputs="o"
            buildVariable="OBJS"
            id="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.cpp.compiler.output">
            </outputType>
 </tool>
 <tool
       id="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.compiler.c"
       isAbstract="false"
       name="%tool.c.name"
       superClass="cdt.managedbuild.tool.xlc.c.compiler.abstract">
    <inputType
          id="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.c.compiler.input"
          primaryInput="true"
          scannerConfigDiscoveryProfileId="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.RemoteXLCPerFileProfile"
          superClass="cdt.managedbuild.tool.xlc.c.compiler.input">
    </inputType>
        <outputType
			outputs="o"
            buildVariable="OBJS"
            id="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.c.compiler.output">
            </outputType>
 </tool>        		
   </extension>
   <extension
         id="RemoteXLCPerProjectProfile"
         name="%extension.name"
         point="org.eclipse.cdt.make.core.ScannerConfigurationDiscoveryProfile">
     <scannerInfoCollector
            class="org.eclipse.cdt.make.xlc.core.scannerconfig.PerProjectXLCScannerInfoCollector"
            scope="project"/>
     		<!-- The ScannerInfoProvider search for the information needed by the profile and send it to the ScannerInfoCollector -->
		<scannerInfoProvider providerId="specsFile">
			<!-- Specifies the compiler command that returns the information about standard include directories and standard definitions -->
			<!-- The compiler command used will be always a C compiler command -->
			<!-- The output for C or C++ projects will be different as the ScannerInfoProvider substitute the ${specs_file} variable below with a dummy "c" file or "cpp" file -->
			<run
					arguments="-E -v ${specs_file_path}"
					command="${XL_COMPILER_ROOT}/xlC"
					class="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.scannerdiscovery.RemoteXLCSpecsRunSIProvider">
			</run>
			<!-- Specifies the parser for the output generated by the compiler with the above command line -->
			<scannerInfoConsoleParser
					class="org.eclipse.cdt.make.xlc.core.scannerconfig.XlCSpecsConsoleParser">
			</scannerInfoConsoleParser>
		</scannerInfoProvider>
  <buildOutputProvider>
     <scannerInfoConsoleParser
           class="org.eclipse.cdt.make.xlc.core.scannerconfig.XLCPerProjectBuildOutputParser">
     </scannerInfoConsoleParser>
  </buildOutputProvider>
   </extension>
   <extension
         id="RemoteXLCPerFileProfile"
         name="%scannerConfigProfile.name"
         point="org.eclipse.cdt.make.core.ScannerConfigurationDiscoveryProfile">
      <scannerInfoCollector
            class="org.eclipse.cdt.make.xlc.core.scannerconfig.PerFileXLCScannerInfoCollector"
            scope="file">
      </scannerInfoCollector>
      <scannerInfoProvider providerId="specsFile">
			<!-- Specifies the compiler command that returns the information about standard include directories and standard definitions -->
			<!-- The compiler command used will be always a C compiler command -->
			<!-- The output for C or C++ projects will be different as the ScannerInfoProvider substitute the ${specs_file} variable below with a dummy "c" file or "cpp" file -->
			<run
					arguments="-E -v ${specs_file_path}"
					command="${XL_COMPILER_ROOT}/xlC"
					class="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.scannerdiscovery.RemoteXLCSpecsRunSIProvider">
			</run>
			<!-- Specifies the parser for the output generated by the compiler with the above command line -->
			<scannerInfoConsoleParser
					class="org.eclipse.cdt.make.xlc.core.scannerconfig.XlCSpecsConsoleParser">
			</scannerInfoConsoleParser>
		</scannerInfoProvider>
      <buildOutputProvider>
         <scannerInfoConsoleParser
               class="org.eclipse.cdt.make.xlc.core.scannerconfig.XLCPerFileBuildOutputParser">
         </scannerInfoConsoleParser>
      </buildOutputProvider>
   </extension>
   <!-- activity to disable the local XL Compiler path properties page extension defined in org.eclipse.cdt.managedbuilder.xlc.ui-->
    <extension point="org.eclipse.ui.activities">
    <!-- this category is redefined from the one in org.eclipse.ptp.rdt.ui, they have no different-->
     <category
             id="org.eclipse.ptp.rdt.ui.rdtCategory"
             name="%rdt.category.name.0">
       </category>
     <activity
       		 id="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.XLCompilerPropertiesPageActivity"
       		 name="%CDTXLCompilerProp.name">
       </activity>
       <categoryActivityBinding
       		 activityId="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.XLCompilerPropertiesPageActivity"
       		 categoryId="org.eclipse.ptp.rdt.ui.rdtCategory">
       </categoryActivityBinding>
       <activityPatternBinding
       		 activityId="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.XLCompilerPropertiesPageActivity"
       		 pattern="org.eclipse.cdt.managedbuilder.xlc.ui/org.eclipse.cdt.managedbuilder.xlc.ui.properties.samplePropertyPage">
       </activityPatternBinding>
       <!-- redefine the XL Compiler path property page extension which will cover both local and remote directory browsing.-->
        </extension>
         <extension
         point="org.eclipse.ui.propertyPages">
         <page
            category="org.eclipse.cdt.managedbuilder.ui.properties.Page_head_build"
            class="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.properties.RemoteXLCompilerPropertyPage"
            id="org.eclipse.ptp.rdt.managedbuilder.xlc.ui.properties.RemoteXLCompilerPropertyPage"
            name="%XLCompilerPropertyPage.name">
         <filter
               name="projectNature"
               value="org.eclipse.cdt.managedbuilder.core.managedBuildNature">
         </filter>            
         <enabledWhen>
            <or>
		     <instanceof value="org.eclipse.core.resources.IProject"/>
		     <instanceof value="org.eclipse.cdt.core.model.ICProject"/>
		     
		     <instanceof value="org.eclipse.core.resources.IFolder"/>
		     <instanceof value="org.eclipse.cdt.core.model.ICContainer"/>

         	 <instanceof value="org.eclipse.cdt.core.model.ITranslationUnit"/>
	         <instanceof value="org.eclipse.core.resources.IFile"/>
		    </or>          
         </enabledWhen>
      </page>
       </extension>

</plugin>
