################################## PBS DYNAMIC LAUNCH TAB TEST SCRIPT ####################################
## This sequence of actions should be used to check the consistency of the UI logic                     ##
##                                                                                                      ##
## Albert L. Rossi (NCSA)   05/13/2010                                                                  ##
##########################################################################################################

NOTE:   I have not been successful in getting the scroll bars to behave correctly on the Resource Tab's
ScrollingComposite.  When the Launch Tab is first produced, they do not appear.  However, if you move
off the Resource Tab (say, to Application), and then back, they appear.  I have fiddled with layout,
redraw, and a few other things like turning the ScrollingComposite's expandable settings on and off,
or adjusting the min size, all to no avail.  The problem seems to lie in something that I am doing to
generate the widgets dynamically, but I have yet to discover what.  Any suggestions appreciated here.

----------------------------------------------------------------------------------------------------------

NOTE:  After each change, be sure to select the "apply" button to save it.

1.  CREATE THREE PBS Resource Managers (Parallel Runtime Perspective, Resource Managers View)
    For the purposes of this test, none actually need to be remote; just point them to the executable
    in the PBS Jproxy plugin.

2.  Using the second tab (PBS Batch Script Configuration) in the Resource Manager Edit wizard:

    a.  Create a new template (from either of the two provided), and label it 'partial' (or whatever you 
        wish); modify it so you can distinguish it from the other two.

    b.  Map each of the three RMs to one of the three templates; e.g.,

    	  RM1: default_template;
        RM2: full_template;
        RM3: partial_template.

3.  Create two separate Run Configurations.  For our purposes, I will label these CONFIG_A and CONFIG_B.
   	
    For CONFIG_A, choose RM1.
    For CONFIG_B, choose RM2.

    You should see appear in A the default_template, and in B the full_template, as yet unpopulated by 
    anything except predefined default values (MPI = mpiexec, walltime = 00:30:00).

4.  Open CONFIG_A.
    Use a small set of values by which you can identify this configuration:  say, MPI = mpiexec and Job = A
    Set these, and close the configuration.
    Reopen.  You should see the same values in the default_template.

    Open CONFIG_B
    Use a small set of values by which you can identify this configuration:  say, MPI = mpirun and Job = B
    Set these, and close the configuration.
    Reopen.  Again, you should see the same values in the full_template.

    Reopen CONFIG_A.  Nothing should have changed.  Close.
    Reopen CONFIG_B.  Nothing should have changed.  Close.

5.  Now let's try changing templates within the Run Configuration.

    Open CONFIG_A.
    Choose full_template.
    This template should appear, but the values you set in the default_template should not have changed.
    
    Close and reopen.
    
    The template is still full_template.  You have actually changed the 
    the (default) template associated with this RM by reselecting here.
    
    To demonstrate that the values are not attached to the RM, but to the Run Configuration:

    Open CONFIG_B.
    This should have the full_template, but with the B values.  
    Select the default_template.  Again, the B values remain.  Close this configuration and reopen B.
    The default_template will appear with B's values; etc.    
   
6.  Now we will reset the Resource Manager associated with each of these Run Configurations.
    
    Open CONFIG_A.
    Choose RM3.  The partial_template should appear with the A values.
    Close and reopen.  You should see RM3, the partial_template and A values.
     
    Open CONFIG_B.
    Choose RM3.  The partial_template should appear with the B values.
    Close and reopen.  You should see RM3, the partial_template and B values.

7.  Change values.

    Open CONFIG_A.
    Change the MPI command to blank, and the Job to "A1".
    Close.  Reopen.  You should now see the new values.  
    Switch template.  Again, the new values should be there.

8.  Inspecting the batch script.  

    Open one of the Run Configurations.
    First, be sure that you have chosen an Application using the Application Tab.
     
    Using the Arguments Tab, create one or two fake command-line arguments for the executable (f0 -b foo).
    Using the Environment tab, add some fake environment variables (A=a, B=b), etc.
    
    Now click the "View Script" button.  You should see all unused attributes eliminated and everything 
    replaced correctly.  
     
    The environment variables should appear just after the PBS directives as bash 'export' statements.

    If you use the full_template, you will see the "EDIT PREPENDED COMMANDS" and "EDIT POSTPENDED COMMANDS" 
    buttons.  You may add arbitrary shell-script commands before or after the executable line with these.  

9.  MPI -n computation.

    If your attributes include either Resource_List.ncpus or Resource_List.nodes, an attempt is made to compute 
    the value of the mpirun/mpiexec -n argument.
     
    Try setting nodes=3:ppn=4 and see what happens (View Script).
    
    Be sure that only one of these two attributes is defined for the template; otherwise
    you will have to ensure that both are correct (moreover, a given batch system
    may or may not be set up to accept both as defined).