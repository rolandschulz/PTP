Account_Name=Format: string
Checkpoint=Format: the strings "n" (no checkpointing), "s" (to be performed only \
 when the server executing the job is shutdown), "c" (to be performed at the default \
  minimum time for the server executing the job), "c=mmmm" (to be performed at an \
   interval of minutes which is the integer number of minutes of CPU time \
    used by the job; value must be greater than zero); default value: "u", which is unspecified.
depend=Format: "type:jobid[,jobid...]"; default value: no dependencies.
destination=Format: queue[@server].
directive=See the paragraph on script directives in the Extended Description section. \
  If the option is presented with a directive_prefix argument that is the null string, \
   qsub will not scan the script file for directives.
Error_Path=Format: "[hostname:]pathname"; default value: (job_name).e(job_number). \
  If the option is not specified, the default file name for the standard error stream \
   will be used. The default name has the following form: job_name.esequence_number \
    where job_name is the name of the job, see -N option, and sequence_number is the \
     job number assigned when the job is submitted.	
group_list=Format: "group_name[@host][,group_name[@host]...]".  When a job is to \
 be placed into execution, the server will select a group name according to the \
  following ordered set of rules: 1) Select the group name from the list for which \
   the associated host name matches the name of the execution host; 2) Select the \
    group name which has no associated host name, the wild card name; 3) Use the \
     login group for the user name under which the job will be run.
Hold_Types=If the set is not null, the job will not be scheduled for execution \
 and is said to be in the hold state. Note, the hold state takes precedence over \
  the wait state. Format: string made up of the letters 'u', 's', 'o'; default \
   value: no hold.
Job_Name=Format: string up to 15 characters, first character must be alphabetic; \
 default value: the base name of the job script or STDIN.
Join_Path=Format: boolean, values accepted are "True", "TRUE", "true", "Y", "y", \
 "1", "False", "FALSE", "false", "N", "n", "0"; default value: false.	
Keep_Files=Format: "o", "e", "oe" or "eo"; default value: no keep, return files \
 to submission host.
Mail_Points=Format: string made up of the letters 'a' for abort, 'b' for beginning, \
 and default value: 'a', send on job abort.	
Mail_Users=Format: "user@host[,user@host]"; default value: job owner only.
Output_Path=Format: "[hostname:]pathname"; default value: (job_name).o(job_number). \
  If the option is not specified, the default file name for the standard error \
   stream will be used. The default name has the following form: job_name.osequence_number \
    where job_name is the name of the job, see -N option, and sequence_number is \
     the job number assigned when the job is submitted.
Priority=Format: "[+|-]nnnnn"; default value: undefined.
Rerunnable=Format: "y" or "n", see Join_Path; default value: y, job is rerunable.
Resource_List.arch=This defaults to whatever the PBS_MACH string is set to in "local.mk". Units: string.
Resource_List.cput=Format: [[hours:]minutes:]seconds[.milliseconds].
Resource_List.file=Format: integer[suffix]; the suffix is a multiplier in bytes \
 or words (word size of the host): b (bytes), w (words), kb/kw (kilo), mb/mw (mega), gb/bw (giga).
Resource_List.host=
Resource_List.mem=Format: integer[suffix]; the suffix is a multiplier in bytes \
 or words (word size of the host): b (bytes), w (words), kb/kw (kilo), mb/mw (mega), gb/bw (giga).
Resource_List.ncpus=
Resource_List.nice=0 to 10.
Resource_List.nodes=The value is one or more node_specs joined with the '+' character, \
 "node_spec[+node_spec...]. Each node_spec is a number of nodes required of the type \
  declared in the node_spec and a name or one or more properity or properities desired \
   for the nodes. The number, the name, and each properity in the node_spec are \
    separated by a colon ':'. If no number is specified, one (1) is assumed. \
     Units: string. The name of a node is its hostname. The properties of nodes \
      are: ppn=# specifying the number of processors per node requested; defaults \
       to 1; or an arbitrary string defined by system administrator.  Example: \
        To ask for 2 processors on each of two blue nodes and three processors \
         on one red node: -l nodes=2:blue:ppn=2+red:ppn=3.
Resource_List.ompthreads=
Resource_List.pcput=Format: [[hours:]minutes:]seconds[.milliseconds].
Resource_List.pmem=Format: integer[suffix]; the suffix is a multiplier in bytes \
 or words (word size of the host): b (bytes), w (words), kb/kw (kilo), mb/mw (mega), gb/bw (giga).
Resource_List.pvmem=Format: integer[suffix]; the suffix is a multiplier in bytes \
 or words (word size of the host): b (bytes), w (words), kb/kw (kilo), mb/mw (mega), gb/bw (giga).
Resource_List.vmem=Format: integer[suffix]; the suffix is a multiplier in bytes \
 or words (word size of the host): b (bytes), w (words), kb/kw (kilo), mb/mw (mega), gb/bw (giga).
Resource_List.walltime=Format: [[hours:]minutes:]seconds[.milliseconds].
Shell_Path_List=Format: "path[@host][,path[@host]...]". If this is null, then the \
 user's login shell on the host of execution will be used. Default value: null, login shell.
stagein=Format: local_path@remote_host:remote_path
stageout=Format: local_path@remote_host:remote_path		
User_List=When a job is to be placed into execution, the server will select a user \
 name from the list according to the following ordered set of rules: 1) Select the \
  user name from the list for which the associated host name matches the name of the \
   execution host; 2) Select the user name which has no associated host name, the \
    wild card name; 3) Use the Job_Owner as the user name. Default value: job owner name.