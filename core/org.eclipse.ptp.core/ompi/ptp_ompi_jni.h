/*******************************************************************************
 * Copyright (c) 2005 The Regents of the University of California. 
 * This material was produced under U.S. Government contract W-7405-ENG-36 
 * for Los Alamos National Laboratory, which is operated by the University 
 * of California for the U.S. Department of Energy. The U.S. Government has 
 * rights to use, reproduce, and distribute this software. NEITHER THE 
 * GOVERNMENT NOR THE UNIVERSITY MAKES ANY WARRANTY, EXPRESS OR IMPLIED, OR 
 * ASSUMES ANY LIABILITY FOR THE USE OF THIS SOFTWARE. If software is modified 
 * to produce derivative works, such modified software should be clearly marked, 
 * so as not to confuse it with the version available from LANL.
 * 
 * Additionally, this program and the accompanying materials 
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * LA-CC 04-115
 *******************************************************************************/
 
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker */

#ifndef _Included_org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker
#define _Included_org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: successful_load */
/*
 * Class:     org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker
 * Method:    OMPIGetError
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker_OMPIGetError
  (JNIEnv *, jobject);

/*
 * Class:     org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker
 * Method:    OMPIInit
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker_OMPIInit
  (JNIEnv *, jobject);

/*
 * Class:     org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker
 * Method:    OMPIStartDaemon
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker_OMPIStartDaemon
  (JNIEnv *, jobject, jstring, jstring, jstring, jobjectArray);

/*
 * Class:     org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker
 * Method:    OMPIShutdown
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker_OMPIShutdown
  (JNIEnv *, jobject);

/*
 * Class:     org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker
 * Method:    OMPIFinalize
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker_OMPIFinalize
  (JNIEnv *, jobject);

/*
 * Class:     org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker
 * Method:    OMPIProgress
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker_OMPIProgress
  (JNIEnv *, jobject);

/*
 * Class:     org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker
 * Method:    OMPIRun
 * Signature: ([Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker_OMPIRun
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker
 * Method:    OMPITerminateJob
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker_OMPITerminateJob
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker
 * Method:    OMPIGetJobs
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker_OMPIGetJobs
  (JNIEnv *, jobject);

/*
 * Class:     org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker
 * Method:    OMPIGetProcesses
 * Signature: (Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker_OMPIGetProcesses
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker
 * Method:    OMPIGetProcessesAttribute
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker_OMPIGetProcessesAttribute
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker
 * Method:    OMPIGetMachines
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker_OMPIGetMachines
  (JNIEnv *, jobject);

/*
 * Class:     org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker
 * Method:    OMPIGetNodes
 * Signature: (Ljava/lang/String;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker_OMPIGetNodes
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker
 * Method:    OMPIGetNodeMachineName
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker_OMPIGetNodeMachineName
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker
 * Method:    OMPIGetNodeAttribute
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_eclipse_ptp_rtsystem_ompi_OMPIJNIBroker_OMPIGetNodeAttribute
  (JNIEnv *, jobject, jstring, jstring);

#ifdef __cplusplus
}
#endif
#endif
