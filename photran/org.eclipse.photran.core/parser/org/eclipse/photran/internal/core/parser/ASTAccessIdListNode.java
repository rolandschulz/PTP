// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser; import org.eclipse.photran.internal.core.lexer.*;


/**
 * <AccessIdList> ::= AccessId:<AccessId>  :production314
 * <AccessIdList> ::= @:<AccessIdList> tcomma:T_COMMA AccessId:<AccessId>  :production315
 */
public class ASTAccessIdListNode extends ParseTreeNode
{
    public ASTAccessIdListNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public int count()
    {
        ParseTreeNode node = this;
        int count = 1;
        while (node.getChild("@") != null)
        {
            count++;
            node = node.getChild("@");
        }
        return count;
    }

    public ASTAccessIdNode getASTAccessId(int index)
    {
        ASTAccessIdListNode node = this;
        for (int i = 0; i < index; i++)
            node = (ASTAccessIdListNode)node.getChild("@");
        return (ASTAccessIdNode)node.getChild("AccessId");
    }

    public Token getASTTcomma(int index)
    {
        ASTAccessIdListNode node = this;
        for (int i = 0; i < index; i++)
            node = (ASTAccessIdListNode)node.getChild("@");
        return node.getChildToken("tcomma");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTAccessIdListNode(this); }
}
