// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser; import org.eclipse.photran.internal.core.lexer.*;


/**
 * <ComputedGotoStmt> ::= LblDef:<LblDef> GoToKw:<GoToKw> tlparen:T_LPAREN LblRefList:<LblRefList> trparen:T_RPAREN Expr:<Expr> teos:T_EOS  :production653
 * <ComputedGotoStmt> ::= LblDef:<LblDef> GoToKw:<GoToKw> tlparen:T_LPAREN LblRefList:<LblRefList> trparen:T_RPAREN CommaExp:<CommaExp> teos:T_EOS  :production654
 */
public class ASTComputedGotoStmtNode extends ParseTreeNode
{
    public ASTComputedGotoStmtNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public ASTLblDefNode getASTLblDef()
    {
        return (ASTLblDefNode)this.getChild("LblDef");
    }

    public ASTGoToKwNode getASTGoToKw()
    {
        return (ASTGoToKwNode)this.getChild("GoToKw");
    }

    public Token getASTTlparen()
    {
        return this.getChildToken("tlparen");
    }

    public ASTLblRefListNode getASTLblRefList()
    {
        return (ASTLblRefListNode)this.getChild("LblRefList");
    }

    public Token getASTTrparen()
    {
        return this.getChildToken("trparen");
    }

    public ASTExprNode getASTExpr()
    {
        return (ASTExprNode)this.getChild("Expr");
    }

    public Token getASTTeos()
    {
        return this.getChildToken("teos");
    }

    public ASTCommaExpNode getASTCommaExp()
    {
        return (ASTCommaExpNode)this.getChild("CommaExp");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTComputedGotoStmtNode(this); }
}
