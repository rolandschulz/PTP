// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser; import org.eclipse.photran.internal.core.lexer.*;


/**
 * <TypeSpec> ::= tinteger:T_INTEGER  :production232
 * <TypeSpec> ::= treal:T_REAL  :production233
 * <TypeSpec> ::= tdoubleprecision:T_DOUBLEPRECISION  :production234
 * <TypeSpec> ::= tcomplex:T_COMPLEX  :production235
 * <TypeSpec> ::= tlogical:T_LOGICAL  :production236
 * <TypeSpec> ::= tcharacter:T_CHARACTER  :production237
 * <TypeSpec> ::= tinteger:T_INTEGER KindSelector:<KindSelector>  :production238
 * <TypeSpec> ::= treal:T_REAL KindSelector:<KindSelector>  :production239
 * <TypeSpec> ::= tdouble:T_DOUBLE tprecision:T_PRECISION  :production240
 * <TypeSpec> ::= tcomplex:T_COMPLEX KindSelector:<KindSelector>  :production241
 * <TypeSpec> ::= tcharacter:T_CHARACTER CharSelector:<CharSelector>  :production242
 * <TypeSpec> ::= tlogical:T_LOGICAL KindSelector:<KindSelector>  :production243
 * <TypeSpec> ::= ttype:T_TYPE tlparen:T_LPAREN TypeName:<TypeName> trparen:T_RPAREN  :production244
 */
public class ASTTypeSpecNode extends ParseTreeNode
{
    public ASTTypeSpecNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public Token getASTTinteger()
    {
        return this.getChildToken("tinteger");
    }

    public Token getASTTreal()
    {
        return this.getChildToken("treal");
    }

    public Token getASTTdoubleprecision()
    {
        return this.getChildToken("tdoubleprecision");
    }

    public Token getASTTcomplex()
    {
        return this.getChildToken("tcomplex");
    }

    public Token getASTTlogical()
    {
        return this.getChildToken("tlogical");
    }

    public Token getASTTcharacter()
    {
        return this.getChildToken("tcharacter");
    }

    public ASTKindSelectorNode getASTKindSelector()
    {
        return (ASTKindSelectorNode)this.getChild("KindSelector");
    }

    public Token getASTTdouble()
    {
        return this.getChildToken("tdouble");
    }

    public Token getASTTprecision()
    {
        return this.getChildToken("tprecision");
    }

    public ASTCharSelectorNode getASTCharSelector()
    {
        return (ASTCharSelectorNode)this.getChild("CharSelector");
    }

    public Token getASTTtype()
    {
        return this.getChildToken("ttype");
    }

    public Token getASTTlparen()
    {
        return this.getChildToken("tlparen");
    }

    public ASTTypeNameNode getASTTypeName()
    {
        return (ASTTypeNameNode)this.getChild("TypeName");
    }

    public Token getASTTrparen()
    {
        return this.getChildToken("trparen");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTTypeSpecNode(this); }
}
