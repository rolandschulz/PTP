// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser;

import org.eclipse.photran.internal.core.lexer.Token;


/**
 * <Variable> ::= DataRef:<DataRef> ( tlparen:T_LPAREN SectionSubscriptList:<SectionSubscriptList> trparen:T_RPAREN ( SubstringRange:<SubstringRange> )? )? 
 * <Variable> ::= SubstrConst:<SubstrConst> 
 */
public class ASTVariableNode extends ParseTreeNode
{
    public ASTVariableNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public ASTDataRefNode getASTDataRef()
    {
        return (ASTDataRefNode)this.getChild("DataRef");
    }

    public Token getASTTlparen()
    {
        return this.getChildToken("tlparen");
    }

    public ASTSectionSubscriptListNode getASTSectionSubscriptList()
    {
        return (ASTSectionSubscriptListNode)this.getChild("SectionSubscriptList");
    }

    public Token getASTTrparen()
    {
        return this.getChildToken("trparen");
    }

    public ASTSubstringRangeNode getASTSubstringRange()
    {
        return (ASTSubstringRangeNode)this.getChild("SubstringRange");
    }

    public ASTSubstrConstNode getASTSubstrConst()
    {
        return (ASTSubstrConstNode)this.getChild("SubstrConst");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTVariableNode(this); }
}
