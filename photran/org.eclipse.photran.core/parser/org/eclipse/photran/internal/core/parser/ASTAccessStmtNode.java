// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser; import org.eclipse.photran.internal.core.lexer.*;


/**
 * <AccessStmt> ::= LblDef:<LblDef> AccessSpec:<AccessSpec> ( tcolon:T_COLON tcolon2:T_COLON )? AccessIdList:<AccessIdList> teos:T_EOS  :production312
 * <AccessStmt> ::= LblDef:<LblDef> AccessSpec:<AccessSpec> teos:T_EOS  :production313
 */
public class ASTAccessStmtNode extends ParseTreeNode
{
    public ASTAccessStmtNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public ASTLblDefNode getASTLblDef()
    {
        return (ASTLblDefNode)this.getChild("LblDef");
    }

    public ASTAccessSpecNode getASTAccessSpec()
    {
        return (ASTAccessSpecNode)this.getChild("AccessSpec");
    }

    public Token getASTTcolon()
    {
        return this.getChildToken("tcolon");
    }

    public Token getASTTcolon2()
    {
        return this.getChildToken("tcolon2");
    }

    public ASTAccessIdListNode getASTAccessIdList()
    {
        return (ASTAccessIdListNode)this.getChild("AccessIdList");
    }

    public Token getASTTeos()
    {
        return this.getChildToken("teos");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTAccessStmtNode(this); }
}
