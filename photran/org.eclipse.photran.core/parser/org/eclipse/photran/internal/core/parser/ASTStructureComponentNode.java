// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser; import org.eclipse.photran.internal.core.lexer.*;


/**
 * <StructureComponent> ::= VariableName:<VariableName> FieldSelector:<FieldSelector>  :production413
 * <StructureComponent> ::= @:<StructureComponent> FieldSelector:<FieldSelector>  :production414
 */
public class ASTStructureComponentNode extends ParseTreeNode
{
    public ASTStructureComponentNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public int count()
    {
        ParseTreeNode node = this;
        int count = 1;
        while (node.getChild("@") != null)
        {
            count++;
            node = node.getChild("@");
        }
        return count;
    }

    public ASTVariableNameNode getASTVariableName(int index)
    {
        ASTStructureComponentNode node = this;
        for (int i = 0; i < index; i++)
            node = (ASTStructureComponentNode)node.getChild("@");
        return (ASTVariableNameNode)node.getChild("VariableName");
    }

    public ASTFieldSelectorNode getASTFieldSelector(int index)
    {
        ASTStructureComponentNode node = this;
        for (int i = 0; i < index; i++)
            node = (ASTStructureComponentNode)node.getChild("@");
        return (ASTFieldSelectorNode)node.getChild("FieldSelector");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTStructureComponentNode(this); }
}
