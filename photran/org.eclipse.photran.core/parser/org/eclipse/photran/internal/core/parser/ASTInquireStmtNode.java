// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser; import org.eclipse.photran.internal.core.lexer.*;


/**
 * <InquireStmt> ::= LblDef:<LblDef> tinquire:T_INQUIRE tlparen:T_LPAREN InquireSpecList:<InquireSpecList> trparen:T_RPAREN teos:T_EOS  :production762
 * <InquireStmt> ::= LblDef:<LblDef> tinquire:T_INQUIRE tlparen:T_LPAREN tiolengtheq:T_IOLENGTHEQ ScalarVariable:<ScalarVariable> trparen:T_RPAREN OutputItemList:<OutputItemList> teos:T_EOS  :production763
 */
public class ASTInquireStmtNode extends ParseTreeNode
{
    public ASTInquireStmtNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public ASTLblDefNode getASTLblDef()
    {
        return (ASTLblDefNode)this.getChild("LblDef");
    }

    public Token getASTTinquire()
    {
        return this.getChildToken("tinquire");
    }

    public Token getASTTlparen()
    {
        return this.getChildToken("tlparen");
    }

    public ASTInquireSpecListNode getASTInquireSpecList()
    {
        return (ASTInquireSpecListNode)this.getChild("InquireSpecList");
    }

    public Token getASTTrparen()
    {
        return this.getChildToken("trparen");
    }

    public Token getASTTeos()
    {
        return this.getChildToken("teos");
    }

    public Token getASTTiolengtheq()
    {
        return this.getChildToken("tiolengtheq");
    }

    public ASTScalarVariableNode getASTScalarVariable()
    {
        return (ASTScalarVariableNode)this.getChild("ScalarVariable");
    }

    public ASTOutputItemListNode getASTOutputItemList()
    {
        return (ASTOutputItemListNode)this.getChild("OutputItemList");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTInquireStmtNode(this); }
}
