// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser; import org.eclipse.photran.internal.core.lexer.*;


/**
 * <Constant> ::= NamedConstantUse:<NamedConstantUse>  :production111
 * <Constant> ::= UnsignedArithmeticConstant:<UnsignedArithmeticConstant>  :production112
 * <Constant> ::= tplus:T_PLUS UnsignedArithmeticConstant:<UnsignedArithmeticConstant>  :production113
 * <Constant> ::= tminus:T_MINUS UnsignedArithmeticConstant:<UnsignedArithmeticConstant>  :production114
 * <Constant> ::= tscon:T_SCON  :production115
 * <Constant> ::= ticon:T_ICON tunderscore:T_UNDERSCORE tscon:T_SCON  :production116
 * <Constant> ::= NamedConstantUse:<NamedConstantUse> tunderscore:T_UNDERSCORE tscon:T_SCON  :production117
 * <Constant> ::= LogicalConstant:<LogicalConstant>  :production118
 * <Constant> ::= StructureConstructor:<StructureConstructor>  :production119
 * <Constant> ::= BozLiteralConstant:<BozLiteralConstant>  :production120
 * <Constant> ::= thcon:T_HCON  :production121
 */
public class ASTConstantNode extends ParseTreeNode
{
    public ASTConstantNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public ASTNamedConstantUseNode getASTNamedConstantUse()
    {
        return (ASTNamedConstantUseNode)this.getChild("NamedConstantUse");
    }

    public ASTUnsignedArithmeticConstantNode getASTUnsignedArithmeticConstant()
    {
        return (ASTUnsignedArithmeticConstantNode)this.getChild("UnsignedArithmeticConstant");
    }

    public Token getASTTplus()
    {
        return this.getChildToken("tplus");
    }

    public Token getASTTminus()
    {
        return this.getChildToken("tminus");
    }

    public Token getASTTscon()
    {
        return this.getChildToken("tscon");
    }

    public Token getASTTicon()
    {
        return this.getChildToken("ticon");
    }

    public Token getASTTunderscore()
    {
        return this.getChildToken("tunderscore");
    }

    public ASTLogicalConstantNode getASTLogicalConstant()
    {
        return (ASTLogicalConstantNode)this.getChild("LogicalConstant");
    }

    public ASTStructureConstructorNode getASTStructureConstructor()
    {
        return (ASTStructureConstructorNode)this.getChild("StructureConstructor");
    }

    public ASTBozLiteralConstantNode getASTBozLiteralConstant()
    {
        return (ASTBozLiteralConstantNode)this.getChild("BozLiteralConstant");
    }

    public Token getASTThcon()
    {
        return this.getChildToken("thcon");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTConstantNode(this); }
}
