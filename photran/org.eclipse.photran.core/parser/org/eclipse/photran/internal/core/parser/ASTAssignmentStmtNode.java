// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser; import org.eclipse.photran.internal.core.lexer.*;


/**
 * <AssignmentStmt> ::= LblDef:<LblDef> Name:<Name> tequals:T_EQUALS Expr:<Expr> teos:T_EOS  :production503
 * <AssignmentStmt> ::= LblDef:<LblDef> Name:<Name> tlparen:T_LPAREN SFExprList:<SFExprList> trparen:T_RPAREN tequals:T_EQUALS Expr:<Expr> teos:T_EOS  :production504
 * <AssignmentStmt> ::= LblDef:<LblDef> Name:<Name> tlparen:T_LPAREN SFExprList:<SFExprList> trparen:T_RPAREN SubstringRange:<SubstringRange> tequals:T_EQUALS Expr:<Expr> teos:T_EOS  :production505
 * <AssignmentStmt> ::= LblDef:<LblDef> Name:<Name> tlparen:T_LPAREN SFDummyArgNameList:<SFDummyArgNameList> trparen:T_RPAREN SubstringRange:<SubstringRange> tequals:T_EQUALS Expr:<Expr> teos:T_EOS  :production506
 * <AssignmentStmt> ::= LblDef:<LblDef> Name:<Name> tpercent:T_PERCENT DataRef:<DataRef> ( tlparen:T_LPAREN SectionSubscriptList:<SectionSubscriptList> trparen:T_RPAREN ( SubstringRange:<SubstringRange> )? )? tequals:T_EQUALS Expr:<Expr> teos:T_EOS  :production507
 * <AssignmentStmt> ::= LblDef:<LblDef> Name:<Name> tlparen:T_LPAREN SFExprList:<SFExprList> trparen:T_RPAREN tpercent:T_PERCENT DataRef:<DataRef> ( tlparen2:T_LPAREN SectionSubscriptList:<SectionSubscriptList> trparen2:T_RPAREN ( SubstringRange:<SubstringRange> )? )? tequals:T_EQUALS Expr:<Expr> teos:T_EOS  :production508
 * <AssignmentStmt> ::= LblDef:<LblDef> Name:<Name> tlparen:T_LPAREN SFDummyArgNameList:<SFDummyArgNameList> trparen:T_RPAREN tpercent:T_PERCENT DataRef:<DataRef> ( tlparen2:T_LPAREN SectionSubscriptList:<SectionSubscriptList> trparen2:T_RPAREN ( SubstringRange:<SubstringRange> )? )? tequals:T_EQUALS Expr:<Expr> teos:T_EOS  :production509
 */
public class ASTAssignmentStmtNode extends ParseTreeNode
{
    public ASTAssignmentStmtNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public ASTLblDefNode getASTLblDef()
    {
        return (ASTLblDefNode)this.getChild("LblDef");
    }

    public ASTNameNode getASTName()
    {
        return (ASTNameNode)this.getChild("Name");
    }

    public Token getASTTequals()
    {
        return this.getChildToken("tequals");
    }

    public ASTExprNode getASTExpr()
    {
        return (ASTExprNode)this.getChild("Expr");
    }

    public Token getASTTeos()
    {
        return this.getChildToken("teos");
    }

    public Token getASTTlparen()
    {
        return this.getChildToken("tlparen");
    }

    public ASTSFExprListNode getASTSFExprList()
    {
        return (ASTSFExprListNode)this.getChild("SFExprList");
    }

    public Token getASTTrparen()
    {
        return this.getChildToken("trparen");
    }

    public ASTSubstringRangeNode getASTSubstringRange()
    {
        return (ASTSubstringRangeNode)this.getChild("SubstringRange");
    }

    public ASTSFDummyArgNameListNode getASTSFDummyArgNameList()
    {
        return (ASTSFDummyArgNameListNode)this.getChild("SFDummyArgNameList");
    }

    public Token getASTTpercent()
    {
        return this.getChildToken("tpercent");
    }

    public ASTDataRefNode getASTDataRef()
    {
        return (ASTDataRefNode)this.getChild("DataRef");
    }

    public ASTSectionSubscriptListNode getASTSectionSubscriptList()
    {
        return (ASTSectionSubscriptListNode)this.getChild("SectionSubscriptList");
    }

    public Token getASTTlparen2()
    {
        return this.getChildToken("tlparen2");
    }

    public Token getASTTrparen2()
    {
        return this.getChildToken("trparen2");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTAssignmentStmtNode(this); }
}
