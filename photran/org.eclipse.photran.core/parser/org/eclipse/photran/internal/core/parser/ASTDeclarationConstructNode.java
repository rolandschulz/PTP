// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser; import org.eclipse.photran.internal.core.lexer.*;


/**
 * <DeclarationConstruct> ::= DerivedTypeDef:<DerivedTypeDef>  :production43
 * <DeclarationConstruct> ::= InterfaceBlock:<InterfaceBlock>  :production44
 * <DeclarationConstruct> ::= TypeDeclarationStmt:<TypeDeclarationStmt>  :production45
 * <DeclarationConstruct> ::= SpecificationStmt:<SpecificationStmt>  :production46
 */
public class ASTDeclarationConstructNode extends ParseTreeNode
{
    public ASTDeclarationConstructNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public ASTDerivedTypeDefNode getASTDerivedTypeDef()
    {
        return (ASTDerivedTypeDefNode)this.getChild("DerivedTypeDef");
    }

    public ASTInterfaceBlockNode getASTInterfaceBlock()
    {
        return (ASTInterfaceBlockNode)this.getChild("InterfaceBlock");
    }

    public ASTTypeDeclarationStmtNode getASTTypeDeclarationStmt()
    {
        return (ASTTypeDeclarationStmtNode)this.getChild("TypeDeclarationStmt");
    }

    public ASTSpecificationStmtNode getASTSpecificationStmt()
    {
        return (ASTSpecificationStmtNode)this.getChild("SpecificationStmt");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTDeclarationConstructNode(this); }
}
