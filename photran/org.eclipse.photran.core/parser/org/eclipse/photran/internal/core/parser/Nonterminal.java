// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser; import org.eclipse.photran.internal.core.lexer.*;


/**
 * Enumerates the nonterminal symbols in the grammar being parsed
 */
public abstract class Nonterminal extends TerminalOrNonterminal implements ParserSymbol
{
    /**
     * Returns the row of the parser's Goto table associated with this nonterminal
     */
    abstract int getGoToRow();

    /**
     * Returns a string describing the nonterminal
     */
    public abstract String getDescription();

    abstract int getNumberOfSymbolsOnValueStack();

    /**
     * Double-dispatching for ParseTreeVisitor.visit()
     */
    public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { ; }

    public static class SaveStmtNonterminal extends Nonterminal
    {
        private SaveStmtNonterminal() {;} // Singleton
        private static SaveStmtNonterminal singletonInstance = null;
        public static final SaveStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SaveStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SaveStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 0; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSaveStmt(node); }
    }
    public static final Nonterminal.SaveStmtNonterminal SAVESTMT = SaveStmtNonterminal.getInstance();

    public static class MaskedElsewhereConstructNonterminal extends Nonterminal
    {
        private MaskedElsewhereConstructNonterminal() {;} // Singleton
        private static MaskedElsewhereConstructNonterminal singletonInstance = null;
        public static final MaskedElsewhereConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new MaskedElsewhereConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<MaskedElsewhereConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 1; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitMaskedElsewhereConstruct(node); }
    }
    public static final Nonterminal.MaskedElsewhereConstructNonterminal MASKEDELSEWHERECONSTRUCT = MaskedElsewhereConstructNonterminal.getInstance();

    public static class RewindStmtNonterminal extends Nonterminal
    {
        private RewindStmtNonterminal() {;} // Singleton
        private static RewindStmtNonterminal singletonInstance = null;
        public static final RewindStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new RewindStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<RewindStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 2; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitRewindStmt(node); }
    }
    public static final Nonterminal.RewindStmtNonterminal REWINDSTMT = RewindStmtNonterminal.getInstance();

    public static class ModuleStmtNonterminal extends Nonterminal
    {
        private ModuleStmtNonterminal() {;} // Singleton
        private static ModuleStmtNonterminal singletonInstance = null;
        public static final ModuleStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ModuleStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ModuleStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 3; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitModuleStmt(node); }
    }
    public static final Nonterminal.ModuleStmtNonterminal MODULESTMT = ModuleStmtNonterminal.getInstance();

    public static class AssignmentStmt49ReductionNonterminal extends Nonterminal
    {
        private AssignmentStmt49ReductionNonterminal() {;} // Singleton
        private static AssignmentStmt49ReductionNonterminal singletonInstance = null;
        public static final AssignmentStmt49ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AssignmentStmt49ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AssignmentStmt@49>"; }

        int getNumberOfSymbolsOnValueStack() { return 4; }

        int getGoToRow() { return 4; }
    }
    public static final Nonterminal.AssignmentStmt49ReductionNonterminal ASSIGNMENTSTMT49 = AssignmentStmt49ReductionNonterminal.getInstance();

    public static class ProgramNameNonterminal extends Nonterminal
    {
        private ProgramNameNonterminal() {;} // Singleton
        private static ProgramNameNonterminal singletonInstance = null;
        public static final ProgramNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ProgramNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ProgramName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 5; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitProgramName(node); }
    }
    public static final Nonterminal.ProgramNameNonterminal PROGRAMNAME = ProgramNameNonterminal.getInstance();

    public static class InterfaceBlockBodyNonterminal extends Nonterminal
    {
        private InterfaceBlockBodyNonterminal() {;} // Singleton
        private static InterfaceBlockBodyNonterminal singletonInstance = null;
        public static final InterfaceBlockBodyNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new InterfaceBlockBodyNonterminal(); return singletonInstance; }

        public String getDescription() { return "<InterfaceBlockBody>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 6; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitInterfaceBlockBody(node); }
    }
    public static final Nonterminal.InterfaceBlockBodyNonterminal INTERFACEBLOCKBODY = InterfaceBlockBodyNonterminal.getInstance();

    public static class DerivedTypeStmtNonterminal extends Nonterminal
    {
        private DerivedTypeStmtNonterminal() {;} // Singleton
        private static DerivedTypeStmtNonterminal singletonInstance = null;
        public static final DerivedTypeStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DerivedTypeStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DerivedTypeStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 7; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDerivedTypeStmt(node); }
    }
    public static final Nonterminal.DerivedTypeStmtNonterminal DERIVEDTYPESTMT = DerivedTypeStmtNonterminal.getInstance();

    public static class CExpr41ReductionNonterminal extends Nonterminal
    {
        private CExpr41ReductionNonterminal() {;} // Singleton
        private static CExpr41ReductionNonterminal singletonInstance = null;
        public static final CExpr41ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CExpr41ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CExpr@41>"; }

        int getNumberOfSymbolsOnValueStack() { return 2; }

        int getGoToRow() { return 8; }
    }
    public static final Nonterminal.CExpr41ReductionNonterminal CEXPR41 = CExpr41ReductionNonterminal.getInstance();

    public static class IoControlSpecNonterminal extends Nonterminal
    {
        private IoControlSpecNonterminal() {;} // Singleton
        private static IoControlSpecNonterminal singletonInstance = null;
        public static final IoControlSpecNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new IoControlSpecNonterminal(); return singletonInstance; }

        public String getDescription() { return "<IoControlSpec>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 9; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitIoControlSpec(node); }
    }
    public static final Nonterminal.IoControlSpecNonterminal IOCONTROLSPEC = IoControlSpecNonterminal.getInstance();

    public static class ExplicitShapeSpecNonterminal extends Nonterminal
    {
        private ExplicitShapeSpecNonterminal() {;} // Singleton
        private static ExplicitShapeSpecNonterminal singletonInstance = null;
        public static final ExplicitShapeSpecNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ExplicitShapeSpecNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ExplicitShapeSpec>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 10; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitExplicitShapeSpec(node); }
    }
    public static final Nonterminal.ExplicitShapeSpecNonterminal EXPLICITSHAPESPEC = ExplicitShapeSpecNonterminal.getInstance();

    public static class StructureConstructorNonterminal extends Nonterminal
    {
        private StructureConstructorNonterminal() {;} // Singleton
        private static StructureConstructorNonterminal singletonInstance = null;
        public static final StructureConstructorNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new StructureConstructorNonterminal(); return singletonInstance; }

        public String getDescription() { return "<StructureConstructor>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 11; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitStructureConstructor(node); }
    }
    public static final Nonterminal.StructureConstructorNonterminal STRUCTURECONSTRUCTOR = StructureConstructorNonterminal.getInstance();

    public static class EndNameNonterminal extends Nonterminal
    {
        private EndNameNonterminal() {;} // Singleton
        private static EndNameNonterminal singletonInstance = null;
        public static final EndNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 12; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEndName(node); }
    }
    public static final Nonterminal.EndNameNonterminal ENDNAME = EndNameNonterminal.getInstance();

    public static class AssignmentStmt48ReductionNonterminal extends Nonterminal
    {
        private AssignmentStmt48ReductionNonterminal() {;} // Singleton
        private static AssignmentStmt48ReductionNonterminal singletonInstance = null;
        public static final AssignmentStmt48ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AssignmentStmt48ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AssignmentStmt@48>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 13; }
    }
    public static final Nonterminal.AssignmentStmt48ReductionNonterminal ASSIGNMENTSTMT48 = AssignmentStmt48ReductionNonterminal.getInstance();

    public static class EndInterfaceStmt78ReductionNonterminal extends Nonterminal
    {
        private EndInterfaceStmt78ReductionNonterminal() {;} // Singleton
        private static EndInterfaceStmt78ReductionNonterminal singletonInstance = null;
        public static final EndInterfaceStmt78ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndInterfaceStmt78ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndInterfaceStmt@78>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 14; }
    }
    public static final Nonterminal.EndInterfaceStmt78ReductionNonterminal ENDINTERFACESTMT78 = EndInterfaceStmt78ReductionNonterminal.getInstance();

    public static class InterfaceStmtNonterminal extends Nonterminal
    {
        private InterfaceStmtNonterminal() {;} // Singleton
        private static InterfaceStmtNonterminal singletonInstance = null;
        public static final InterfaceStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new InterfaceStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<InterfaceStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 15; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitInterfaceStmt(node); }
    }
    public static final Nonterminal.InterfaceStmtNonterminal INTERFACESTMT = InterfaceStmtNonterminal.getInstance();

    public static class CommaLoopControlNonterminal extends Nonterminal
    {
        private CommaLoopControlNonterminal() {;} // Singleton
        private static CommaLoopControlNonterminal singletonInstance = null;
        public static final CommaLoopControlNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CommaLoopControlNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CommaLoopControl>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 16; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCommaLoopControl(node); }
    }
    public static final Nonterminal.CommaLoopControlNonterminal COMMALOOPCONTROL = CommaLoopControlNonterminal.getInstance();

    public static class DerivedTypeDefNonterminal extends Nonterminal
    {
        private DerivedTypeDefNonterminal() {;} // Singleton
        private static DerivedTypeDefNonterminal singletonInstance = null;
        public static final DerivedTypeDefNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DerivedTypeDefNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DerivedTypeDef>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 17; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDerivedTypeDef(node); }
    }
    public static final Nonterminal.DerivedTypeDefNonterminal DERIVEDTYPEDEF = DerivedTypeDefNonterminal.getInstance();

    public static class EndSelectStmtNonterminal extends Nonterminal
    {
        private EndSelectStmtNonterminal() {;} // Singleton
        private static EndSelectStmtNonterminal singletonInstance = null;
        public static final EndSelectStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndSelectStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndSelectStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 18; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEndSelectStmt(node); }
    }
    public static final Nonterminal.EndSelectStmtNonterminal ENDSELECTSTMT = EndSelectStmtNonterminal.getInstance();

    public static class AllocationListNonterminal extends Nonterminal
    {
        private AllocationListNonterminal() {;} // Singleton
        private static AllocationListNonterminal singletonInstance = null;
        public static final AllocationListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AllocationListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AllocationList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 19; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAllocationList(node); }
    }
    public static final Nonterminal.AllocationListNonterminal ALLOCATIONLIST = AllocationListNonterminal.getInstance();

    public static class ForallStmtNonterminal extends Nonterminal
    {
        private ForallStmtNonterminal() {;} // Singleton
        private static ForallStmtNonterminal singletonInstance = null;
        public static final ForallStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ForallStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ForallStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 20; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitForallStmt(node); }
    }
    public static final Nonterminal.ForallStmtNonterminal FORALLSTMT = ForallStmtNonterminal.getInstance();

    public static class IntentParNonterminal extends Nonterminal
    {
        private IntentParNonterminal() {;} // Singleton
        private static IntentParNonterminal singletonInstance = null;
        public static final IntentParNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new IntentParNonterminal(); return singletonInstance; }

        public String getDescription() { return "<IntentPar>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 21; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitIntentPar(node); }
    }
    public static final Nonterminal.IntentParNonterminal INTENTPAR = IntentParNonterminal.getInstance();

    public static class IoControlSpecListNonterminal extends Nonterminal
    {
        private IoControlSpecListNonterminal() {;} // Singleton
        private static IoControlSpecListNonterminal singletonInstance = null;
        public static final IoControlSpecListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new IoControlSpecListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<IoControlSpecList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 22; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitIoControlSpecList(node); }
    }
    public static final Nonterminal.IoControlSpecListNonterminal IOCONTROLSPECLIST = IoControlSpecListNonterminal.getInstance();

    public static class AcValueListNonterminal extends Nonterminal
    {
        private AcValueListNonterminal() {;} // Singleton
        private static AcValueListNonterminal singletonInstance = null;
        public static final AcValueListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AcValueListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AcValueList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 23; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAcValueList(node); }
    }
    public static final Nonterminal.AcValueListNonterminal ACVALUELIST = AcValueListNonterminal.getInstance();

    public static class WriteStmtNonterminal extends Nonterminal
    {
        private WriteStmtNonterminal() {;} // Singleton
        private static WriteStmtNonterminal singletonInstance = null;
        public static final WriteStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new WriteStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<WriteStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 24; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitWriteStmt(node); }
    }
    public static final Nonterminal.WriteStmtNonterminal WRITESTMT = WriteStmtNonterminal.getInstance();

    public static class AssignmentStmt47ReductionNonterminal extends Nonterminal
    {
        private AssignmentStmt47ReductionNonterminal() {;} // Singleton
        private static AssignmentStmt47ReductionNonterminal singletonInstance = null;
        public static final AssignmentStmt47ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AssignmentStmt47ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AssignmentStmt@47>"; }

        int getNumberOfSymbolsOnValueStack() { return 4; }

        int getGoToRow() { return 25; }
    }
    public static final Nonterminal.AssignmentStmt47ReductionNonterminal ASSIGNMENTSTMT47 = AssignmentStmt47ReductionNonterminal.getInstance();

    public static class EndInterfaceStmt77ReductionNonterminal extends Nonterminal
    {
        private EndInterfaceStmt77ReductionNonterminal() {;} // Singleton
        private static EndInterfaceStmt77ReductionNonterminal singletonInstance = null;
        public static final EndInterfaceStmt77ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndInterfaceStmt77ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndInterfaceStmt@77>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 26; }
    }
    public static final Nonterminal.EndInterfaceStmt77ReductionNonterminal ENDINTERFACESTMT77 = EndInterfaceStmt77ReductionNonterminal.getInstance();

    public static class AndOperand43ReductionNonterminal extends Nonterminal
    {
        private AndOperand43ReductionNonterminal() {;} // Singleton
        private static AndOperand43ReductionNonterminal singletonInstance = null;
        public static final AndOperand43ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AndOperand43ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AndOperand@43>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 27; }
    }
    public static final Nonterminal.AndOperand43ReductionNonterminal ANDOPERAND43 = AndOperand43ReductionNonterminal.getInstance();

    public static class BodyPlusInternalsNonterminal extends Nonterminal
    {
        private BodyPlusInternalsNonterminal() {;} // Singleton
        private static BodyPlusInternalsNonterminal singletonInstance = null;
        public static final BodyPlusInternalsNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new BodyPlusInternalsNonterminal(); return singletonInstance; }

        public String getDescription() { return "<BodyPlusInternals>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 28; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitBodyPlusInternals(node); }
    }
    public static final Nonterminal.BodyPlusInternalsNonterminal BODYPLUSINTERNALS = BodyPlusInternalsNonterminal.getInstance();

    public static class IntrinsicListNonterminal extends Nonterminal
    {
        private IntrinsicListNonterminal() {;} // Singleton
        private static IntrinsicListNonterminal singletonInstance = null;
        public static final IntrinsicListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new IntrinsicListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<IntrinsicList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 29; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitIntrinsicList(node); }
    }
    public static final Nonterminal.IntrinsicListNonterminal INTRINSICLIST = IntrinsicListNonterminal.getInstance();

    public static class FormatStmtNonterminal extends Nonterminal
    {
        private FormatStmtNonterminal() {;} // Singleton
        private static FormatStmtNonterminal singletonInstance = null;
        public static final FormatStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new FormatStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<FormatStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 30; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitFormatStmt(node); }
    }
    public static final Nonterminal.FormatStmtNonterminal FORMATSTMT = FormatStmtNonterminal.getInstance();

    public static class InquireSpecListNonterminal extends Nonterminal
    {
        private InquireSpecListNonterminal() {;} // Singleton
        private static InquireSpecListNonterminal singletonInstance = null;
        public static final InquireSpecListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new InquireSpecListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<InquireSpecList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 31; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitInquireSpecList(node); }
    }
    public static final Nonterminal.InquireSpecListNonterminal INQUIRESPECLIST = InquireSpecListNonterminal.getInstance();

    public static class DataStmtValueListNonterminal extends Nonterminal
    {
        private DataStmtValueListNonterminal() {;} // Singleton
        private static DataStmtValueListNonterminal singletonInstance = null;
        public static final DataStmtValueListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DataStmtValueListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DataStmtValueList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 32; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDataStmtValueList(node); }
    }
    public static final Nonterminal.DataStmtValueListNonterminal DATASTMTVALUELIST = DataStmtValueListNonterminal.getInstance();

    public static class EndSelectStmt62ReductionNonterminal extends Nonterminal
    {
        private EndSelectStmt62ReductionNonterminal() {;} // Singleton
        private static EndSelectStmt62ReductionNonterminal singletonInstance = null;
        public static final EndSelectStmt62ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndSelectStmt62ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndSelectStmt@62>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 33; }
    }
    public static final Nonterminal.EndSelectStmt62ReductionNonterminal ENDSELECTSTMT62 = EndSelectStmt62ReductionNonterminal.getInstance();

    public static class ExecutionPartConstructNonterminal extends Nonterminal
    {
        private ExecutionPartConstructNonterminal() {;} // Singleton
        private static ExecutionPartConstructNonterminal singletonInstance = null;
        public static final ExecutionPartConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ExecutionPartConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ExecutionPartConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 34; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitExecutionPartConstruct(node); }
    }
    public static final Nonterminal.ExecutionPartConstructNonterminal EXECUTIONPARTCONSTRUCT = ExecutionPartConstructNonterminal.getInstance();

    public static class DataStmtObjectListNonterminal extends Nonterminal
    {
        private DataStmtObjectListNonterminal() {;} // Singleton
        private static DataStmtObjectListNonterminal singletonInstance = null;
        public static final DataStmtObjectListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DataStmtObjectListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DataStmtObjectList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 35; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDataStmtObjectList(node); }
    }
    public static final Nonterminal.DataStmtObjectListNonterminal DATASTMTOBJECTLIST = DataStmtObjectListNonterminal.getInstance();

    public static class NameNonterminal extends Nonterminal
    {
        private NameNonterminal() {;} // Singleton
        private static NameNonterminal singletonInstance = null;
        public static final NameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new NameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Name>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 36; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitName(node); }
    }
    public static final Nonterminal.NameNonterminal NAME = NameNonterminal.getInstance();

    public static class ExprNonterminal extends Nonterminal
    {
        private ExprNonterminal() {;} // Singleton
        private static ExprNonterminal singletonInstance = null;
        public static final ExprNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ExprNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Expr>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 37; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitExpr(node); }
    }
    public static final Nonterminal.ExprNonterminal EXPR = ExprNonterminal.getInstance();

    public static class ElsewherePartNonterminal extends Nonterminal
    {
        private ElsewherePartNonterminal() {;} // Singleton
        private static ElsewherePartNonterminal singletonInstance = null;
        public static final ElsewherePartNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ElsewherePartNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ElsewherePart>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 38; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitElsewherePart(node); }
    }
    public static final Nonterminal.ElsewherePartNonterminal ELSEWHEREPART = ElsewherePartNonterminal.getInstance();

    public static class ExitStmtNonterminal extends Nonterminal
    {
        private ExitStmtNonterminal() {;} // Singleton
        private static ExitStmtNonterminal singletonInstance = null;
        public static final ExitStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ExitStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ExitStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 39; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitExitStmt(node); }
    }
    public static final Nonterminal.ExitStmtNonterminal EXITSTMT = ExitStmtNonterminal.getInstance();

    public static class ModuleProcedureStmtNonterminal extends Nonterminal
    {
        private ModuleProcedureStmtNonterminal() {;} // Singleton
        private static ModuleProcedureStmtNonterminal singletonInstance = null;
        public static final ModuleProcedureStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ModuleProcedureStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ModuleProcedureStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 40; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitModuleProcedureStmt(node); }
    }
    public static final Nonterminal.ModuleProcedureStmtNonterminal MODULEPROCEDURESTMT = ModuleProcedureStmtNonterminal.getInstance();

    public static class ComponentDeclNonterminal extends Nonterminal
    {
        private ComponentDeclNonterminal() {;} // Singleton
        private static ComponentDeclNonterminal singletonInstance = null;
        public static final ComponentDeclNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ComponentDeclNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ComponentDecl>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 41; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitComponentDecl(node); }
    }
    public static final Nonterminal.ComponentDeclNonterminal COMPONENTDECL = ComponentDeclNonterminal.getInstance();

    public static class EndForallStmt58ReductionNonterminal extends Nonterminal
    {
        private EndForallStmt58ReductionNonterminal() {;} // Singleton
        private static EndForallStmt58ReductionNonterminal singletonInstance = null;
        public static final EndForallStmt58ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndForallStmt58ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndForallStmt@58>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 42; }
    }
    public static final Nonterminal.EndForallStmt58ReductionNonterminal ENDFORALLSTMT58 = EndForallStmt58ReductionNonterminal.getInstance();

    public static class WhereConstructNonterminal extends Nonterminal
    {
        private WhereConstructNonterminal() {;} // Singleton
        private static WhereConstructNonterminal singletonInstance = null;
        public static final WhereConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new WhereConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<WhereConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 43; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitWhereConstruct(node); }
    }
    public static final Nonterminal.WhereConstructNonterminal WHERECONSTRUCT = WhereConstructNonterminal.getInstance();

    public static class StartReductionNonterminal extends Nonterminal
    {
        private StartReductionNonterminal() {;} // Singleton
        private static StartReductionNonterminal singletonInstance = null;
        public static final StartReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new StartReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<@start>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 44; }
    }
    public static final Nonterminal.StartReductionNonterminal START = StartReductionNonterminal.getInstance();

    public static class PointerNameNonterminal extends Nonterminal
    {
        private PointerNameNonterminal() {;} // Singleton
        private static PointerNameNonterminal singletonInstance = null;
        public static final PointerNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new PointerNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<PointerName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 45; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitPointerName(node); }
    }
    public static final Nonterminal.PointerNameNonterminal POINTERNAME = PointerNameNonterminal.getInstance();

    public static class AddOperand38ReductionNonterminal extends Nonterminal
    {
        private AddOperand38ReductionNonterminal() {;} // Singleton
        private static AddOperand38ReductionNonterminal singletonInstance = null;
        public static final AddOperand38ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AddOperand38ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AddOperand@38>"; }

        int getNumberOfSymbolsOnValueStack() { return 2; }

        int getGoToRow() { return 46; }
    }
    public static final Nonterminal.AddOperand38ReductionNonterminal ADDOPERAND38 = AddOperand38ReductionNonterminal.getInstance();

    public static class ForallConstructStmtNonterminal extends Nonterminal
    {
        private ForallConstructStmtNonterminal() {;} // Singleton
        private static ForallConstructStmtNonterminal singletonInstance = null;
        public static final ForallConstructStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ForallConstructStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ForallConstructStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 47; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitForallConstructStmt(node); }
    }
    public static final Nonterminal.ForallConstructStmtNonterminal FORALLCONSTRUCTSTMT = ForallConstructStmtNonterminal.getInstance();

    public static class SFFactorNonterminal extends Nonterminal
    {
        private SFFactorNonterminal() {;} // Singleton
        private static SFFactorNonterminal singletonInstance = null;
        public static final SFFactorNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SFFactorNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SFFactor>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 48; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSFFactor(node); }
    }
    public static final Nonterminal.SFFactorNonterminal SFFACTOR = SFFactorNonterminal.getInstance();

    public static class SubroutineNameUseNonterminal extends Nonterminal
    {
        private SubroutineNameUseNonterminal() {;} // Singleton
        private static SubroutineNameUseNonterminal singletonInstance = null;
        public static final SubroutineNameUseNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SubroutineNameUseNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SubroutineNameUse>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 49; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSubroutineNameUse(node); }
    }
    public static final Nonterminal.SubroutineNameUseNonterminal SUBROUTINENAMEUSE = SubroutineNameUseNonterminal.getInstance();

    public static class GenericNameNonterminal extends Nonterminal
    {
        private GenericNameNonterminal() {;} // Singleton
        private static GenericNameNonterminal singletonInstance = null;
        public static final GenericNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new GenericNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<GenericName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 50; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitGenericName(node); }
    }
    public static final Nonterminal.GenericNameNonterminal GENERICNAME = GenericNameNonterminal.getInstance();

    public static class EndSelectStmt61ReductionNonterminal extends Nonterminal
    {
        private EndSelectStmt61ReductionNonterminal() {;} // Singleton
        private static EndSelectStmt61ReductionNonterminal singletonInstance = null;
        public static final EndSelectStmt61ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndSelectStmt61ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndSelectStmt@61>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 51; }
    }
    public static final Nonterminal.EndSelectStmt61ReductionNonterminal ENDSELECTSTMT61 = EndSelectStmt61ReductionNonterminal.getInstance();

    public static class SFDataRefNonterminal extends Nonterminal
    {
        private SFDataRefNonterminal() {;} // Singleton
        private static SFDataRefNonterminal singletonInstance = null;
        public static final SFDataRefNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SFDataRefNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SFDataRef>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 52; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSFDataRef(node); }
    }
    public static final Nonterminal.SFDataRefNonterminal SFDATAREF = SFDataRefNonterminal.getInstance();

    public static class EntryStmt85ReductionNonterminal extends Nonterminal
    {
        private EntryStmt85ReductionNonterminal() {;} // Singleton
        private static EntryStmt85ReductionNonterminal singletonInstance = null;
        public static final EntryStmt85ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EntryStmt85ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EntryStmt@85>"; }

        int getNumberOfSymbolsOnValueStack() { return 3; }

        int getGoToRow() { return 53; }
    }
    public static final Nonterminal.EntryStmt85ReductionNonterminal ENTRYSTMT85 = EntryStmt85ReductionNonterminal.getInstance();

    public static class ExecutableConstructNonterminal extends Nonterminal
    {
        private ExecutableConstructNonterminal() {;} // Singleton
        private static ExecutableConstructNonterminal singletonInstance = null;
        public static final ExecutableConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ExecutableConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ExecutableConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 54; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitExecutableConstruct(node); }
    }
    public static final Nonterminal.ExecutableConstructNonterminal EXECUTABLECONSTRUCT = ExecutableConstructNonterminal.getInstance();

    public static class VariableNonterminal extends Nonterminal
    {
        private VariableNonterminal() {;} // Singleton
        private static VariableNonterminal singletonInstance = null;
        public static final VariableNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new VariableNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Variable>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 55; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitVariable(node); }
    }
    public static final Nonterminal.VariableNonterminal VARIABLE = VariableNonterminal.getInstance();

    public static class OrOpNonterminal extends Nonterminal
    {
        private OrOpNonterminal() {;} // Singleton
        private static OrOpNonterminal singletonInstance = null;
        public static final OrOpNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new OrOpNonterminal(); return singletonInstance; }

        public String getDescription() { return "<OrOp>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 56; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitOrOp(node); }
    }
    public static final Nonterminal.OrOpNonterminal OROP = OrOpNonterminal.getInstance();

    public static class OutputItemListNonterminal extends Nonterminal
    {
        private OutputItemListNonterminal() {;} // Singleton
        private static OutputItemListNonterminal singletonInstance = null;
        public static final OutputItemListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new OutputItemListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<OutputItemList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 57; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitOutputItemList(node); }
    }
    public static final Nonterminal.OutputItemListNonterminal OUTPUTITEMLIST = OutputItemListNonterminal.getInstance();

    public static class EndForallStmt57ReductionNonterminal extends Nonterminal
    {
        private EndForallStmt57ReductionNonterminal() {;} // Singleton
        private static EndForallStmt57ReductionNonterminal singletonInstance = null;
        public static final EndForallStmt57ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndForallStmt57ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndForallStmt@57>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 58; }
    }
    public static final Nonterminal.EndForallStmt57ReductionNonterminal ENDFORALLSTMT57 = EndForallStmt57ReductionNonterminal.getInstance();

    public static class MainRangeNonterminal extends Nonterminal
    {
        private MainRangeNonterminal() {;} // Singleton
        private static MainRangeNonterminal singletonInstance = null;
        public static final MainRangeNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new MainRangeNonterminal(); return singletonInstance; }

        public String getDescription() { return "<MainRange>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 59; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitMainRange(node); }
    }
    public static final Nonterminal.MainRangeNonterminal MAINRANGE = MainRangeNonterminal.getInstance();

    public static class MainProgramNonterminal extends Nonterminal
    {
        private MainProgramNonterminal() {;} // Singleton
        private static MainProgramNonterminal singletonInstance = null;
        public static final MainProgramNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new MainProgramNonterminal(); return singletonInstance; }

        public String getDescription() { return "<MainProgram>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 60; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitMainProgram(node); }
    }
    public static final Nonterminal.MainProgramNonterminal MAINPROGRAM = MainProgramNonterminal.getInstance();

    public static class EquivalenceObjectNonterminal extends Nonterminal
    {
        private EquivalenceObjectNonterminal() {;} // Singleton
        private static EquivalenceObjectNonterminal singletonInstance = null;
        public static final EquivalenceObjectNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EquivalenceObjectNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EquivalenceObject>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 61; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEquivalenceObject(node); }
    }
    public static final Nonterminal.EquivalenceObjectNonterminal EQUIVALENCEOBJECT = EquivalenceObjectNonterminal.getInstance();

    public static class FormateditNonterminal extends Nonterminal
    {
        private FormateditNonterminal() {;} // Singleton
        private static FormateditNonterminal singletonInstance = null;
        public static final FormateditNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new FormateditNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Formatedit>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 62; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitFormatedit(node); }
    }
    public static final Nonterminal.FormateditNonterminal FORMATEDIT = FormateditNonterminal.getInstance();

    public static class UseNameNonterminal extends Nonterminal
    {
        private UseNameNonterminal() {;} // Singleton
        private static UseNameNonterminal singletonInstance = null;
        public static final UseNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new UseNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<UseName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 63; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitUseName(node); }
    }
    public static final Nonterminal.UseNameNonterminal USENAME = UseNameNonterminal.getInstance();

    public static class CallStmtNonterminal extends Nonterminal
    {
        private CallStmtNonterminal() {;} // Singleton
        private static CallStmtNonterminal singletonInstance = null;
        public static final CallStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CallStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CallStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 64; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCallStmt(node); }
    }
    public static final Nonterminal.CallStmtNonterminal CALLSTMT = CallStmtNonterminal.getInstance();

    public static class AcImpliedDoNonterminal extends Nonterminal
    {
        private AcImpliedDoNonterminal() {;} // Singleton
        private static AcImpliedDoNonterminal singletonInstance = null;
        public static final AcImpliedDoNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AcImpliedDoNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AcImpliedDo>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 65; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAcImpliedDo(node); }
    }
    public static final Nonterminal.AcImpliedDoNonterminal ACIMPLIEDDO = AcImpliedDoNonterminal.getInstance();

    public static class NamelistStmtNonterminal extends Nonterminal
    {
        private NamelistStmtNonterminal() {;} // Singleton
        private static NamelistStmtNonterminal singletonInstance = null;
        public static final NamelistStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new NamelistStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<NamelistStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 66; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitNamelistStmt(node); }
    }
    public static final Nonterminal.NamelistStmtNonterminal NAMELISTSTMT = NamelistStmtNonterminal.getInstance();

    public static class WhereStmtNonterminal extends Nonterminal
    {
        private WhereStmtNonterminal() {;} // Singleton
        private static WhereStmtNonterminal singletonInstance = null;
        public static final WhereStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new WhereStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<WhereStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 67; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitWhereStmt(node); }
    }
    public static final Nonterminal.WhereStmtNonterminal WHERESTMT = WhereStmtNonterminal.getInstance();

    public static class EndFunctionStmt81ReductionNonterminal extends Nonterminal
    {
        private EndFunctionStmt81ReductionNonterminal() {;} // Singleton
        private static EndFunctionStmt81ReductionNonterminal singletonInstance = null;
        public static final EndFunctionStmt81ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndFunctionStmt81ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndFunctionStmt@81>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 68; }
    }
    public static final Nonterminal.EndFunctionStmt81ReductionNonterminal ENDFUNCTIONSTMT81 = EndFunctionStmt81ReductionNonterminal.getInstance();

    public static class EntityDeclNonterminal extends Nonterminal
    {
        private EntityDeclNonterminal() {;} // Singleton
        private static EntityDeclNonterminal singletonInstance = null;
        public static final EntityDeclNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EntityDeclNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EntityDecl>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 69; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEntityDecl(node); }
    }
    public static final Nonterminal.EntityDeclNonterminal ENTITYDECL = EntityDeclNonterminal.getInstance();

    public static class InputItemListNonterminal extends Nonterminal
    {
        private InputItemListNonterminal() {;} // Singleton
        private static InputItemListNonterminal singletonInstance = null;
        public static final InputItemListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new InputItemListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<InputItemList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 70; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitInputItemList(node); }
    }
    public static final Nonterminal.InputItemListNonterminal INPUTITEMLIST = InputItemListNonterminal.getInstance();

    public static class DataIDoObjectNonterminal extends Nonterminal
    {
        private DataIDoObjectNonterminal() {;} // Singleton
        private static DataIDoObjectNonterminal singletonInstance = null;
        public static final DataIDoObjectNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DataIDoObjectNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DataIDoObject>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 71; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDataIDoObject(node); }
    }
    public static final Nonterminal.DataIDoObjectNonterminal DATAIDOOBJECT = DataIDoObjectNonterminal.getInstance();

    public static class PointerStmt13ReductionNonterminal extends Nonterminal
    {
        private PointerStmt13ReductionNonterminal() {;} // Singleton
        private static PointerStmt13ReductionNonterminal singletonInstance = null;
        public static final PointerStmt13ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new PointerStmt13ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<PointerStmt@13>"; }

        int getNumberOfSymbolsOnValueStack() { return 2; }

        int getGoToRow() { return 72; }
    }
    public static final Nonterminal.PointerStmt13ReductionNonterminal POINTERSTMT13 = PointerStmt13ReductionNonterminal.getInstance();

    public static class ExternalStmtNonterminal extends Nonterminal
    {
        private ExternalStmtNonterminal() {;} // Singleton
        private static ExternalStmtNonterminal singletonInstance = null;
        public static final ExternalStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ExternalStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ExternalStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 73; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitExternalStmt(node); }
    }
    public static final Nonterminal.ExternalStmtNonterminal EXTERNALSTMT = ExternalStmtNonterminal.getInstance();

    public static class InvalidEntityDecl6ReductionNonterminal extends Nonterminal
    {
        private InvalidEntityDecl6ReductionNonterminal() {;} // Singleton
        private static InvalidEntityDecl6ReductionNonterminal singletonInstance = null;
        public static final InvalidEntityDecl6ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new InvalidEntityDecl6ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<InvalidEntityDecl@6>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 74; }
    }
    public static final Nonterminal.InvalidEntityDecl6ReductionNonterminal INVALIDENTITYDECL6 = InvalidEntityDecl6ReductionNonterminal.getInstance();

    public static class EquivOperandNonterminal extends Nonterminal
    {
        private EquivOperandNonterminal() {;} // Singleton
        private static EquivOperandNonterminal singletonInstance = null;
        public static final EquivOperandNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EquivOperandNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EquivOperand>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 75; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEquivOperand(node); }
    }
    public static final Nonterminal.EquivOperandNonterminal EQUIVOPERAND = EquivOperandNonterminal.getInstance();

    public static class ConcatOpNonterminal extends Nonterminal
    {
        private ConcatOpNonterminal() {;} // Singleton
        private static ConcatOpNonterminal singletonInstance = null;
        public static final ConcatOpNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ConcatOpNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ConcatOp>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 76; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitConcatOp(node); }
    }
    public static final Nonterminal.ConcatOpNonterminal CONCATOP = ConcatOpNonterminal.getInstance();

    public static class DefinedUnaryOpNonterminal extends Nonterminal
    {
        private DefinedUnaryOpNonterminal() {;} // Singleton
        private static DefinedUnaryOpNonterminal singletonInstance = null;
        public static final DefinedUnaryOpNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DefinedUnaryOpNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DefinedUnaryOp>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 77; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDefinedUnaryOp(node); }
    }
    public static final Nonterminal.DefinedUnaryOpNonterminal DEFINEDUNARYOP = DefinedUnaryOpNonterminal.getInstance();

    public static class AllocationNonterminal extends Nonterminal
    {
        private AllocationNonterminal() {;} // Singleton
        private static AllocationNonterminal singletonInstance = null;
        public static final AllocationNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AllocationNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Allocation>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 78; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAllocation(node); }
    }
    public static final Nonterminal.AllocationNonterminal ALLOCATION = AllocationNonterminal.getInstance();

    public static class BlockDoConstructNonterminal extends Nonterminal
    {
        private BlockDoConstructNonterminal() {;} // Singleton
        private static BlockDoConstructNonterminal singletonInstance = null;
        public static final BlockDoConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new BlockDoConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<BlockDoConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 79; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitBlockDoConstruct(node); }
    }
    public static final Nonterminal.BlockDoConstructNonterminal BLOCKDOCONSTRUCT = BlockDoConstructNonterminal.getInstance();

    public static class ArrayDeclaratorListNonterminal extends Nonterminal
    {
        private ArrayDeclaratorListNonterminal() {;} // Singleton
        private static ArrayDeclaratorListNonterminal singletonInstance = null;
        public static final ArrayDeclaratorListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ArrayDeclaratorListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ArrayDeclaratorList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 80; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitArrayDeclaratorList(node); }
    }
    public static final Nonterminal.ArrayDeclaratorListNonterminal ARRAYDECLARATORLIST = ArrayDeclaratorListNonterminal.getInstance();

    public static class AllocateObjectNonterminal extends Nonterminal
    {
        private AllocateObjectNonterminal() {;} // Singleton
        private static AllocateObjectNonterminal singletonInstance = null;
        public static final AllocateObjectNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AllocateObjectNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AllocateObject>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 81; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAllocateObject(node); }
    }
    public static final Nonterminal.AllocateObjectNonterminal ALLOCATEOBJECT = AllocateObjectNonterminal.getInstance();

    public static class EndIfStmt60ReductionNonterminal extends Nonterminal
    {
        private EndIfStmt60ReductionNonterminal() {;} // Singleton
        private static EndIfStmt60ReductionNonterminal singletonInstance = null;
        public static final EndIfStmt60ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndIfStmt60ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndIfStmt@60>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 82; }
    }
    public static final Nonterminal.EndIfStmt60ReductionNonterminal ENDIFSTMT60 = EndIfStmt60ReductionNonterminal.getInstance();

    public static class EndFunctionStmt80ReductionNonterminal extends Nonterminal
    {
        private EndFunctionStmt80ReductionNonterminal() {;} // Singleton
        private static EndFunctionStmt80ReductionNonterminal singletonInstance = null;
        public static final EndFunctionStmt80ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndFunctionStmt80ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndFunctionStmt@80>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 83; }
    }
    public static final Nonterminal.EndFunctionStmt80ReductionNonterminal ENDFUNCTIONSTMT80 = EndFunctionStmt80ReductionNonterminal.getInstance();

    public static class EndIfStmtNonterminal extends Nonterminal
    {
        private EndIfStmtNonterminal() {;} // Singleton
        private static EndIfStmtNonterminal singletonInstance = null;
        public static final EndIfStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndIfStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndIfStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 84; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEndIfStmt(node); }
    }
    public static final Nonterminal.EndIfStmtNonterminal ENDIFSTMT = EndIfStmtNonterminal.getInstance();

    public static class InterfaceBlockNonterminal extends Nonterminal
    {
        private InterfaceBlockNonterminal() {;} // Singleton
        private static InterfaceBlockNonterminal singletonInstance = null;
        public static final InterfaceBlockNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new InterfaceBlockNonterminal(); return singletonInstance; }

        public String getDescription() { return "<InterfaceBlock>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 85; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitInterfaceBlock(node); }
    }
    public static final Nonterminal.InterfaceBlockNonterminal INTERFACEBLOCK = InterfaceBlockNonterminal.getInstance();

    public static class UseStmt72ReductionNonterminal extends Nonterminal
    {
        private UseStmt72ReductionNonterminal() {;} // Singleton
        private static UseStmt72ReductionNonterminal singletonInstance = null;
        public static final UseStmt72ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new UseStmt72ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<UseStmt@72>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 86; }
    }
    public static final Nonterminal.UseStmt72ReductionNonterminal USESTMT72 = UseStmt72ReductionNonterminal.getInstance();

    public static class ArrayConstructorNonterminal extends Nonterminal
    {
        private ArrayConstructorNonterminal() {;} // Singleton
        private static ArrayConstructorNonterminal singletonInstance = null;
        public static final ArrayConstructorNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ArrayConstructorNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ArrayConstructor>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 87; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitArrayConstructor(node); }
    }
    public static final Nonterminal.ArrayConstructorNonterminal ARRAYCONSTRUCTOR = ArrayConstructorNonterminal.getInstance();

    public static class ComponentAttrSpecNonterminal extends Nonterminal
    {
        private ComponentAttrSpecNonterminal() {;} // Singleton
        private static ComponentAttrSpecNonterminal singletonInstance = null;
        public static final ComponentAttrSpecNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ComponentAttrSpecNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ComponentAttrSpec>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 88; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitComponentAttrSpec(node); }
    }
    public static final Nonterminal.ComponentAttrSpecNonterminal COMPONENTATTRSPEC = ComponentAttrSpecNonterminal.getInstance();

    public static class PrimaryNonterminal extends Nonterminal
    {
        private PrimaryNonterminal() {;} // Singleton
        private static PrimaryNonterminal singletonInstance = null;
        public static final PrimaryNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new PrimaryNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Primary>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 89; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitPrimary(node); }
    }
    public static final Nonterminal.PrimaryNonterminal PRIMARY = PrimaryNonterminal.getInstance();

    public static class AssignmentStmt52ReductionNonterminal extends Nonterminal
    {
        private AssignmentStmt52ReductionNonterminal() {;} // Singleton
        private static AssignmentStmt52ReductionNonterminal singletonInstance = null;
        public static final AssignmentStmt52ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AssignmentStmt52ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AssignmentStmt@52>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 90; }
    }
    public static final Nonterminal.AssignmentStmt52ReductionNonterminal ASSIGNMENTSTMT52 = AssignmentStmt52ReductionNonterminal.getInstance();

    public static class FormatIdentifierNonterminal extends Nonterminal
    {
        private FormatIdentifierNonterminal() {;} // Singleton
        private static FormatIdentifierNonterminal singletonInstance = null;
        public static final FormatIdentifierNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new FormatIdentifierNonterminal(); return singletonInstance; }

        public String getDescription() { return "<FormatIdentifier>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 91; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitFormatIdentifier(node); }
    }
    public static final Nonterminal.FormatIdentifierNonterminal FORMATIDENTIFIER = FormatIdentifierNonterminal.getInstance();

    public static class CloseSpecListNonterminal extends Nonterminal
    {
        private CloseSpecListNonterminal() {;} // Singleton
        private static CloseSpecListNonterminal singletonInstance = null;
        public static final CloseSpecListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CloseSpecListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CloseSpecList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 92; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCloseSpecList(node); }
    }
    public static final Nonterminal.CloseSpecListNonterminal CLOSESPECLIST = CloseSpecListNonterminal.getInstance();

    public static class AssignmentStmtNonterminal extends Nonterminal
    {
        private AssignmentStmtNonterminal() {;} // Singleton
        private static AssignmentStmtNonterminal singletonInstance = null;
        public static final AssignmentStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AssignmentStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AssignmentStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 93; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAssignmentStmt(node); }
    }
    public static final Nonterminal.AssignmentStmtNonterminal ASSIGNMENTSTMT = AssignmentStmtNonterminal.getInstance();

    public static class CaseValueRangeNonterminal extends Nonterminal
    {
        private CaseValueRangeNonterminal() {;} // Singleton
        private static CaseValueRangeNonterminal singletonInstance = null;
        public static final CaseValueRangeNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CaseValueRangeNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CaseValueRange>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 94; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCaseValueRange(node); }
    }
    public static final Nonterminal.CaseValueRangeNonterminal CASEVALUERANGE = CaseValueRangeNonterminal.getInstance();

    public static class BlockDataSubprogramNonterminal extends Nonterminal
    {
        private BlockDataSubprogramNonterminal() {;} // Singleton
        private static BlockDataSubprogramNonterminal singletonInstance = null;
        public static final BlockDataSubprogramNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new BlockDataSubprogramNonterminal(); return singletonInstance; }

        public String getDescription() { return "<BlockDataSubprogram>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 95; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitBlockDataSubprogram(node); }
    }
    public static final Nonterminal.BlockDataSubprogramNonterminal BLOCKDATASUBPROGRAM = BlockDataSubprogramNonterminal.getInstance();

    public static class ImplicitSpecNonterminal extends Nonterminal
    {
        private ImplicitSpecNonterminal() {;} // Singleton
        private static ImplicitSpecNonterminal singletonInstance = null;
        public static final ImplicitSpecNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ImplicitSpecNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ImplicitSpec>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 96; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitImplicitSpec(node); }
    }
    public static final Nonterminal.ImplicitSpecNonterminal IMPLICITSPEC = ImplicitSpecNonterminal.getInstance();

    public static class EndBlockDataStmtNonterminal extends Nonterminal
    {
        private EndBlockDataStmtNonterminal() {;} // Singleton
        private static EndBlockDataStmtNonterminal singletonInstance = null;
        public static final EndBlockDataStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndBlockDataStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndBlockDataStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 97; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEndBlockDataStmt(node); }
    }
    public static final Nonterminal.EndBlockDataStmtNonterminal ENDBLOCKDATASTMT = EndBlockDataStmtNonterminal.getInstance();

    public static class FunctionArgNonterminal extends Nonterminal
    {
        private FunctionArgNonterminal() {;} // Singleton
        private static FunctionArgNonterminal singletonInstance = null;
        public static final FunctionArgNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new FunctionArgNonterminal(); return singletonInstance; }

        public String getDescription() { return "<FunctionArg>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 98; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitFunctionArg(node); }
    }
    public static final Nonterminal.FunctionArgNonterminal FUNCTIONARG = FunctionArgNonterminal.getInstance();

    public static class SubroutineParsNonterminal extends Nonterminal
    {
        private SubroutineParsNonterminal() {;} // Singleton
        private static SubroutineParsNonterminal singletonInstance = null;
        public static final SubroutineParsNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SubroutineParsNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SubroutinePars>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 99; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSubroutinePars(node); }
    }
    public static final Nonterminal.SubroutineParsNonterminal SUBROUTINEPARS = SubroutineParsNonterminal.getInstance();

    public static class EndDoStmt64ReductionNonterminal extends Nonterminal
    {
        private EndDoStmt64ReductionNonterminal() {;} // Singleton
        private static EndDoStmt64ReductionNonterminal singletonInstance = null;
        public static final EndDoStmt64ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndDoStmt64ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndDoStmt@64>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 100; }
    }
    public static final Nonterminal.EndDoStmt64ReductionNonterminal ENDDOSTMT64 = EndDoStmt64ReductionNonterminal.getInstance();

    public static class AndOperandNonterminal extends Nonterminal
    {
        private AndOperandNonterminal() {;} // Singleton
        private static AndOperandNonterminal singletonInstance = null;
        public static final AndOperandNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AndOperandNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AndOperand>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 101; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAndOperand(node); }
    }
    public static final Nonterminal.AndOperandNonterminal ANDOPERAND = AndOperandNonterminal.getInstance();

    public static class SpecificationPartConstructNonterminal extends Nonterminal
    {
        private SpecificationPartConstructNonterminal() {;} // Singleton
        private static SpecificationPartConstructNonterminal singletonInstance = null;
        public static final SpecificationPartConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SpecificationPartConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SpecificationPartConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 102; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSpecificationPartConstruct(node); }
    }
    public static final Nonterminal.SpecificationPartConstructNonterminal SPECIFICATIONPARTCONSTRUCT = SpecificationPartConstructNonterminal.getInstance();

    public static class WhereBodyConstructBlockNonterminal extends Nonterminal
    {
        private WhereBodyConstructBlockNonterminal() {;} // Singleton
        private static WhereBodyConstructBlockNonterminal singletonInstance = null;
        public static final WhereBodyConstructBlockNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new WhereBodyConstructBlockNonterminal(); return singletonInstance; }

        public String getDescription() { return "<WhereBodyConstructBlock>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 103; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitWhereBodyConstructBlock(node); }
    }
    public static final Nonterminal.WhereBodyConstructBlockNonterminal WHEREBODYCONSTRUCTBLOCK = WhereBodyConstructBlockNonterminal.getInstance();

    public static class TypeSpecNonterminal extends Nonterminal
    {
        private TypeSpecNonterminal() {;} // Singleton
        private static TypeSpecNonterminal singletonInstance = null;
        public static final TypeSpecNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new TypeSpecNonterminal(); return singletonInstance; }

        public String getDescription() { return "<TypeSpec>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 104; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitTypeSpec(node); }
    }
    public static final Nonterminal.TypeSpecNonterminal TYPESPEC = TypeSpecNonterminal.getInstance();

    public static class NamedConstantNonterminal extends Nonterminal
    {
        private NamedConstantNonterminal() {;} // Singleton
        private static NamedConstantNonterminal singletonInstance = null;
        public static final NamedConstantNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new NamedConstantNonterminal(); return singletonInstance; }

        public String getDescription() { return "<NamedConstant>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 105; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitNamedConstant(node); }
    }
    public static final Nonterminal.NamedConstantNonterminal NAMEDCONSTANT = NamedConstantNonterminal.getInstance();

    public static class CloseSpecNonterminal extends Nonterminal
    {
        private CloseSpecNonterminal() {;} // Singleton
        private static CloseSpecNonterminal singletonInstance = null;
        public static final CloseSpecNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CloseSpecNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CloseSpec>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 106; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCloseSpec(node); }
    }
    public static final Nonterminal.CloseSpecNonterminal CLOSESPEC = CloseSpecNonterminal.getInstance();

    public static class LowerBoundNonterminal extends Nonterminal
    {
        private LowerBoundNonterminal() {;} // Singleton
        private static LowerBoundNonterminal singletonInstance = null;
        public static final LowerBoundNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new LowerBoundNonterminal(); return singletonInstance; }

        public String getDescription() { return "<LowerBound>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 107; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitLowerBound(node); }
    }
    public static final Nonterminal.LowerBoundNonterminal LOWERBOUND = LowerBoundNonterminal.getInstance();

    public static class LblRefListNonterminal extends Nonterminal
    {
        private LblRefListNonterminal() {;} // Singleton
        private static LblRefListNonterminal singletonInstance = null;
        public static final LblRefListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new LblRefListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<LblRefList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 108; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitLblRefList(node); }
    }
    public static final Nonterminal.LblRefListNonterminal LBLREFLIST = LblRefListNonterminal.getInstance();

    public static class FunctionStmtNonterminal extends Nonterminal
    {
        private FunctionStmtNonterminal() {;} // Singleton
        private static FunctionStmtNonterminal singletonInstance = null;
        public static final FunctionStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new FunctionStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<FunctionStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 109; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitFunctionStmt(node); }
    }
    public static final Nonterminal.FunctionStmtNonterminal FUNCTIONSTMT = FunctionStmtNonterminal.getInstance();

    public static class AssignmentStmt51ReductionNonterminal extends Nonterminal
    {
        private AssignmentStmt51ReductionNonterminal() {;} // Singleton
        private static AssignmentStmt51ReductionNonterminal singletonInstance = null;
        public static final AssignmentStmt51ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AssignmentStmt51ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AssignmentStmt@51>"; }

        int getNumberOfSymbolsOnValueStack() { return 4; }

        int getGoToRow() { return 110; }
    }
    public static final Nonterminal.AssignmentStmt51ReductionNonterminal ASSIGNMENTSTMT51 = AssignmentStmt51ReductionNonterminal.getInstance();

    public static class LogicalConstantNonterminal extends Nonterminal
    {
        private LogicalConstantNonterminal() {;} // Singleton
        private static LogicalConstantNonterminal singletonInstance = null;
        public static final LogicalConstantNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new LogicalConstantNonterminal(); return singletonInstance; }

        public String getDescription() { return "<LogicalConstant>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 111; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitLogicalConstant(node); }
    }
    public static final Nonterminal.LogicalConstantNonterminal LOGICALCONSTANT = LogicalConstantNonterminal.getInstance();

    public static class ImplicitStmtNonterminal extends Nonterminal
    {
        private ImplicitStmtNonterminal() {;} // Singleton
        private static ImplicitStmtNonterminal singletonInstance = null;
        public static final ImplicitStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ImplicitStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ImplicitStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 112; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitImplicitStmt(node); }
    }
    public static final Nonterminal.ImplicitStmtNonterminal IMPLICITSTMT = ImplicitStmtNonterminal.getInstance();

    public static class RenameNonterminal extends Nonterminal
    {
        private RenameNonterminal() {;} // Singleton
        private static RenameNonterminal singletonInstance = null;
        public static final RenameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new RenameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Rename>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 113; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitRename(node); }
    }
    public static final Nonterminal.RenameNonterminal RENAME = RenameNonterminal.getInstance();

    public static class IfConstructNonterminal extends Nonterminal
    {
        private IfConstructNonterminal() {;} // Singleton
        private static IfConstructNonterminal singletonInstance = null;
        public static final IfConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new IfConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<IfConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 114; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitIfConstruct(node); }
    }
    public static final Nonterminal.IfConstructNonterminal IFCONSTRUCT = IfConstructNonterminal.getInstance();

    public static class ArrayElementNonterminal extends Nonterminal
    {
        private ArrayElementNonterminal() {;} // Singleton
        private static ArrayElementNonterminal singletonInstance = null;
        public static final ArrayElementNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ArrayElementNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ArrayElement>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 115; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitArrayElement(node); }
    }
    public static final Nonterminal.ArrayElementNonterminal ARRAYELEMENT = ArrayElementNonterminal.getInstance();

    public static class RdFmtIdNonterminal extends Nonterminal
    {
        private RdFmtIdNonterminal() {;} // Singleton
        private static RdFmtIdNonterminal singletonInstance = null;
        public static final RdFmtIdNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new RdFmtIdNonterminal(); return singletonInstance; }

        public String getDescription() { return "<RdFmtId>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 116; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitRdFmtId(node); }
    }
    public static final Nonterminal.RdFmtIdNonterminal RDFMTID = RdFmtIdNonterminal.getInstance();

    public static class COperand29ReductionNonterminal extends Nonterminal
    {
        private COperand29ReductionNonterminal() {;} // Singleton
        private static COperand29ReductionNonterminal singletonInstance = null;
        public static final COperand29ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new COperand29ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<COperand@29>"; }

        int getNumberOfSymbolsOnValueStack() { return 3; }

        int getGoToRow() { return 117; }
    }
    public static final Nonterminal.COperand29ReductionNonterminal COPERAND29 = COperand29ReductionNonterminal.getInstance();

    public static class EndDoStmt63ReductionNonterminal extends Nonterminal
    {
        private EndDoStmt63ReductionNonterminal() {;} // Singleton
        private static EndDoStmt63ReductionNonterminal singletonInstance = null;
        public static final EndDoStmt63ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndDoStmt63ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndDoStmt@63>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 118; }
    }
    public static final Nonterminal.EndDoStmt63ReductionNonterminal ENDDOSTMT63 = EndDoStmt63ReductionNonterminal.getInstance();

    public static class EntityDecl5ReductionNonterminal extends Nonterminal
    {
        private EntityDecl5ReductionNonterminal() {;} // Singleton
        private static EntityDecl5ReductionNonterminal singletonInstance = null;
        public static final EntityDecl5ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EntityDecl5ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EntityDecl@5>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 119; }
    }
    public static final Nonterminal.EntityDecl5ReductionNonterminal ENTITYDECL5 = EntityDecl5ReductionNonterminal.getInstance();

    public static class SubscriptTripletNonterminal extends Nonterminal
    {
        private SubscriptTripletNonterminal() {;} // Singleton
        private static SubscriptTripletNonterminal singletonInstance = null;
        public static final SubscriptTripletNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SubscriptTripletNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SubscriptTriplet>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 120; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSubscriptTriplet(node); }
    }
    public static final Nonterminal.SubscriptTripletNonterminal SUBSCRIPTTRIPLET = SubscriptTripletNonterminal.getInstance();

    public static class ContinueStmtNonterminal extends Nonterminal
    {
        private ContinueStmtNonterminal() {;} // Singleton
        private static ContinueStmtNonterminal singletonInstance = null;
        public static final ContinueStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ContinueStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ContinueStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 121; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitContinueStmt(node); }
    }
    public static final Nonterminal.ContinueStmtNonterminal CONTINUESTMT = ContinueStmtNonterminal.getInstance();

    public static class LoopControlNonterminal extends Nonterminal
    {
        private LoopControlNonterminal() {;} // Singleton
        private static LoopControlNonterminal singletonInstance = null;
        public static final LoopControlNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new LoopControlNonterminal(); return singletonInstance; }

        public String getDescription() { return "<LoopControl>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 122; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitLoopControl(node); }
    }
    public static final Nonterminal.LoopControlNonterminal LOOPCONTROL = LoopControlNonterminal.getInstance();

    public static class EndProgramStmt69ReductionNonterminal extends Nonterminal
    {
        private EndProgramStmt69ReductionNonterminal() {;} // Singleton
        private static EndProgramStmt69ReductionNonterminal singletonInstance = null;
        public static final EndProgramStmt69ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndProgramStmt69ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndProgramStmt@69>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 123; }
    }
    public static final Nonterminal.EndProgramStmt69ReductionNonterminal ENDPROGRAMSTMT69 = EndProgramStmt69ReductionNonterminal.getInstance();

    public static class SubroutineArgNonterminal extends Nonterminal
    {
        private SubroutineArgNonterminal() {;} // Singleton
        private static SubroutineArgNonterminal singletonInstance = null;
        public static final SubroutineArgNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SubroutineArgNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SubroutineArg>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 124; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSubroutineArg(node); }
    }
    public static final Nonterminal.SubroutineArgNonterminal SUBROUTINEARG = SubroutineArgNonterminal.getInstance();

    public static class ImplicitSpecListNonterminal extends Nonterminal
    {
        private ImplicitSpecListNonterminal() {;} // Singleton
        private static ImplicitSpecListNonterminal singletonInstance = null;
        public static final ImplicitSpecListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ImplicitSpecListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ImplicitSpecList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 125; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitImplicitSpecList(node); }
    }
    public static final Nonterminal.ImplicitSpecListNonterminal IMPLICITSPECLIST = ImplicitSpecListNonterminal.getInstance();

    public static class BozLiteralConstantNonterminal extends Nonterminal
    {
        private BozLiteralConstantNonterminal() {;} // Singleton
        private static BozLiteralConstantNonterminal singletonInstance = null;
        public static final BozLiteralConstantNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new BozLiteralConstantNonterminal(); return singletonInstance; }

        public String getDescription() { return "<BozLiteralConstant>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 126; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitBozLiteralConstant(node); }
    }
    public static final Nonterminal.BozLiteralConstantNonterminal BOZLITERALCONSTANT = BozLiteralConstantNonterminal.getInstance();

    public static class ElseConstructNonterminal extends Nonterminal
    {
        private ElseConstructNonterminal() {;} // Singleton
        private static ElseConstructNonterminal singletonInstance = null;
        public static final ElseConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ElseConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ElseConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 127; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitElseConstruct(node); }
    }
    public static final Nonterminal.ElseConstructNonterminal ELSECONSTRUCT = ElseConstructNonterminal.getInstance();

    public static class CloseStmtNonterminal extends Nonterminal
    {
        private CloseStmtNonterminal() {;} // Singleton
        private static CloseStmtNonterminal singletonInstance = null;
        public static final CloseStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CloseStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CloseStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 128; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCloseStmt(node); }
    }
    public static final Nonterminal.CloseStmtNonterminal CLOSESTMT = CloseStmtNonterminal.getInstance();

    public static class FunctionSubprogramNonterminal extends Nonterminal
    {
        private FunctionSubprogramNonterminal() {;} // Singleton
        private static FunctionSubprogramNonterminal singletonInstance = null;
        public static final FunctionSubprogramNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new FunctionSubprogramNonterminal(); return singletonInstance; }

        public String getDescription() { return "<FunctionSubprogram>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 129; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitFunctionSubprogram(node); }
    }
    public static final Nonterminal.FunctionSubprogramNonterminal FUNCTIONSUBPROGRAM = FunctionSubprogramNonterminal.getInstance();

    public static class AssignmentStmt50ReductionNonterminal extends Nonterminal
    {
        private AssignmentStmt50ReductionNonterminal() {;} // Singleton
        private static AssignmentStmt50ReductionNonterminal singletonInstance = null;
        public static final AssignmentStmt50ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AssignmentStmt50ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AssignmentStmt@50>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 130; }
    }
    public static final Nonterminal.AssignmentStmt50ReductionNonterminal ASSIGNMENTSTMT50 = AssignmentStmt50ReductionNonterminal.getInstance();

    public static class OpenStmtNonterminal extends Nonterminal
    {
        private OpenStmtNonterminal() {;} // Singleton
        private static OpenStmtNonterminal singletonInstance = null;
        public static final OpenStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new OpenStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<OpenStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 131; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitOpenStmt(node); }
    }
    public static final Nonterminal.OpenStmtNonterminal OPENSTMT = OpenStmtNonterminal.getInstance();

    public static class SubroutineInterfaceRangeNonterminal extends Nonterminal
    {
        private SubroutineInterfaceRangeNonterminal() {;} // Singleton
        private static SubroutineInterfaceRangeNonterminal singletonInstance = null;
        public static final SubroutineInterfaceRangeNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SubroutineInterfaceRangeNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SubroutineInterfaceRange>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 132; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSubroutineInterfaceRange(node); }
    }
    public static final Nonterminal.SubroutineInterfaceRangeNonterminal SUBROUTINEINTERFACERANGE = SubroutineInterfaceRangeNonterminal.getInstance();

    public static class AccessStmt9ReductionNonterminal extends Nonterminal
    {
        private AccessStmt9ReductionNonterminal() {;} // Singleton
        private static AccessStmt9ReductionNonterminal singletonInstance = null;
        public static final AccessStmt9ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AccessStmt9ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AccessStmt@9>"; }

        int getNumberOfSymbolsOnValueStack() { return 2; }

        int getGoToRow() { return 133; }
    }
    public static final Nonterminal.AccessStmt9ReductionNonterminal ACCESSSTMT9 = AccessStmt9ReductionNonterminal.getInstance();

    public static class WhereConstructStmtNonterminal extends Nonterminal
    {
        private WhereConstructStmtNonterminal() {;} // Singleton
        private static WhereConstructStmtNonterminal singletonInstance = null;
        public static final WhereConstructStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new WhereConstructStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<WhereConstructStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 134; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitWhereConstructStmt(node); }
    }
    public static final Nonterminal.WhereConstructStmtNonterminal WHERECONSTRUCTSTMT = WhereConstructStmtNonterminal.getInstance();

    public static class DataStmtNonterminal extends Nonterminal
    {
        private DataStmtNonterminal() {;} // Singleton
        private static DataStmtNonterminal singletonInstance = null;
        public static final DataStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DataStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DataStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 135; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDataStmt(node); }
    }
    public static final Nonterminal.DataStmtNonterminal DATASTMT = DataStmtNonterminal.getInstance();

    public static class DummyArgNameNonterminal extends Nonterminal
    {
        private DummyArgNameNonterminal() {;} // Singleton
        private static DummyArgNameNonterminal singletonInstance = null;
        public static final DummyArgNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DummyArgNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DummyArgName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 136; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDummyArgName(node); }
    }
    public static final Nonterminal.DummyArgNameNonterminal DUMMYARGNAME = DummyArgNameNonterminal.getInstance();

    public static class COperand28ReductionNonterminal extends Nonterminal
    {
        private COperand28ReductionNonterminal() {;} // Singleton
        private static COperand28ReductionNonterminal singletonInstance = null;
        public static final COperand28ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new COperand28ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<COperand@28>"; }

        int getNumberOfSymbolsOnValueStack() { return 3; }

        int getGoToRow() { return 137; }
    }
    public static final Nonterminal.COperand28ReductionNonterminal COPERAND28 = COperand28ReductionNonterminal.getInstance();

    public static class TargetObjectListNonterminal extends Nonterminal
    {
        private TargetObjectListNonterminal() {;} // Singleton
        private static TargetObjectListNonterminal singletonInstance = null;
        public static final TargetObjectListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new TargetObjectListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<TargetObjectList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 138; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitTargetObjectList(node); }
    }
    public static final Nonterminal.TargetObjectListNonterminal TARGETOBJECTLIST = TargetObjectListNonterminal.getInstance();

    public static class PointerFieldNonterminal extends Nonterminal
    {
        private PointerFieldNonterminal() {;} // Singleton
        private static PointerFieldNonterminal singletonInstance = null;
        public static final PointerFieldNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new PointerFieldNonterminal(); return singletonInstance; }

        public String getDescription() { return "<PointerField>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 139; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitPointerField(node); }
    }
    public static final Nonterminal.PointerFieldNonterminal POINTERFIELD = PointerFieldNonterminal.getInstance();

    public static class InterfaceSpecificationNonterminal extends Nonterminal
    {
        private InterfaceSpecificationNonterminal() {;} // Singleton
        private static InterfaceSpecificationNonterminal singletonInstance = null;
        public static final InterfaceSpecificationNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new InterfaceSpecificationNonterminal(); return singletonInstance; }

        public String getDescription() { return "<InterfaceSpecification>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 140; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitInterfaceSpecification(node); }
    }
    public static final Nonterminal.InterfaceSpecificationNonterminal INTERFACESPECIFICATION = InterfaceSpecificationNonterminal.getInstance();

    public static class EntityDecl4ReductionNonterminal extends Nonterminal
    {
        private EntityDecl4ReductionNonterminal() {;} // Singleton
        private static EntityDecl4ReductionNonterminal singletonInstance = null;
        public static final EntityDecl4ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EntityDecl4ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EntityDecl@4>"; }

        int getNumberOfSymbolsOnValueStack() { return 2; }

        int getGoToRow() { return 141; }
    }
    public static final Nonterminal.EntityDecl4ReductionNonterminal ENTITYDECL4 = EntityDecl4ReductionNonterminal.getInstance();

    public static class EndProgramStmt68ReductionNonterminal extends Nonterminal
    {
        private EndProgramStmt68ReductionNonterminal() {;} // Singleton
        private static EndProgramStmt68ReductionNonterminal singletonInstance = null;
        public static final EndProgramStmt68ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndProgramStmt68ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndProgramStmt@68>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 142; }
    }
    public static final Nonterminal.EndProgramStmt68ReductionNonterminal ENDPROGRAMSTMT68 = EndProgramStmt68ReductionNonterminal.getInstance();

    public static class TargetObjectNonterminal extends Nonterminal
    {
        private TargetObjectNonterminal() {;} // Singleton
        private static TargetObjectNonterminal singletonInstance = null;
        public static final TargetObjectNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new TargetObjectNonterminal(); return singletonInstance; }

        public String getDescription() { return "<TargetObject>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 143; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitTargetObject(node); }
    }
    public static final Nonterminal.TargetObjectNonterminal TARGETOBJECT = TargetObjectNonterminal.getInstance();

    public static class ArithmeticIfStmtNonterminal extends Nonterminal
    {
        private ArithmeticIfStmtNonterminal() {;} // Singleton
        private static ArithmeticIfStmtNonterminal singletonInstance = null;
        public static final ArithmeticIfStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ArithmeticIfStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ArithmeticIfStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 144; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitArithmeticIfStmt(node); }
    }
    public static final Nonterminal.ArithmeticIfStmtNonterminal ARITHMETICIFSTMT = ArithmeticIfStmtNonterminal.getInstance();

    public static class ConditionalBodyNonterminal extends Nonterminal
    {
        private ConditionalBodyNonterminal() {;} // Singleton
        private static ConditionalBodyNonterminal singletonInstance = null;
        public static final ConditionalBodyNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ConditionalBodyNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ConditionalBody>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 145; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitConditionalBody(node); }
    }
    public static final Nonterminal.ConditionalBodyNonterminal CONDITIONALBODY = ConditionalBodyNonterminal.getInstance();

    public static class DataIDoObjectListNonterminal extends Nonterminal
    {
        private DataIDoObjectListNonterminal() {;} // Singleton
        private static DataIDoObjectListNonterminal singletonInstance = null;
        public static final DataIDoObjectListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DataIDoObjectListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DataIDoObjectList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 146; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDataIDoObjectList(node); }
    }
    public static final Nonterminal.DataIDoObjectListNonterminal DATAIDOOBJECTLIST = DataIDoObjectListNonterminal.getInstance();

    public static class NullifyStmtNonterminal extends Nonterminal
    {
        private NullifyStmtNonterminal() {;} // Singleton
        private static NullifyStmtNonterminal singletonInstance = null;
        public static final NullifyStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new NullifyStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<NullifyStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 147; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitNullifyStmt(node); }
    }
    public static final Nonterminal.NullifyStmtNonterminal NULLIFYSTMT = NullifyStmtNonterminal.getInstance();

    public static class OptionalStmtNonterminal extends Nonterminal
    {
        private OptionalStmtNonterminal() {;} // Singleton
        private static OptionalStmtNonterminal singletonInstance = null;
        public static final OptionalStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new OptionalStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<OptionalStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 148; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitOptionalStmt(node); }
    }
    public static final Nonterminal.OptionalStmtNonterminal OPTIONALSTMT = OptionalStmtNonterminal.getInstance();

    public static class AcValueList1Nonterminal extends Nonterminal
    {
        private AcValueList1Nonterminal() {;} // Singleton
        private static AcValueList1Nonterminal singletonInstance = null;
        public static final AcValueList1Nonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AcValueList1Nonterminal(); return singletonInstance; }

        public String getDescription() { return "<AcValueList1>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 149; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAcValueList1(node); }
    }
    public static final Nonterminal.AcValueList1Nonterminal ACVALUELIST1 = AcValueList1Nonterminal.getInstance();

    public static class FormatsepNonterminal extends Nonterminal
    {
        private FormatsepNonterminal() {;} // Singleton
        private static FormatsepNonterminal singletonInstance = null;
        public static final FormatsepNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new FormatsepNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Formatsep>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 150; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitFormatsep(node); }
    }
    public static final Nonterminal.FormatsepNonterminal FORMATSEP = FormatsepNonterminal.getInstance();

    public static class ImpliedDoVariableNonterminal extends Nonterminal
    {
        private ImpliedDoVariableNonterminal() {;} // Singleton
        private static ImpliedDoVariableNonterminal singletonInstance = null;
        public static final ImpliedDoVariableNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ImpliedDoVariableNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ImpliedDoVariable>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 151; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitImpliedDoVariable(node); }
    }
    public static final Nonterminal.ImpliedDoVariableNonterminal IMPLIEDDOVARIABLE = ImpliedDoVariableNonterminal.getInstance();

    public static class SubstrConstNonterminal extends Nonterminal
    {
        private SubstrConstNonterminal() {;} // Singleton
        private static SubstrConstNonterminal singletonInstance = null;
        public static final SubstrConstNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SubstrConstNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SubstrConst>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 152; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSubstrConst(node); }
    }
    public static final Nonterminal.SubstrConstNonterminal SUBSTRCONST = SubstrConstNonterminal.getInstance();

    public static class SubstringRangeNonterminal extends Nonterminal
    {
        private SubstringRangeNonterminal() {;} // Singleton
        private static SubstringRangeNonterminal singletonInstance = null;
        public static final SubstringRangeNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SubstringRangeNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SubstringRange>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 153; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSubstringRange(node); }
    }
    public static final Nonterminal.SubstringRangeNonterminal SUBSTRINGRANGE = SubstringRangeNonterminal.getInstance();

    public static class ModuleNameNonterminal extends Nonterminal
    {
        private ModuleNameNonterminal() {;} // Singleton
        private static ModuleNameNonterminal singletonInstance = null;
        public static final ModuleNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ModuleNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ModuleName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 154; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitModuleName(node); }
    }
    public static final Nonterminal.ModuleNameNonterminal MODULENAME = ModuleNameNonterminal.getInstance();

    public static class RdFmtIdExprNonterminal extends Nonterminal
    {
        private RdFmtIdExprNonterminal() {;} // Singleton
        private static RdFmtIdExprNonterminal singletonInstance = null;
        public static final RdFmtIdExprNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new RdFmtIdExprNonterminal(); return singletonInstance; }

        public String getDescription() { return "<RdFmtIdExpr>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 155; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitRdFmtIdExpr(node); }
    }
    public static final Nonterminal.RdFmtIdExprNonterminal RDFMTIDEXPR = RdFmtIdExprNonterminal.getInstance();

    public static class SFExprNonterminal extends Nonterminal
    {
        private SFExprNonterminal() {;} // Singleton
        private static SFExprNonterminal singletonInstance = null;
        public static final SFExprNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SFExprNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SFExpr>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 156; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSFExpr(node); }
    }
    public static final Nonterminal.SFExprNonterminal SFEXPR = SFExprNonterminal.getInstance();

    public static class CycleStmt65ReductionNonterminal extends Nonterminal
    {
        private CycleStmt65ReductionNonterminal() {;} // Singleton
        private static CycleStmt65ReductionNonterminal singletonInstance = null;
        public static final CycleStmt65ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CycleStmt65ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CycleStmt@65>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 157; }
    }
    public static final Nonterminal.CycleStmt65ReductionNonterminal CYCLESTMT65 = CycleStmt65ReductionNonterminal.getInstance();

    public static class EntityDecl3ReductionNonterminal extends Nonterminal
    {
        private EntityDecl3ReductionNonterminal() {;} // Singleton
        private static EntityDecl3ReductionNonterminal singletonInstance = null;
        public static final EntityDecl3ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EntityDecl3ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EntityDecl@3>"; }

        int getNumberOfSymbolsOnValueStack() { return 3; }

        int getGoToRow() { return 158; }
    }
    public static final Nonterminal.EntityDecl3ReductionNonterminal ENTITYDECL3 = EntityDecl3ReductionNonterminal.getInstance();

    public static class AccessIdNonterminal extends Nonterminal
    {
        private AccessIdNonterminal() {;} // Singleton
        private static AccessIdNonterminal singletonInstance = null;
        public static final AccessIdNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AccessIdNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AccessId>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 159; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAccessId(node); }
    }
    public static final Nonterminal.AccessIdNonterminal ACCESSID = AccessIdNonterminal.getInstance();

    public static class BlockDataBodyConstructNonterminal extends Nonterminal
    {
        private BlockDataBodyConstructNonterminal() {;} // Singleton
        private static BlockDataBodyConstructNonterminal singletonInstance = null;
        public static final BlockDataBodyConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new BlockDataBodyConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<BlockDataBodyConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 160; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitBlockDataBodyConstruct(node); }
    }
    public static final Nonterminal.BlockDataBodyConstructNonterminal BLOCKDATABODYCONSTRUCT = BlockDataBodyConstructNonterminal.getInstance();

    public static class NamelistGroupsNonterminal extends Nonterminal
    {
        private NamelistGroupsNonterminal() {;} // Singleton
        private static NamelistGroupsNonterminal singletonInstance = null;
        public static final NamelistGroupsNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new NamelistGroupsNonterminal(); return singletonInstance; }

        public String getDescription() { return "<NamelistGroups>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 161; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitNamelistGroups(node); }
    }
    public static final Nonterminal.NamelistGroupsNonterminal NAMELISTGROUPS = NamelistGroupsNonterminal.getInstance();

    public static class NamedConstantDefListNonterminal extends Nonterminal
    {
        private NamedConstantDefListNonterminal() {;} // Singleton
        private static NamedConstantDefListNonterminal singletonInstance = null;
        public static final NamedConstantDefListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new NamedConstantDefListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<NamedConstantDefList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 162; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitNamedConstantDefList(node); }
    }
    public static final Nonterminal.NamedConstantDefListNonterminal NAMEDCONSTANTDEFLIST = NamedConstantDefListNonterminal.getInstance();

    public static class PointerStmtObjectListNonterminal extends Nonterminal
    {
        private PointerStmtObjectListNonterminal() {;} // Singleton
        private static PointerStmtObjectListNonterminal singletonInstance = null;
        public static final PointerStmtObjectListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new PointerStmtObjectListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<PointerStmtObjectList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 163; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitPointerStmtObjectList(node); }
    }
    public static final Nonterminal.PointerStmtObjectListNonterminal POINTERSTMTOBJECTLIST = PointerStmtObjectListNonterminal.getInstance();

    public static class EquivOperand45ReductionNonterminal extends Nonterminal
    {
        private EquivOperand45ReductionNonterminal() {;} // Singleton
        private static EquivOperand45ReductionNonterminal singletonInstance = null;
        public static final EquivOperand45ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EquivOperand45ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EquivOperand@45>"; }

        int getNumberOfSymbolsOnValueStack() { return 2; }

        int getGoToRow() { return 164; }
    }
    public static final Nonterminal.EquivOperand45ReductionNonterminal EQUIVOPERAND45 = EquivOperand45ReductionNonterminal.getInstance();

    public static class InterfaceRangeNonterminal extends Nonterminal
    {
        private InterfaceRangeNonterminal() {;} // Singleton
        private static InterfaceRangeNonterminal singletonInstance = null;
        public static final InterfaceRangeNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new InterfaceRangeNonterminal(); return singletonInstance; }

        public String getDescription() { return "<InterfaceRange>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 165; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitInterfaceRange(node); }
    }
    public static final Nonterminal.InterfaceRangeNonterminal INTERFACERANGE = InterfaceRangeNonterminal.getInstance();

    public static class EndTypeStmt2ReductionNonterminal extends Nonterminal
    {
        private EndTypeStmt2ReductionNonterminal() {;} // Singleton
        private static EndTypeStmt2ReductionNonterminal singletonInstance = null;
        public static final EndTypeStmt2ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndTypeStmt2ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndTypeStmt@2>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 166; }
    }
    public static final Nonterminal.EndTypeStmt2ReductionNonterminal ENDTYPESTMT2 = EndTypeStmt2ReductionNonterminal.getInstance();

    public static class ComponentDeclListNonterminal extends Nonterminal
    {
        private ComponentDeclListNonterminal() {;} // Singleton
        private static ComponentDeclListNonterminal singletonInstance = null;
        public static final ComponentDeclListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ComponentDeclListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ComponentDeclList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 167; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitComponentDeclList(node); }
    }
    public static final Nonterminal.ComponentDeclListNonterminal COMPONENTDECLLIST = ComponentDeclListNonterminal.getInstance();

    public static class ElseStmtNonterminal extends Nonterminal
    {
        private ElseStmtNonterminal() {;} // Singleton
        private static ElseStmtNonterminal singletonInstance = null;
        public static final ElseStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ElseStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ElseStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 168; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitElseStmt(node); }
    }
    public static final Nonterminal.ElseStmtNonterminal ELSESTMT = ElseStmtNonterminal.getInstance();

    public static class ComplexConstNonterminal extends Nonterminal
    {
        private ComplexConstNonterminal() {;} // Singleton
        private static ComplexConstNonterminal singletonInstance = null;
        public static final ComplexConstNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ComplexConstNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ComplexConst>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 169; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitComplexConst(node); }
    }
    public static final Nonterminal.ComplexConstNonterminal COMPLEXCONST = ComplexConstNonterminal.getInstance();

    public static class ExecutableProgramNonterminal extends Nonterminal
    {
        private ExecutableProgramNonterminal() {;} // Singleton
        private static ExecutableProgramNonterminal singletonInstance = null;
        public static final ExecutableProgramNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ExecutableProgramNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ExecutableProgram>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 170; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitExecutableProgram(node); }
    }
    public static final Nonterminal.ExecutableProgramNonterminal EXECUTABLEPROGRAM = ExecutableProgramNonterminal.getInstance();

    public static class ComblockNonterminal extends Nonterminal
    {
        private ComblockNonterminal() {;} // Singleton
        private static ComblockNonterminal singletonInstance = null;
        public static final ComblockNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ComblockNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Comblock>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 171; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitComblock(node); }
    }
    public static final Nonterminal.ComblockNonterminal COMBLOCK = ComblockNonterminal.getInstance();

    public static class OutputItemList1Nonterminal extends Nonterminal
    {
        private OutputItemList1Nonterminal() {;} // Singleton
        private static OutputItemList1Nonterminal singletonInstance = null;
        public static final OutputItemList1Nonterminal getInstance() { if (singletonInstance == null) singletonInstance = new OutputItemList1Nonterminal(); return singletonInstance; }

        public String getDescription() { return "<OutputItemList1>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 172; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitOutputItemList1(node); }
    }
    public static final Nonterminal.OutputItemList1Nonterminal OUTPUTITEMLIST1 = OutputItemList1Nonterminal.getInstance();

    public static class StructureComponentNonterminal extends Nonterminal
    {
        private StructureComponentNonterminal() {;} // Singleton
        private static StructureComponentNonterminal singletonInstance = null;
        public static final StructureComponentNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new StructureComponentNonterminal(); return singletonInstance; }

        public String getDescription() { return "<StructureComponent>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 173; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitStructureComponent(node); }
    }
    public static final Nonterminal.StructureComponentNonterminal STRUCTURECOMPONENT = StructureComponentNonterminal.getInstance();

    public static class ObsoleteActionStmtNonterminal extends Nonterminal
    {
        private ObsoleteActionStmtNonterminal() {;} // Singleton
        private static ObsoleteActionStmtNonterminal singletonInstance = null;
        public static final ObsoleteActionStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ObsoleteActionStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ObsoleteActionStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 174; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitObsoleteActionStmt(node); }
    }
    public static final Nonterminal.ObsoleteActionStmtNonterminal OBSOLETEACTIONSTMT = ObsoleteActionStmtNonterminal.getInstance();

    public static class ActionStmtNonterminal extends Nonterminal
    {
        private ActionStmtNonterminal() {;} // Singleton
        private static ActionStmtNonterminal singletonInstance = null;
        public static final ActionStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ActionStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ActionStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 175; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitActionStmt(node); }
    }
    public static final Nonterminal.ActionStmtNonterminal ACTIONSTMT = ActionStmtNonterminal.getInstance();

    public static class SavedEntityListNonterminal extends Nonterminal
    {
        private SavedEntityListNonterminal() {;} // Singleton
        private static SavedEntityListNonterminal singletonInstance = null;
        public static final SavedEntityListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SavedEntityListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SavedEntityList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 176; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSavedEntityList(node); }
    }
    public static final Nonterminal.SavedEntityListNonterminal SAVEDENTITYLIST = SavedEntityListNonterminal.getInstance();

    public static class EndTypeStmt1ReductionNonterminal extends Nonterminal
    {
        private EndTypeStmt1ReductionNonterminal() {;} // Singleton
        private static EndTypeStmt1ReductionNonterminal singletonInstance = null;
        public static final EndTypeStmt1ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndTypeStmt1ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndTypeStmt@1>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 177; }
    }
    public static final Nonterminal.EndTypeStmt1ReductionNonterminal ENDTYPESTMT1 = EndTypeStmt1ReductionNonterminal.getInstance();

    public static class ConnectSpecNonterminal extends Nonterminal
    {
        private ConnectSpecNonterminal() {;} // Singleton
        private static ConnectSpecNonterminal singletonInstance = null;
        public static final ConnectSpecNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ConnectSpecNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ConnectSpec>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 178; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitConnectSpec(node); }
    }
    public static final Nonterminal.ConnectSpecNonterminal CONNECTSPEC = ConnectSpecNonterminal.getInstance();

    public static class ArraySpecNonterminal extends Nonterminal
    {
        private ArraySpecNonterminal() {;} // Singleton
        private static ArraySpecNonterminal singletonInstance = null;
        public static final ArraySpecNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ArraySpecNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ArraySpec>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 179; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitArraySpec(node); }
    }
    public static final Nonterminal.ArraySpecNonterminal ARRAYSPEC = ArraySpecNonterminal.getInstance();

    public static class ProcedureNameListNonterminal extends Nonterminal
    {
        private ProcedureNameListNonterminal() {;} // Singleton
        private static ProcedureNameListNonterminal singletonInstance = null;
        public static final ProcedureNameListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ProcedureNameListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ProcedureNameList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 180; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitProcedureNameList(node); }
    }
    public static final Nonterminal.ProcedureNameListNonterminal PROCEDURENAMELIST = ProcedureNameListNonterminal.getInstance();

    public static class CommonBlockObjectNonterminal extends Nonterminal
    {
        private CommonBlockObjectNonterminal() {;} // Singleton
        private static CommonBlockObjectNonterminal singletonInstance = null;
        public static final CommonBlockObjectNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CommonBlockObjectNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CommonBlockObject>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 181; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCommonBlockObject(node); }
    }
    public static final Nonterminal.CommonBlockObjectNonterminal COMMONBLOCKOBJECT = CommonBlockObjectNonterminal.getInstance();

    public static class SubroutineSubprogramNonterminal extends Nonterminal
    {
        private SubroutineSubprogramNonterminal() {;} // Singleton
        private static SubroutineSubprogramNonterminal singletonInstance = null;
        public static final SubroutineSubprogramNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SubroutineSubprogramNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SubroutineSubprogram>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 182; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSubroutineSubprogram(node); }
    }
    public static final Nonterminal.SubroutineSubprogramNonterminal SUBROUTINESUBPROGRAM = SubroutineSubprogramNonterminal.getInstance();

    public static class UnitIdentifierNonterminal extends Nonterminal
    {
        private UnitIdentifierNonterminal() {;} // Singleton
        private static UnitIdentifierNonterminal singletonInstance = null;
        public static final UnitIdentifierNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new UnitIdentifierNonterminal(); return singletonInstance; }

        public String getDescription() { return "<UnitIdentifier>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 183; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitUnitIdentifier(node); }
    }
    public static final Nonterminal.UnitIdentifierNonterminal UNITIDENTIFIER = UnitIdentifierNonterminal.getInstance();

    public static class PointerStmtObjectNonterminal extends Nonterminal
    {
        private PointerStmtObjectNonterminal() {;} // Singleton
        private static PointerStmtObjectNonterminal singletonInstance = null;
        public static final PointerStmtObjectNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new PointerStmtObjectNonterminal(); return singletonInstance; }

        public String getDescription() { return "<PointerStmtObject>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 184; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitPointerStmtObject(node); }
    }
    public static final Nonterminal.PointerStmtObjectNonterminal POINTERSTMTOBJECT = PointerStmtObjectNonterminal.getInstance();

    public static class GotoStmtNonterminal extends Nonterminal
    {
        private GotoStmtNonterminal() {;} // Singleton
        private static GotoStmtNonterminal singletonInstance = null;
        public static final GotoStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new GotoStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<GotoStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 185; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitGotoStmt(node); }
    }
    public static final Nonterminal.GotoStmtNonterminal GOTOSTMT = GotoStmtNonterminal.getInstance();

    public static class FunctionPrefixNonterminal extends Nonterminal
    {
        private FunctionPrefixNonterminal() {;} // Singleton
        private static FunctionPrefixNonterminal singletonInstance = null;
        public static final FunctionPrefixNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new FunctionPrefixNonterminal(); return singletonInstance; }

        public String getDescription() { return "<FunctionPrefix>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 186; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitFunctionPrefix(node); }
    }
    public static final Nonterminal.FunctionPrefixNonterminal FUNCTIONPREFIX = FunctionPrefixNonterminal.getInstance();

    public static class Level3Expr40ReductionNonterminal extends Nonterminal
    {
        private Level3Expr40ReductionNonterminal() {;} // Singleton
        private static Level3Expr40ReductionNonterminal singletonInstance = null;
        public static final Level3Expr40ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new Level3Expr40ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Level3Expr@40>"; }

        int getNumberOfSymbolsOnValueStack() { return 2; }

        int getGoToRow() { return 187; }
    }
    public static final Nonterminal.Level3Expr40ReductionNonterminal LEVEL3EXPR40 = Level3Expr40ReductionNonterminal.getInstance();

    public static class GoToKwNonterminal extends Nonterminal
    {
        private GoToKwNonterminal() {;} // Singleton
        private static GoToKwNonterminal singletonInstance = null;
        public static final GoToKwNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new GoToKwNonterminal(); return singletonInstance; }

        public String getDescription() { return "<GoToKw>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 188; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitGoToKw(node); }
    }
    public static final Nonterminal.GoToKwNonterminal GOTOKW = GoToKwNonterminal.getInstance();

    public static class MaskedElsewhereStmtNonterminal extends Nonterminal
    {
        private MaskedElsewhereStmtNonterminal() {;} // Singleton
        private static MaskedElsewhereStmtNonterminal singletonInstance = null;
        public static final MaskedElsewhereStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new MaskedElsewhereStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<MaskedElsewhereStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 189; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitMaskedElsewhereStmt(node); }
    }
    public static final Nonterminal.MaskedElsewhereStmtNonterminal MASKEDELSEWHERESTMT = MaskedElsewhereStmtNonterminal.getInstance();

    public static class ModuleBlockNonterminal extends Nonterminal
    {
        private ModuleBlockNonterminal() {;} // Singleton
        private static ModuleBlockNonterminal singletonInstance = null;
        public static final ModuleBlockNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ModuleBlockNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ModuleBlock>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 190; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitModuleBlock(node); }
    }
    public static final Nonterminal.ModuleBlockNonterminal MODULEBLOCK = ModuleBlockNonterminal.getInstance();

    public static class LblDefNonterminal extends Nonterminal
    {
        private LblDefNonterminal() {;} // Singleton
        private static LblDefNonterminal singletonInstance = null;
        public static final LblDefNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new LblDefNonterminal(); return singletonInstance; }

        public String getDescription() { return "<LblDef>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 191; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitLblDef(node); }
    }
    public static final Nonterminal.LblDefNonterminal LBLDEF = LblDefNonterminal.getInstance();

    public static class InputImpliedDoNonterminal extends Nonterminal
    {
        private InputImpliedDoNonterminal() {;} // Singleton
        private static InputImpliedDoNonterminal singletonInstance = null;
        public static final InputImpliedDoNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new InputImpliedDoNonterminal(); return singletonInstance; }

        public String getDescription() { return "<InputImpliedDo>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 192; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitInputImpliedDo(node); }
    }
    public static final Nonterminal.InputImpliedDoNonterminal INPUTIMPLIEDDO = InputImpliedDoNonterminal.getInstance();

    public static class ParameterStmtNonterminal extends Nonterminal
    {
        private ParameterStmtNonterminal() {;} // Singleton
        private static ParameterStmtNonterminal singletonInstance = null;
        public static final ParameterStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ParameterStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ParameterStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 193; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitParameterStmt(node); }
    }
    public static final Nonterminal.ParameterStmtNonterminal PARAMETERSTMT = ParameterStmtNonterminal.getInstance();

    public static class DataRefNonterminal extends Nonterminal
    {
        private DataRefNonterminal() {;} // Singleton
        private static DataRefNonterminal singletonInstance = null;
        public static final DataRefNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DataRefNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DataRef>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 194; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDataRef(node); }
    }
    public static final Nonterminal.DataRefNonterminal DATAREF = DataRefNonterminal.getInstance();

    public static class EndInterfaceStmtNonterminal extends Nonterminal
    {
        private EndInterfaceStmtNonterminal() {;} // Singleton
        private static EndInterfaceStmtNonterminal singletonInstance = null;
        public static final EndInterfaceStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndInterfaceStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndInterfaceStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 195; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEndInterfaceStmt(node); }
    }
    public static final Nonterminal.EndInterfaceStmtNonterminal ENDINTERFACESTMT = EndInterfaceStmtNonterminal.getInstance();

    public static class WhereRangeNonterminal extends Nonterminal
    {
        private WhereRangeNonterminal() {;} // Singleton
        private static WhereRangeNonterminal singletonInstance = null;
        public static final WhereRangeNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new WhereRangeNonterminal(); return singletonInstance; }

        public String getDescription() { return "<WhereRange>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 196; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitWhereRange(node); }
    }
    public static final Nonterminal.WhereRangeNonterminal WHERERANGE = WhereRangeNonterminal.getInstance();

    public static class AndOpNonterminal extends Nonterminal
    {
        private AndOpNonterminal() {;} // Singleton
        private static AndOpNonterminal singletonInstance = null;
        public static final AndOpNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AndOpNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AndOp>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 197; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAndOp(node); }
    }
    public static final Nonterminal.AndOpNonterminal ANDOP = AndOpNonterminal.getInstance();

    public static class IfThenStmtNonterminal extends Nonterminal
    {
        private IfThenStmtNonterminal() {;} // Singleton
        private static IfThenStmtNonterminal singletonInstance = null;
        public static final IfThenStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new IfThenStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<IfThenStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 198; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitIfThenStmt(node); }
    }
    public static final Nonterminal.IfThenStmtNonterminal IFTHENSTMT = IfThenStmtNonterminal.getInstance();

    public static class NotOpNonterminal extends Nonterminal
    {
        private NotOpNonterminal() {;} // Singleton
        private static NotOpNonterminal singletonInstance = null;
        public static final NotOpNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new NotOpNonterminal(); return singletonInstance; }

        public String getDescription() { return "<NotOp>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 199; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitNotOp(node); }
    }
    public static final Nonterminal.NotOpNonterminal NOTOP = NotOpNonterminal.getInstance();

    public static class ForallBodyConstructNonterminal extends Nonterminal
    {
        private ForallBodyConstructNonterminal() {;} // Singleton
        private static ForallBodyConstructNonterminal singletonInstance = null;
        public static final ForallBodyConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ForallBodyConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ForallBodyConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 200; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitForallBodyConstruct(node); }
    }
    public static final Nonterminal.ForallBodyConstructNonterminal FORALLBODYCONSTRUCT = ForallBodyConstructNonterminal.getInstance();

    public static class ObsoleteExecutionPartConstructNonterminal extends Nonterminal
    {
        private ObsoleteExecutionPartConstructNonterminal() {;} // Singleton
        private static ObsoleteExecutionPartConstructNonterminal singletonInstance = null;
        public static final ObsoleteExecutionPartConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ObsoleteExecutionPartConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ObsoleteExecutionPartConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 201; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitObsoleteExecutionPartConstruct(node); }
    }
    public static final Nonterminal.ObsoleteExecutionPartConstructNonterminal OBSOLETEEXECUTIONPARTCONSTRUCT = ObsoleteExecutionPartConstructNonterminal.getInstance();

    public static class PositionSpecNonterminal extends Nonterminal
    {
        private PositionSpecNonterminal() {;} // Singleton
        private static PositionSpecNonterminal singletonInstance = null;
        public static final PositionSpecNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new PositionSpecNonterminal(); return singletonInstance; }

        public String getDescription() { return "<PositionSpec>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 202; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitPositionSpec(node); }
    }
    public static final Nonterminal.PositionSpecNonterminal POSITIONSPEC = PositionSpecNonterminal.getInstance();

    public static class UFExprNonterminal extends Nonterminal
    {
        private UFExprNonterminal() {;} // Singleton
        private static UFExprNonterminal singletonInstance = null;
        public static final UFExprNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new UFExprNonterminal(); return singletonInstance; }

        public String getDescription() { return "<UFExpr>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 203; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitUFExpr(node); }
    }
    public static final Nonterminal.UFExprNonterminal UFEXPR = UFExprNonterminal.getInstance();

    public static class EndBlockDataStmt76ReductionNonterminal extends Nonterminal
    {
        private EndBlockDataStmt76ReductionNonterminal() {;} // Singleton
        private static EndBlockDataStmt76ReductionNonterminal singletonInstance = null;
        public static final EndBlockDataStmt76ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndBlockDataStmt76ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndBlockDataStmt@76>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 204; }
    }
    public static final Nonterminal.EndBlockDataStmt76ReductionNonterminal ENDBLOCKDATASTMT76 = EndBlockDataStmt76ReductionNonterminal.getInstance();

    public static class BodyConstructNonterminal extends Nonterminal
    {
        private BodyConstructNonterminal() {;} // Singleton
        private static BodyConstructNonterminal singletonInstance = null;
        public static final BodyConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new BodyConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<BodyConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 205; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitBodyConstruct(node); }
    }
    public static final Nonterminal.BodyConstructNonterminal BODYCONSTRUCT = BodyConstructNonterminal.getInstance();

    public static class SFDummyArgNameListNonterminal extends Nonterminal
    {
        private SFDummyArgNameListNonterminal() {;} // Singleton
        private static SFDummyArgNameListNonterminal singletonInstance = null;
        public static final SFDummyArgNameListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SFDummyArgNameListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SFDummyArgNameList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 206; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSFDummyArgNameList(node); }
    }
    public static final Nonterminal.SFDummyArgNameListNonterminal SFDUMMYARGNAMELIST = SFDummyArgNameListNonterminal.getInstance();

    public static class PrintStmtNonterminal extends Nonterminal
    {
        private PrintStmtNonterminal() {;} // Singleton
        private static PrintStmtNonterminal singletonInstance = null;
        public static final PrintStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new PrintStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<PrintStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 207; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitPrintStmt(node); }
    }
    public static final Nonterminal.PrintStmtNonterminal PRINTSTMT = PrintStmtNonterminal.getInstance();

    public static class SFDummyArgNameNonterminal extends Nonterminal
    {
        private SFDummyArgNameNonterminal() {;} // Singleton
        private static SFDummyArgNameNonterminal singletonInstance = null;
        public static final SFDummyArgNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SFDummyArgNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SFDummyArgName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 208; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSFDummyArgName(node); }
    }
    public static final Nonterminal.SFDummyArgNameNonterminal SFDUMMYARGNAME = SFDummyArgNameNonterminal.getInstance();

    public static class ForallTripletSpecListNonterminal extends Nonterminal
    {
        private ForallTripletSpecListNonterminal() {;} // Singleton
        private static ForallTripletSpecListNonterminal singletonInstance = null;
        public static final ForallTripletSpecListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ForallTripletSpecListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ForallTripletSpecList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 209; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitForallTripletSpecList(node); }
    }
    public static final Nonterminal.ForallTripletSpecListNonterminal FORALLTRIPLETSPECLIST = ForallTripletSpecListNonterminal.getInstance();

    public static class FieldSelectorNonterminal extends Nonterminal
    {
        private FieldSelectorNonterminal() {;} // Singleton
        private static FieldSelectorNonterminal singletonInstance = null;
        public static final FieldSelectorNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new FieldSelectorNonterminal(); return singletonInstance; }

        public String getDescription() { return "<FieldSelector>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 210; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitFieldSelector(node); }
    }
    public static final Nonterminal.FieldSelectorNonterminal FIELDSELECTOR = FieldSelectorNonterminal.getInstance();

    public static class ScalarVariableNonterminal extends Nonterminal
    {
        private ScalarVariableNonterminal() {;} // Singleton
        private static ScalarVariableNonterminal singletonInstance = null;
        public static final ScalarVariableNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ScalarVariableNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ScalarVariable>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 211; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitScalarVariable(node); }
    }
    public static final Nonterminal.ScalarVariableNonterminal SCALARVARIABLE = ScalarVariableNonterminal.getInstance();

    public static class MaskExprNonterminal extends Nonterminal
    {
        private MaskExprNonterminal() {;} // Singleton
        private static MaskExprNonterminal singletonInstance = null;
        public static final MaskExprNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new MaskExprNonterminal(); return singletonInstance; }

        public String getDescription() { return "<MaskExpr>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 212; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitMaskExpr(node); }
    }
    public static final Nonterminal.MaskExprNonterminal MASKEXPR = MaskExprNonterminal.getInstance();

    public static class ModuleSubprogramNonterminal extends Nonterminal
    {
        private ModuleSubprogramNonterminal() {;} // Singleton
        private static ModuleSubprogramNonterminal singletonInstance = null;
        public static final ModuleSubprogramNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ModuleSubprogramNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ModuleSubprogram>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 213; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitModuleSubprogram(node); }
    }
    public static final Nonterminal.ModuleSubprogramNonterminal MODULESUBPROGRAM = ModuleSubprogramNonterminal.getInstance();

    public static class ObjectNameNonterminal extends Nonterminal
    {
        private ObjectNameNonterminal() {;} // Singleton
        private static ObjectNameNonterminal singletonInstance = null;
        public static final ObjectNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ObjectNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ObjectName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 214; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitObjectName(node); }
    }
    public static final Nonterminal.ObjectNameNonterminal OBJECTNAME = ObjectNameNonterminal.getInstance();

    public static class ComponentInitializationNonterminal extends Nonterminal
    {
        private ComponentInitializationNonterminal() {;} // Singleton
        private static ComponentInitializationNonterminal singletonInstance = null;
        public static final ComponentInitializationNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ComponentInitializationNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ComponentInitialization>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 215; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitComponentInitialization(node); }
    }
    public static final Nonterminal.ComponentInitializationNonterminal COMPONENTINITIALIZATION = ComponentInitializationNonterminal.getInstance();

    public static class ExternalNameNonterminal extends Nonterminal
    {
        private ExternalNameNonterminal() {;} // Singleton
        private static ExternalNameNonterminal singletonInstance = null;
        public static final ExternalNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ExternalNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ExternalName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 216; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitExternalName(node); }
    }
    public static final Nonterminal.ExternalNameNonterminal EXTERNALNAME = ExternalNameNonterminal.getInstance();

    public static class ConstantNonterminal extends Nonterminal
    {
        private ConstantNonterminal() {;} // Singleton
        private static ConstantNonterminal singletonInstance = null;
        public static final ConstantNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ConstantNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Constant>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 217; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitConstant(node); }
    }
    public static final Nonterminal.ConstantNonterminal CONSTANT = ConstantNonterminal.getInstance();

    public static class PrefixSpecListNonterminal extends Nonterminal
    {
        private PrefixSpecListNonterminal() {;} // Singleton
        private static PrefixSpecListNonterminal singletonInstance = null;
        public static final PrefixSpecListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new PrefixSpecListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<PrefixSpecList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 218; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitPrefixSpecList(node); }
    }
    public static final Nonterminal.PrefixSpecListNonterminal PREFIXSPECLIST = PrefixSpecListNonterminal.getInstance();

    public static class MultOperand36ReductionNonterminal extends Nonterminal
    {
        private MultOperand36ReductionNonterminal() {;} // Singleton
        private static MultOperand36ReductionNonterminal singletonInstance = null;
        public static final MultOperand36ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new MultOperand36ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<MultOperand@36>"; }

        int getNumberOfSymbolsOnValueStack() { return 2; }

        int getGoToRow() { return 219; }
    }
    public static final Nonterminal.MultOperand36ReductionNonterminal MULTOPERAND36 = MultOperand36ReductionNonterminal.getInstance();

    public static class UFFactor37ReductionNonterminal extends Nonterminal
    {
        private UFFactor37ReductionNonterminal() {;} // Singleton
        private static UFFactor37ReductionNonterminal singletonInstance = null;
        public static final UFFactor37ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new UFFactor37ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<UFFactor@37>"; }

        int getNumberOfSymbolsOnValueStack() { return 2; }

        int getGoToRow() { return 220; }
    }
    public static final Nonterminal.UFFactor37ReductionNonterminal UFFACTOR37 = UFFactor37ReductionNonterminal.getInstance();

    public static class EndBlockDataStmt75ReductionNonterminal extends Nonterminal
    {
        private EndBlockDataStmt75ReductionNonterminal() {;} // Singleton
        private static EndBlockDataStmt75ReductionNonterminal singletonInstance = null;
        public static final EndBlockDataStmt75ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndBlockDataStmt75ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndBlockDataStmt@75>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 221; }
    }
    public static final Nonterminal.EndBlockDataStmt75ReductionNonterminal ENDBLOCKDATASTMT75 = EndBlockDataStmt75ReductionNonterminal.getInstance();

    public static class ConnectSpecListNonterminal extends Nonterminal
    {
        private ConnectSpecListNonterminal() {;} // Singleton
        private static ConnectSpecListNonterminal singletonInstance = null;
        public static final ConnectSpecListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ConnectSpecListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ConnectSpecList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 222; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitConnectSpecList(node); }
    }
    public static final Nonterminal.ConnectSpecListNonterminal CONNECTSPECLIST = ConnectSpecListNonterminal.getInstance();

    public static class OnlyListNonterminal extends Nonterminal
    {
        private OnlyListNonterminal() {;} // Singleton
        private static OnlyListNonterminal singletonInstance = null;
        public static final OnlyListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new OnlyListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<OnlyList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 223; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitOnlyList(node); }
    }
    public static final Nonterminal.OnlyListNonterminal ONLYLIST = OnlyListNonterminal.getInstance();

    public static class UnsignedArithmeticConstantNonterminal extends Nonterminal
    {
        private UnsignedArithmeticConstantNonterminal() {;} // Singleton
        private static UnsignedArithmeticConstantNonterminal singletonInstance = null;
        public static final UnsignedArithmeticConstantNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new UnsignedArithmeticConstantNonterminal(); return singletonInstance; }

        public String getDescription() { return "<UnsignedArithmeticConstant>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 224; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitUnsignedArithmeticConstant(node); }
    }
    public static final Nonterminal.UnsignedArithmeticConstantNonterminal UNSIGNEDARITHMETICCONSTANT = UnsignedArithmeticConstantNonterminal.getInstance();

    public static class SubroutineArgListNonterminal extends Nonterminal
    {
        private SubroutineArgListNonterminal() {;} // Singleton
        private static SubroutineArgListNonterminal singletonInstance = null;
        public static final SubroutineArgListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SubroutineArgListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SubroutineArgList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 225; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSubroutineArgList(node); }
    }
    public static final Nonterminal.SubroutineArgListNonterminal SUBROUTINEARGLIST = SubroutineArgListNonterminal.getInstance();

    public static class BlockDataBodyNonterminal extends Nonterminal
    {
        private BlockDataBodyNonterminal() {;} // Singleton
        private static BlockDataBodyNonterminal singletonInstance = null;
        public static final BlockDataBodyNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new BlockDataBodyNonterminal(); return singletonInstance; }

        public String getDescription() { return "<BlockDataBody>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 226; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitBlockDataBody(node); }
    }
    public static final Nonterminal.BlockDataBodyNonterminal BLOCKDATABODY = BlockDataBodyNonterminal.getInstance();

    public static class AttrSpecNonterminal extends Nonterminal
    {
        private AttrSpecNonterminal() {;} // Singleton
        private static AttrSpecNonterminal singletonInstance = null;
        public static final AttrSpecNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AttrSpecNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AttrSpec>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 227; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAttrSpec(node); }
    }
    public static final Nonterminal.AttrSpecNonterminal ATTRSPEC = AttrSpecNonterminal.getInstance();

    public static class FunctionReferenceNonterminal extends Nonterminal
    {
        private FunctionReferenceNonterminal() {;} // Singleton
        private static FunctionReferenceNonterminal singletonInstance = null;
        public static final FunctionReferenceNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new FunctionReferenceNonterminal(); return singletonInstance; }

        public String getDescription() { return "<FunctionReference>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 228; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitFunctionReference(node); }
    }
    public static final Nonterminal.FunctionReferenceNonterminal FUNCTIONREFERENCE = FunctionReferenceNonterminal.getInstance();

    public static class COperand30ReductionNonterminal extends Nonterminal
    {
        private COperand30ReductionNonterminal() {;} // Singleton
        private static COperand30ReductionNonterminal singletonInstance = null;
        public static final COperand30ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new COperand30ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<COperand@30>"; }

        int getNumberOfSymbolsOnValueStack() { return 3; }

        int getGoToRow() { return 229; }
    }
    public static final Nonterminal.COperand30ReductionNonterminal COPERAND30 = COperand30ReductionNonterminal.getInstance();

    public static class AssignedGotoStmtNonterminal extends Nonterminal
    {
        private AssignedGotoStmtNonterminal() {;} // Singleton
        private static AssignedGotoStmtNonterminal singletonInstance = null;
        public static final AssignedGotoStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AssignedGotoStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AssignedGotoStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 230; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAssignedGotoStmt(node); }
    }
    public static final Nonterminal.AssignedGotoStmtNonterminal ASSIGNEDGOTOSTMT = AssignedGotoStmtNonterminal.getInstance();

    public static class EndBlockDataStmt74ReductionNonterminal extends Nonterminal
    {
        private EndBlockDataStmt74ReductionNonterminal() {;} // Singleton
        private static EndBlockDataStmt74ReductionNonterminal singletonInstance = null;
        public static final EndBlockDataStmt74ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndBlockDataStmt74ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndBlockDataStmt@74>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 231; }
    }
    public static final Nonterminal.EndBlockDataStmt74ReductionNonterminal ENDBLOCKDATASTMT74 = EndBlockDataStmt74ReductionNonterminal.getInstance();

    public static class ElsewhereStmtNonterminal extends Nonterminal
    {
        private ElsewhereStmtNonterminal() {;} // Singleton
        private static ElsewhereStmtNonterminal singletonInstance = null;
        public static final ElsewhereStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ElsewhereStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ElsewhereStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 232; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitElsewhereStmt(node); }
    }
    public static final Nonterminal.ElsewhereStmtNonterminal ELSEWHERESTMT = ElsewhereStmtNonterminal.getInstance();

    public static class RdUnitIdNonterminal extends Nonterminal
    {
        private RdUnitIdNonterminal() {;} // Singleton
        private static RdUnitIdNonterminal singletonInstance = null;
        public static final RdUnitIdNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new RdUnitIdNonterminal(); return singletonInstance; }

        public String getDescription() { return "<RdUnitId>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 233; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitRdUnitId(node); }
    }
    public static final Nonterminal.RdUnitIdNonterminal RDUNITID = RdUnitIdNonterminal.getInstance();

    public static class BackspaceStmtNonterminal extends Nonterminal
    {
        private BackspaceStmtNonterminal() {;} // Singleton
        private static BackspaceStmtNonterminal singletonInstance = null;
        public static final BackspaceStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new BackspaceStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<BackspaceStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 234; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitBackspaceStmt(node); }
    }
    public static final Nonterminal.BackspaceStmtNonterminal BACKSPACESTMT = BackspaceStmtNonterminal.getInstance();

    public static class InvalidEntityDeclNonterminal extends Nonterminal
    {
        private InvalidEntityDeclNonterminal() {;} // Singleton
        private static InvalidEntityDeclNonterminal singletonInstance = null;
        public static final InvalidEntityDeclNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new InvalidEntityDeclNonterminal(); return singletonInstance; }

        public String getDescription() { return "<InvalidEntityDecl>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 235; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitInvalidEntityDecl(node); }
    }
    public static final Nonterminal.InvalidEntityDeclNonterminal INVALIDENTITYDECL = InvalidEntityDeclNonterminal.getInstance();

    public static class Primary19ReductionNonterminal extends Nonterminal
    {
        private Primary19ReductionNonterminal() {;} // Singleton
        private static Primary19ReductionNonterminal singletonInstance = null;
        public static final Primary19ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new Primary19ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Primary@19>"; }

        int getNumberOfSymbolsOnValueStack() { return 4; }

        int getGoToRow() { return 236; }
    }
    public static final Nonterminal.Primary19ReductionNonterminal PRIMARY19 = Primary19ReductionNonterminal.getInstance();

    public static class FunctionInterfaceRangeNonterminal extends Nonterminal
    {
        private FunctionInterfaceRangeNonterminal() {;} // Singleton
        private static FunctionInterfaceRangeNonterminal singletonInstance = null;
        public static final FunctionInterfaceRangeNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new FunctionInterfaceRangeNonterminal(); return singletonInstance; }

        public String getDescription() { return "<FunctionInterfaceRange>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 237; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitFunctionInterfaceRange(node); }
    }
    public static final Nonterminal.FunctionInterfaceRangeNonterminal FUNCTIONINTERFACERANGE = FunctionInterfaceRangeNonterminal.getInstance();

    public static class CommonBlockNameNonterminal extends Nonterminal
    {
        private CommonBlockNameNonterminal() {;} // Singleton
        private static CommonBlockNameNonterminal singletonInstance = null;
        public static final CommonBlockNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CommonBlockNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CommonBlockName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 238; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCommonBlockName(node); }
    }
    public static final Nonterminal.CommonBlockNameNonterminal COMMONBLOCKNAME = CommonBlockNameNonterminal.getInstance();

    public static class AllocatableStmtNonterminal extends Nonterminal
    {
        private AllocatableStmtNonterminal() {;} // Singleton
        private static AllocatableStmtNonterminal singletonInstance = null;
        public static final AllocatableStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AllocatableStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AllocatableStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 239; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAllocatableStmt(node); }
    }
    public static final Nonterminal.AllocatableStmtNonterminal ALLOCATABLESTMT = AllocatableStmtNonterminal.getInstance();

    public static class EntryStmtNonterminal extends Nonterminal
    {
        private EntryStmtNonterminal() {;} // Singleton
        private static EntryStmtNonterminal singletonInstance = null;
        public static final EntryStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EntryStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EntryStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 240; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEntryStmt(node); }
    }
    public static final Nonterminal.EntryStmtNonterminal ENTRYSTMT = EntryStmtNonterminal.getInstance();

    public static class ArrayAllocationListNonterminal extends Nonterminal
    {
        private ArrayAllocationListNonterminal() {;} // Singleton
        private static ArrayAllocationListNonterminal singletonInstance = null;
        public static final ArrayAllocationListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ArrayAllocationListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ArrayAllocationList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 241; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitArrayAllocationList(node); }
    }
    public static final Nonterminal.ArrayAllocationListNonterminal ARRAYALLOCATIONLIST = ArrayAllocationListNonterminal.getInstance();

    public static class DataStmtConstantNonterminal extends Nonterminal
    {
        private DataStmtConstantNonterminal() {;} // Singleton
        private static DataStmtConstantNonterminal singletonInstance = null;
        public static final DataStmtConstantNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DataStmtConstantNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DataStmtConstant>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 242; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDataStmtConstant(node); }
    }
    public static final Nonterminal.DataStmtConstantNonterminal DATASTMTCONSTANT = DataStmtConstantNonterminal.getInstance();

    public static class FunctionNameNonterminal extends Nonterminal
    {
        private FunctionNameNonterminal() {;} // Singleton
        private static FunctionNameNonterminal singletonInstance = null;
        public static final FunctionNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new FunctionNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<FunctionName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 243; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitFunctionName(node); }
    }
    public static final Nonterminal.FunctionNameNonterminal FUNCTIONNAME = FunctionNameNonterminal.getInstance();

    public static class IntentStmt7ReductionNonterminal extends Nonterminal
    {
        private IntentStmt7ReductionNonterminal() {;} // Singleton
        private static IntentStmt7ReductionNonterminal singletonInstance = null;
        public static final IntentStmt7ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new IntentStmt7ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<IntentStmt@7>"; }

        int getNumberOfSymbolsOnValueStack() { return 2; }

        int getGoToRow() { return 244; }
    }
    public static final Nonterminal.IntentStmt7ReductionNonterminal INTENTSTMT7 = IntentStmt7ReductionNonterminal.getInstance();

    public static class CaseBodyConstructNonterminal extends Nonterminal
    {
        private CaseBodyConstructNonterminal() {;} // Singleton
        private static CaseBodyConstructNonterminal singletonInstance = null;
        public static final CaseBodyConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CaseBodyConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CaseBodyConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 245; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCaseBodyConstruct(node); }
    }
    public static final Nonterminal.CaseBodyConstructNonterminal CASEBODYCONSTRUCT = CaseBodyConstructNonterminal.getInstance();

    public static class IntentSpecNonterminal extends Nonterminal
    {
        private IntentSpecNonterminal() {;} // Singleton
        private static IntentSpecNonterminal singletonInstance = null;
        public static final IntentSpecNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new IntentSpecNonterminal(); return singletonInstance; }

        public String getDescription() { return "<IntentSpec>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 246; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitIntentSpec(node); }
    }
    public static final Nonterminal.IntentSpecNonterminal INTENTSPEC = IntentSpecNonterminal.getInstance();

    public static class SFTermNonterminal extends Nonterminal
    {
        private SFTermNonterminal() {;} // Singleton
        private static SFTermNonterminal singletonInstance = null;
        public static final SFTermNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SFTermNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SFTerm>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 247; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSFTerm(node); }
    }
    public static final Nonterminal.SFTermNonterminal SFTERM = SFTermNonterminal.getInstance();

    public static class EndBlockDataStmt73ReductionNonterminal extends Nonterminal
    {
        private EndBlockDataStmt73ReductionNonterminal() {;} // Singleton
        private static EndBlockDataStmt73ReductionNonterminal singletonInstance = null;
        public static final EndBlockDataStmt73ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndBlockDataStmt73ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndBlockDataStmt@73>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 248; }
    }
    public static final Nonterminal.EndBlockDataStmt73ReductionNonterminal ENDBLOCKDATASTMT73 = EndBlockDataStmt73ReductionNonterminal.getInstance();

    public static class ComputedGotoStmtNonterminal extends Nonterminal
    {
        private ComputedGotoStmtNonterminal() {;} // Singleton
        private static ComputedGotoStmtNonterminal singletonInstance = null;
        public static final ComputedGotoStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ComputedGotoStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ComputedGotoStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 249; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitComputedGotoStmt(node); }
    }
    public static final Nonterminal.ComputedGotoStmtNonterminal COMPUTEDGOTOSTMT = ComputedGotoStmtNonterminal.getInstance();

    public static class SignNonterminal extends Nonterminal
    {
        private SignNonterminal() {;} // Singleton
        private static SignNonterminal singletonInstance = null;
        public static final SignNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SignNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Sign>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 250; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSign(node); }
    }
    public static final Nonterminal.SignNonterminal SIGN = SignNonterminal.getInstance();

    public static class Level4Expr42ReductionNonterminal extends Nonterminal
    {
        private Level4Expr42ReductionNonterminal() {;} // Singleton
        private static Level4Expr42ReductionNonterminal singletonInstance = null;
        public static final Level4Expr42ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new Level4Expr42ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Level4Expr@42>"; }

        int getNumberOfSymbolsOnValueStack() { return 2; }

        int getGoToRow() { return 251; }
    }
    public static final Nonterminal.Level4Expr42ReductionNonterminal LEVEL4EXPR42 = Level4Expr42ReductionNonterminal.getInstance();

    public static class PrefixSpecNonterminal extends Nonterminal
    {
        private PrefixSpecNonterminal() {;} // Singleton
        private static PrefixSpecNonterminal singletonInstance = null;
        public static final PrefixSpecNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new PrefixSpecNonterminal(); return singletonInstance; }

        public String getDescription() { return "<PrefixSpec>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 252; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitPrefixSpec(node); }
    }
    public static final Nonterminal.PrefixSpecNonterminal PREFIXSPEC = PrefixSpecNonterminal.getInstance();

    public static class Primary27ReductionNonterminal extends Nonterminal
    {
        private Primary27ReductionNonterminal() {;} // Singleton
        private static Primary27ReductionNonterminal singletonInstance = null;
        public static final Primary27ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new Primary27ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Primary@27>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 253; }
    }
    public static final Nonterminal.Primary27ReductionNonterminal PRIMARY27 = Primary27ReductionNonterminal.getInstance();

    public static class InitializationNonterminal extends Nonterminal
    {
        private InitializationNonterminal() {;} // Singleton
        private static InitializationNonterminal singletonInstance = null;
        public static final InitializationNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new InitializationNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Initialization>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 254; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitInitialization(node); }
    }
    public static final Nonterminal.InitializationNonterminal INITIALIZATION = InitializationNonterminal.getInstance();

    public static class ArrayDeclaratorNonterminal extends Nonterminal
    {
        private ArrayDeclaratorNonterminal() {;} // Singleton
        private static ArrayDeclaratorNonterminal singletonInstance = null;
        public static final ArrayDeclaratorNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ArrayDeclaratorNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ArrayDeclarator>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 255; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitArrayDeclarator(node); }
    }
    public static final Nonterminal.ArrayDeclaratorNonterminal ARRAYDECLARATOR = ArrayDeclaratorNonterminal.getInstance();

    public static class TypeNameNonterminal extends Nonterminal
    {
        private TypeNameNonterminal() {;} // Singleton
        private static TypeNameNonterminal singletonInstance = null;
        public static final TypeNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new TypeNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<TypeName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 256; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitTypeName(node); }
    }
    public static final Nonterminal.TypeNameNonterminal TYPENAME = TypeNameNonterminal.getInstance();

    public static class ModuleSubprogramPartConstructNonterminal extends Nonterminal
    {
        private ModuleSubprogramPartConstructNonterminal() {;} // Singleton
        private static ModuleSubprogramPartConstructNonterminal singletonInstance = null;
        public static final ModuleSubprogramPartConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ModuleSubprogramPartConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ModuleSubprogramPartConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 257; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitModuleSubprogramPartConstruct(node); }
    }
    public static final Nonterminal.ModuleSubprogramPartConstructNonterminal MODULESUBPROGRAMPARTCONSTRUCT = ModuleSubprogramPartConstructNonterminal.getInstance();

    public static class Level5ExprNonterminal extends Nonterminal
    {
        private Level5ExprNonterminal() {;} // Singleton
        private static Level5ExprNonterminal singletonInstance = null;
        public static final Level5ExprNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new Level5ExprNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Level5Expr>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 258; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitLevel5Expr(node); }
    }
    public static final Nonterminal.Level5ExprNonterminal LEVEL5EXPR = Level5ExprNonterminal.getInstance();

    public static class EndfileStmtNonterminal extends Nonterminal
    {
        private EndfileStmtNonterminal() {;} // Singleton
        private static EndfileStmtNonterminal singletonInstance = null;
        public static final EndfileStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndfileStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndfileStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 259; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEndfileStmt(node); }
    }
    public static final Nonterminal.EndfileStmtNonterminal ENDFILESTMT = EndfileStmtNonterminal.getInstance();

    public static class LengthSelectorNonterminal extends Nonterminal
    {
        private LengthSelectorNonterminal() {;} // Singleton
        private static LengthSelectorNonterminal singletonInstance = null;
        public static final LengthSelectorNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new LengthSelectorNonterminal(); return singletonInstance; }

        public String getDescription() { return "<LengthSelector>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 260; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitLengthSelector(node); }
    }
    public static final Nonterminal.LengthSelectorNonterminal LENGTHSELECTOR = LengthSelectorNonterminal.getInstance();

    public static class PauseStmtNonterminal extends Nonterminal
    {
        private PauseStmtNonterminal() {;} // Singleton
        private static PauseStmtNonterminal singletonInstance = null;
        public static final PauseStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new PauseStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<PauseStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 261; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitPauseStmt(node); }
    }
    public static final Nonterminal.PauseStmtNonterminal PAUSESTMT = PauseStmtNonterminal.getInstance();

    public static class DataStmtSetNonterminal extends Nonterminal
    {
        private DataStmtSetNonterminal() {;} // Singleton
        private static DataStmtSetNonterminal singletonInstance = null;
        public static final DataStmtSetNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DataStmtSetNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DataStmtSet>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 262; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDataStmtSet(node); }
    }
    public static final Nonterminal.DataStmtSetNonterminal DATASTMTSET = DataStmtSetNonterminal.getInstance();

    public static class FunctionArgListNonterminal extends Nonterminal
    {
        private FunctionArgListNonterminal() {;} // Singleton
        private static FunctionArgListNonterminal singletonInstance = null;
        public static final FunctionArgListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new FunctionArgListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<FunctionArgList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 263; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitFunctionArgList(node); }
    }
    public static final Nonterminal.FunctionArgListNonterminal FUNCTIONARGLIST = FunctionArgListNonterminal.getInstance();

    public static class ModuleNonterminal extends Nonterminal
    {
        private ModuleNonterminal() {;} // Singleton
        private static ModuleNonterminal singletonInstance = null;
        public static final ModuleNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ModuleNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Module>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 264; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitModule(node); }
    }
    public static final Nonterminal.ModuleNonterminal MODULE = ModuleNonterminal.getInstance();

    public static class UFPrimaryNonterminal extends Nonterminal
    {
        private UFPrimaryNonterminal() {;} // Singleton
        private static UFPrimaryNonterminal singletonInstance = null;
        public static final UFPrimaryNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new UFPrimaryNonterminal(); return singletonInstance; }

        public String getDescription() { return "<UFPrimary>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 265; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitUFPrimary(node); }
    }
    public static final Nonterminal.UFPrimaryNonterminal UFPRIMARY = UFPrimaryNonterminal.getInstance();

    public static class UpperBoundNonterminal extends Nonterminal
    {
        private UpperBoundNonterminal() {;} // Singleton
        private static UpperBoundNonterminal singletonInstance = null;
        public static final UpperBoundNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new UpperBoundNonterminal(); return singletonInstance; }

        public String getDescription() { return "<UpperBound>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 266; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitUpperBound(node); }
    }
    public static final Nonterminal.UpperBoundNonterminal UPPERBOUND = UpperBoundNonterminal.getInstance();

    public static class IntentStmtNonterminal extends Nonterminal
    {
        private IntentStmtNonterminal() {;} // Singleton
        private static IntentStmtNonterminal singletonInstance = null;
        public static final IntentStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new IntentStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<IntentStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 267; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitIntentStmt(node); }
    }
    public static final Nonterminal.IntentStmtNonterminal INTENTSTMT = IntentStmtNonterminal.getInstance();

    public static class CPrimaryNonterminal extends Nonterminal
    {
        private CPrimaryNonterminal() {;} // Singleton
        private static CPrimaryNonterminal singletonInstance = null;
        public static final CPrimaryNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CPrimaryNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CPrimary>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 268; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCPrimary(node); }
    }
    public static final Nonterminal.CPrimaryNonterminal CPRIMARY = CPrimaryNonterminal.getInstance();

    public static class ThenPartNonterminal extends Nonterminal
    {
        private ThenPartNonterminal() {;} // Singleton
        private static ThenPartNonterminal singletonInstance = null;
        public static final ThenPartNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ThenPartNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ThenPart>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 269; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitThenPart(node); }
    }
    public static final Nonterminal.ThenPartNonterminal THENPART = ThenPartNonterminal.getInstance();

    public static class CharSelectorNonterminal extends Nonterminal
    {
        private CharSelectorNonterminal() {;} // Singleton
        private static CharSelectorNonterminal singletonInstance = null;
        public static final CharSelectorNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CharSelectorNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CharSelector>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 270; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCharSelector(node); }
    }
    public static final Nonterminal.CharSelectorNonterminal CHARSELECTOR = CharSelectorNonterminal.getInstance();

    public static class Primary26ReductionNonterminal extends Nonterminal
    {
        private Primary26ReductionNonterminal() {;} // Singleton
        private static Primary26ReductionNonterminal singletonInstance = null;
        public static final Primary26ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new Primary26ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Primary@26>"; }

        int getNumberOfSymbolsOnValueStack() { return 4; }

        int getGoToRow() { return 271; }
    }
    public static final Nonterminal.Primary26ReductionNonterminal PRIMARY26 = Primary26ReductionNonterminal.getInstance();

    public static class FmtSpecNonterminal extends Nonterminal
    {
        private FmtSpecNonterminal() {;} // Singleton
        private static FmtSpecNonterminal singletonInstance = null;
        public static final FmtSpecNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new FmtSpecNonterminal(); return singletonInstance; }

        public String getDescription() { return "<FmtSpec>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 272; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitFmtSpec(node); }
    }
    public static final Nonterminal.FmtSpecNonterminal FMTSPEC = FmtSpecNonterminal.getInstance();

    public static class VariableNameNonterminal extends Nonterminal
    {
        private VariableNameNonterminal() {;} // Singleton
        private static VariableNameNonterminal singletonInstance = null;
        public static final VariableNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new VariableNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<VariableName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 273; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitVariableName(node); }
    }
    public static final Nonterminal.VariableNameNonterminal VARIABLENAME = VariableNameNonterminal.getInstance();

    public static class SpecificationStmtNonterminal extends Nonterminal
    {
        private SpecificationStmtNonterminal() {;} // Singleton
        private static SpecificationStmtNonterminal singletonInstance = null;
        public static final SpecificationStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SpecificationStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SpecificationStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 274; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSpecificationStmt(node); }
    }
    public static final Nonterminal.SpecificationStmtNonterminal SPECIFICATIONSTMT = SpecificationStmtNonterminal.getInstance();

    public static class EquivOpNonterminal extends Nonterminal
    {
        private EquivOpNonterminal() {;} // Singleton
        private static EquivOpNonterminal singletonInstance = null;
        public static final EquivOpNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EquivOpNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EquivOp>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 275; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEquivOp(node); }
    }
    public static final Nonterminal.EquivOpNonterminal EQUIVOP = EquivOpNonterminal.getInstance();

    public static class DoConstructNonterminal extends Nonterminal
    {
        private DoConstructNonterminal() {;} // Singleton
        private static DoConstructNonterminal singletonInstance = null;
        public static final DoConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DoConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DoConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 276; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDoConstruct(node); }
    }
    public static final Nonterminal.DoConstructNonterminal DOCONSTRUCT = DoConstructNonterminal.getInstance();

    public static class Level4ExprNonterminal extends Nonterminal
    {
        private Level4ExprNonterminal() {;} // Singleton
        private static Level4ExprNonterminal singletonInstance = null;
        public static final Level4ExprNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new Level4ExprNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Level4Expr>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 277; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitLevel4Expr(node); }
    }
    public static final Nonterminal.Level4ExprNonterminal LEVEL4EXPR = Level4ExprNonterminal.getInstance();

    public static class EndModuleStmt71ReductionNonterminal extends Nonterminal
    {
        private EndModuleStmt71ReductionNonterminal() {;} // Singleton
        private static EndModuleStmt71ReductionNonterminal singletonInstance = null;
        public static final EndModuleStmt71ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndModuleStmt71ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndModuleStmt@71>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 278; }
    }
    public static final Nonterminal.EndModuleStmt71ReductionNonterminal ENDMODULESTMT71 = EndModuleStmt71ReductionNonterminal.getInstance();

    public static class FunctionStmt79ReductionNonterminal extends Nonterminal
    {
        private FunctionStmt79ReductionNonterminal() {;} // Singleton
        private static FunctionStmt79ReductionNonterminal singletonInstance = null;
        public static final FunctionStmt79ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new FunctionStmt79ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<FunctionStmt@79>"; }

        int getNumberOfSymbolsOnValueStack() { return 4; }

        int getGoToRow() { return 279; }
    }
    public static final Nonterminal.FunctionStmt79ReductionNonterminal FUNCTIONSTMT79 = FunctionStmt79ReductionNonterminal.getInstance();

    public static class VariableCommaNonterminal extends Nonterminal
    {
        private VariableCommaNonterminal() {;} // Singleton
        private static VariableCommaNonterminal singletonInstance = null;
        public static final VariableCommaNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new VariableCommaNonterminal(); return singletonInstance; }

        public String getDescription() { return "<VariableComma>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 280; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitVariableComma(node); }
    }
    public static final Nonterminal.VariableCommaNonterminal VARIABLECOMMA = VariableCommaNonterminal.getInstance();

    public static class DatalistNonterminal extends Nonterminal
    {
        private DatalistNonterminal() {;} // Singleton
        private static DatalistNonterminal singletonInstance = null;
        public static final DatalistNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DatalistNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Datalist>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 281; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDatalist(node); }
    }
    public static final Nonterminal.DatalistNonterminal DATALIST = DatalistNonterminal.getInstance();

    public static class WhereBodyConstructNonterminal extends Nonterminal
    {
        private WhereBodyConstructNonterminal() {;} // Singleton
        private static WhereBodyConstructNonterminal singletonInstance = null;
        public static final WhereBodyConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new WhereBodyConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<WhereBodyConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 282; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitWhereBodyConstruct(node); }
    }
    public static final Nonterminal.WhereBodyConstructNonterminal WHEREBODYCONSTRUCT = WhereBodyConstructNonterminal.getInstance();

    public static class TargetStmtNonterminal extends Nonterminal
    {
        private TargetStmtNonterminal() {;} // Singleton
        private static TargetStmtNonterminal singletonInstance = null;
        public static final TargetStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new TargetStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<TargetStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 283; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitTargetStmt(node); }
    }
    public static final Nonterminal.TargetStmtNonterminal TARGETSTMT = TargetStmtNonterminal.getInstance();

    public static class SubroutineStmtNonterminal extends Nonterminal
    {
        private SubroutineStmtNonterminal() {;} // Singleton
        private static SubroutineStmtNonterminal singletonInstance = null;
        public static final SubroutineStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SubroutineStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SubroutineStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 284; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSubroutineStmt(node); }
    }
    public static final Nonterminal.SubroutineStmtNonterminal SUBROUTINESTMT = SubroutineStmtNonterminal.getInstance();

    public static class ExitStmt66ReductionNonterminal extends Nonterminal
    {
        private ExitStmt66ReductionNonterminal() {;} // Singleton
        private static ExitStmt66ReductionNonterminal singletonInstance = null;
        public static final ExitStmt66ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ExitStmt66ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ExitStmt@66>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 285; }
    }
    public static final Nonterminal.ExitStmt66ReductionNonterminal EXITSTMT66 = ExitStmt66ReductionNonterminal.getInstance();

    public static class Primary25ReductionNonterminal extends Nonterminal
    {
        private Primary25ReductionNonterminal() {;} // Singleton
        private static Primary25ReductionNonterminal singletonInstance = null;
        public static final Primary25ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new Primary25ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Primary@25>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 286; }
    }
    public static final Nonterminal.Primary25ReductionNonterminal PRIMARY25 = Primary25ReductionNonterminal.getInstance();

    public static class AssumedShapeSpecListNonterminal extends Nonterminal
    {
        private AssumedShapeSpecListNonterminal() {;} // Singleton
        private static AssumedShapeSpecListNonterminal singletonInstance = null;
        public static final AssumedShapeSpecListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AssumedShapeSpecListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AssumedShapeSpecList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 287; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAssumedShapeSpecList(node); }
    }
    public static final Nonterminal.AssumedShapeSpecListNonterminal ASSUMEDSHAPESPECLIST = AssumedShapeSpecListNonterminal.getInstance();

    public static class EquivalenceSetListNonterminal extends Nonterminal
    {
        private EquivalenceSetListNonterminal() {;} // Singleton
        private static EquivalenceSetListNonterminal singletonInstance = null;
        public static final EquivalenceSetListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EquivalenceSetListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EquivalenceSetList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 288; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEquivalenceSetList(node); }
    }
    public static final Nonterminal.EquivalenceSetListNonterminal EQUIVALENCESETLIST = EquivalenceSetListNonterminal.getInstance();

    public static class BlockDataStmtNonterminal extends Nonterminal
    {
        private BlockDataStmtNonterminal() {;} // Singleton
        private static BlockDataStmtNonterminal singletonInstance = null;
        public static final BlockDataStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new BlockDataStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<BlockDataStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 289; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitBlockDataStmt(node); }
    }
    public static final Nonterminal.BlockDataStmtNonterminal BLOCKDATASTMT = BlockDataStmtNonterminal.getInstance();

    public static class CycleStmtNonterminal extends Nonterminal
    {
        private CycleStmtNonterminal() {;} // Singleton
        private static CycleStmtNonterminal singletonInstance = null;
        public static final CycleStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CycleStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CycleStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 290; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCycleStmt(node); }
    }
    public static final Nonterminal.CycleStmtNonterminal CYCLESTMT = CycleStmtNonterminal.getInstance();

    public static class Level3ExprNonterminal extends Nonterminal
    {
        private Level3ExprNonterminal() {;} // Singleton
        private static Level3ExprNonterminal singletonInstance = null;
        public static final Level3ExprNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new Level3ExprNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Level3Expr>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 291; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitLevel3Expr(node); }
    }
    public static final Nonterminal.Level3ExprNonterminal LEVEL3EXPR = Level3ExprNonterminal.getInstance();

    public static class SaveStmt10ReductionNonterminal extends Nonterminal
    {
        private SaveStmt10ReductionNonterminal() {;} // Singleton
        private static SaveStmt10ReductionNonterminal singletonInstance = null;
        public static final SaveStmt10ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SaveStmt10ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SaveStmt@10>"; }

        int getNumberOfSymbolsOnValueStack() { return 2; }

        int getGoToRow() { return 292; }
    }
    public static final Nonterminal.SaveStmt10ReductionNonterminal SAVESTMT10 = SaveStmt10ReductionNonterminal.getInstance();

    public static class EndModuleStmt70ReductionNonterminal extends Nonterminal
    {
        private EndModuleStmt70ReductionNonterminal() {;} // Singleton
        private static EndModuleStmt70ReductionNonterminal singletonInstance = null;
        public static final EndModuleStmt70ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndModuleStmt70ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndModuleStmt@70>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 293; }
    }
    public static final Nonterminal.EndModuleStmt70ReductionNonterminal ENDMODULESTMT70 = EndModuleStmt70ReductionNonterminal.getInstance();

    public static class AllocateObjectListNonterminal extends Nonterminal
    {
        private AllocateObjectListNonterminal() {;} // Singleton
        private static AllocateObjectListNonterminal singletonInstance = null;
        public static final AllocateObjectListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AllocateObjectListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AllocateObjectList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 294; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAllocateObjectList(node); }
    }
    public static final Nonterminal.AllocateObjectListNonterminal ALLOCATEOBJECTLIST = AllocateObjectListNonterminal.getInstance();

    public static class Level5Expr46ReductionNonterminal extends Nonterminal
    {
        private Level5Expr46ReductionNonterminal() {;} // Singleton
        private static Level5Expr46ReductionNonterminal singletonInstance = null;
        public static final Level5Expr46ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new Level5Expr46ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Level5Expr@46>"; }

        int getNumberOfSymbolsOnValueStack() { return 2; }

        int getGoToRow() { return 295; }
    }
    public static final Nonterminal.Level5Expr46ReductionNonterminal LEVEL5EXPR46 = Level5Expr46ReductionNonterminal.getInstance();

    public static class SavedCommonBlockNonterminal extends Nonterminal
    {
        private SavedCommonBlockNonterminal() {;} // Singleton
        private static SavedCommonBlockNonterminal singletonInstance = null;
        public static final SavedCommonBlockNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SavedCommonBlockNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SavedCommonBlock>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 296; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSavedCommonBlock(node); }
    }
    public static final Nonterminal.SavedCommonBlockNonterminal SAVEDCOMMONBLOCK = SavedCommonBlockNonterminal.getInstance();

    public static class EndDoStmtNonterminal extends Nonterminal
    {
        private EndDoStmtNonterminal() {;} // Singleton
        private static EndDoStmtNonterminal singletonInstance = null;
        public static final EndDoStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndDoStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndDoStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 297; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEndDoStmt(node); }
    }
    public static final Nonterminal.EndDoStmtNonterminal ENDDOSTMT = EndDoStmtNonterminal.getInstance();

    public static class BodyNonterminal extends Nonterminal
    {
        private BodyNonterminal() {;} // Singleton
        private static BodyNonterminal singletonInstance = null;
        public static final BodyNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new BodyNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Body>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 298; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitBody(node); }
    }
    public static final Nonterminal.BodyNonterminal BODY = BodyNonterminal.getInstance();

    public static class COperandNonterminal extends Nonterminal
    {
        private COperandNonterminal() {;} // Singleton
        private static COperandNonterminal singletonInstance = null;
        public static final COperandNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new COperandNonterminal(); return singletonInstance; }

        public String getDescription() { return "<COperand>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 299; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCOperand(node); }
    }
    public static final Nonterminal.COperandNonterminal COPERAND = COperandNonterminal.getInstance();

    public static class Primary24ReductionNonterminal extends Nonterminal
    {
        private Primary24ReductionNonterminal() {;} // Singleton
        private static Primary24ReductionNonterminal singletonInstance = null;
        public static final Primary24ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new Primary24ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Primary@24>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 300; }
    }
    public static final Nonterminal.Primary24ReductionNonterminal PRIMARY24 = Primary24ReductionNonterminal.getInstance();

    public static class RenameListNonterminal extends Nonterminal
    {
        private RenameListNonterminal() {;} // Singleton
        private static RenameListNonterminal singletonInstance = null;
        public static final RenameListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new RenameListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<RenameList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 301; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitRenameList(node); }
    }
    public static final Nonterminal.RenameListNonterminal RENAMELIST = RenameListNonterminal.getInstance();

    public static class UFPrimary35ReductionNonterminal extends Nonterminal
    {
        private UFPrimary35ReductionNonterminal() {;} // Singleton
        private static UFPrimary35ReductionNonterminal singletonInstance = null;
        public static final UFPrimary35ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new UFPrimary35ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<UFPrimary@35>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 302; }
    }
    public static final Nonterminal.UFPrimary35ReductionNonterminal UFPRIMARY35 = UFPrimary35ReductionNonterminal.getInstance();

    public static class KindSelectorNonterminal extends Nonterminal
    {
        private KindSelectorNonterminal() {;} // Singleton
        private static KindSelectorNonterminal singletonInstance = null;
        public static final KindSelectorNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new KindSelectorNonterminal(); return singletonInstance; }

        public String getDescription() { return "<KindSelector>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 303; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitKindSelector(node); }
    }
    public static final Nonterminal.KindSelectorNonterminal KINDSELECTOR = KindSelectorNonterminal.getInstance();

    public static class Level2ExprNonterminal extends Nonterminal
    {
        private Level2ExprNonterminal() {;} // Singleton
        private static Level2ExprNonterminal singletonInstance = null;
        public static final Level2ExprNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new Level2ExprNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Level2Expr>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 304; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitLevel2Expr(node); }
    }
    public static final Nonterminal.Level2ExprNonterminal LEVEL2EXPR = Level2ExprNonterminal.getInstance();

    public static class CaseConstructNonterminal extends Nonterminal
    {
        private CaseConstructNonterminal() {;} // Singleton
        private static CaseConstructNonterminal singletonInstance = null;
        public static final CaseConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CaseConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CaseConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 305; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCaseConstruct(node); }
    }
    public static final Nonterminal.CaseConstructNonterminal CASECONSTRUCT = CaseConstructNonterminal.getInstance();

    public static class IfStmtNonterminal extends Nonterminal
    {
        private IfStmtNonterminal() {;} // Singleton
        private static IfStmtNonterminal singletonInstance = null;
        public static final IfStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new IfStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<IfStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 306; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitIfStmt(node); }
    }
    public static final Nonterminal.IfStmtNonterminal IFSTMT = IfStmtNonterminal.getInstance();

    public static class IntrinsicStmtNonterminal extends Nonterminal
    {
        private IntrinsicStmtNonterminal() {;} // Singleton
        private static IntrinsicStmtNonterminal singletonInstance = null;
        public static final IntrinsicStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new IntrinsicStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<IntrinsicStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 307; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitIntrinsicStmt(node); }
    }
    public static final Nonterminal.IntrinsicStmtNonterminal INTRINSICSTMT = IntrinsicStmtNonterminal.getInstance();

    public static class ContainsStmtNonterminal extends Nonterminal
    {
        private ContainsStmtNonterminal() {;} // Singleton
        private static ContainsStmtNonterminal singletonInstance = null;
        public static final ContainsStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ContainsStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ContainsStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 308; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitContainsStmt(node); }
    }
    public static final Nonterminal.ContainsStmtNonterminal CONTAINSSTMT = ContainsStmtNonterminal.getInstance();

    public static class MultOperandNonterminal extends Nonterminal
    {
        private MultOperandNonterminal() {;} // Singleton
        private static MultOperandNonterminal singletonInstance = null;
        public static final MultOperandNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new MultOperandNonterminal(); return singletonInstance; }

        public String getDescription() { return "<MultOperand>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 309; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitMultOperand(node); }
    }
    public static final Nonterminal.MultOperandNonterminal MULTOPERAND = MultOperandNonterminal.getInstance();

    public static class EndModuleStmtNonterminal extends Nonterminal
    {
        private EndModuleStmtNonterminal() {;} // Singleton
        private static EndModuleStmtNonterminal singletonInstance = null;
        public static final EndModuleStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndModuleStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndModuleStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 310; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEndModuleStmt(node); }
    }
    public static final Nonterminal.EndModuleStmtNonterminal ENDMODULESTMT = EndModuleStmtNonterminal.getInstance();

    public static class CaseValueRangeListNonterminal extends Nonterminal
    {
        private CaseValueRangeListNonterminal() {;} // Singleton
        private static CaseValueRangeListNonterminal singletonInstance = null;
        public static final CaseValueRangeListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CaseValueRangeListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CaseValueRangeList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 311; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCaseValueRangeList(node); }
    }
    public static final Nonterminal.CaseValueRangeListNonterminal CASEVALUERANGELIST = CaseValueRangeListNonterminal.getInstance();

    public static class AssumedSizeSpecNonterminal extends Nonterminal
    {
        private AssumedSizeSpecNonterminal() {;} // Singleton
        private static AssumedSizeSpecNonterminal singletonInstance = null;
        public static final AssumedSizeSpecNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AssumedSizeSpecNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AssumedSizeSpec>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 312; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAssumedSizeSpec(node); }
    }
    public static final Nonterminal.AssumedSizeSpecNonterminal ASSUMEDSIZESPEC = AssumedSizeSpecNonterminal.getInstance();

    public static class UFTermNonterminal extends Nonterminal
    {
        private UFTermNonterminal() {;} // Singleton
        private static UFTermNonterminal singletonInstance = null;
        public static final UFTermNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new UFTermNonterminal(); return singletonInstance; }

        public String getDescription() { return "<UFTerm>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 313; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitUFTerm(node); }
    }
    public static final Nonterminal.UFTermNonterminal UFTERM = UFTermNonterminal.getInstance();

    public static class EndSubroutineStmt84ReductionNonterminal extends Nonterminal
    {
        private EndSubroutineStmt84ReductionNonterminal() {;} // Singleton
        private static EndSubroutineStmt84ReductionNonterminal singletonInstance = null;
        public static final EndSubroutineStmt84ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndSubroutineStmt84ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndSubroutineStmt@84>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 314; }
    }
    public static final Nonterminal.EndSubroutineStmt84ReductionNonterminal ENDSUBROUTINESTMT84 = EndSubroutineStmt84ReductionNonterminal.getInstance();

    public static class DerivedTypeBodyConstructNonterminal extends Nonterminal
    {
        private DerivedTypeBodyConstructNonterminal() {;} // Singleton
        private static DerivedTypeBodyConstructNonterminal singletonInstance = null;
        public static final DerivedTypeBodyConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DerivedTypeBodyConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DerivedTypeBodyConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 315; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDerivedTypeBodyConstruct(node); }
    }
    public static final Nonterminal.DerivedTypeBodyConstructNonterminal DERIVEDTYPEBODYCONSTRUCT = DerivedTypeBodyConstructNonterminal.getInstance();

    public static class Primary23ReductionNonterminal extends Nonterminal
    {
        private Primary23ReductionNonterminal() {;} // Singleton
        private static Primary23ReductionNonterminal singletonInstance = null;
        public static final Primary23ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new Primary23ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Primary@23>"; }

        int getNumberOfSymbolsOnValueStack() { return 4; }

        int getGoToRow() { return 316; }
    }
    public static final Nonterminal.Primary23ReductionNonterminal PRIMARY23 = Primary23ReductionNonterminal.getInstance();

    public static class ElsewhereStmt54ReductionNonterminal extends Nonterminal
    {
        private ElsewhereStmt54ReductionNonterminal() {;} // Singleton
        private static ElsewhereStmt54ReductionNonterminal singletonInstance = null;
        public static final ElsewhereStmt54ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ElsewhereStmt54ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ElsewhereStmt@54>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 317; }
    }
    public static final Nonterminal.ElsewhereStmt54ReductionNonterminal ELSEWHERESTMT54 = ElsewhereStmt54ReductionNonterminal.getInstance();

    public static class UFPrimary34ReductionNonterminal extends Nonterminal
    {
        private UFPrimary34ReductionNonterminal() {;} // Singleton
        private static UFPrimary34ReductionNonterminal singletonInstance = null;
        public static final UFPrimary34ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new UFPrimary34ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<UFPrimary@34>"; }

        int getNumberOfSymbolsOnValueStack() { return 4; }

        int getGoToRow() { return 318; }
    }
    public static final Nonterminal.UFPrimary34ReductionNonterminal UFPRIMARY34 = UFPrimary34ReductionNonterminal.getInstance();

    public static class AccessSpecNonterminal extends Nonterminal
    {
        private AccessSpecNonterminal() {;} // Singleton
        private static AccessSpecNonterminal singletonInstance = null;
        public static final AccessSpecNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AccessSpecNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AccessSpec>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 319; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAccessSpec(node); }
    }
    public static final Nonterminal.AccessSpecNonterminal ACCESSSPEC = AccessSpecNonterminal.getInstance();

    public static class IntentParListNonterminal extends Nonterminal
    {
        private IntentParListNonterminal() {;} // Singleton
        private static IntentParListNonterminal singletonInstance = null;
        public static final IntentParListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new IntentParListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<IntentParList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 320; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitIntentParList(node); }
    }
    public static final Nonterminal.IntentParListNonterminal INTENTPARLIST = IntentParListNonterminal.getInstance();

    public static class PositionSpecListNonterminal extends Nonterminal
    {
        private PositionSpecListNonterminal() {;} // Singleton
        private static PositionSpecListNonterminal singletonInstance = null;
        public static final PositionSpecListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new PositionSpecListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<PositionSpecList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 321; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitPositionSpecList(node); }
    }
    public static final Nonterminal.PositionSpecListNonterminal POSITIONSPECLIST = PositionSpecListNonterminal.getInstance();

    public static class FunctionRangeNonterminal extends Nonterminal
    {
        private FunctionRangeNonterminal() {;} // Singleton
        private static FunctionRangeNonterminal singletonInstance = null;
        public static final FunctionRangeNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new FunctionRangeNonterminal(); return singletonInstance; }

        public String getDescription() { return "<FunctionRange>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 322; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitFunctionRange(node); }
    }
    public static final Nonterminal.FunctionRangeNonterminal FUNCTIONRANGE = FunctionRangeNonterminal.getInstance();

    public static class Level1ExprNonterminal extends Nonterminal
    {
        private Level1ExprNonterminal() {;} // Singleton
        private static Level1ExprNonterminal singletonInstance = null;
        public static final Level1ExprNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new Level1ExprNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Level1Expr>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 323; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitLevel1Expr(node); }
    }
    public static final Nonterminal.Level1ExprNonterminal LEVEL1EXPR = Level1ExprNonterminal.getInstance();

    public static class ArrayNameNonterminal extends Nonterminal
    {
        private ArrayNameNonterminal() {;} // Singleton
        private static ArrayNameNonterminal singletonInstance = null;
        public static final ArrayNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ArrayNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ArrayName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 324; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitArrayName(node); }
    }
    public static final Nonterminal.ArrayNameNonterminal ARRAYNAME = ArrayNameNonterminal.getInstance();

    public static class AttrSpecSeqNonterminal extends Nonterminal
    {
        private AttrSpecSeqNonterminal() {;} // Singleton
        private static AttrSpecSeqNonterminal singletonInstance = null;
        public static final AttrSpecSeqNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AttrSpecSeqNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AttrSpecSeq>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 325; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAttrSpecSeq(node); }
    }
    public static final Nonterminal.AttrSpecSeqNonterminal ATTRSPECSEQ = AttrSpecSeqNonterminal.getInstance();

    public static class ProgramStmtNonterminal extends Nonterminal
    {
        private ProgramStmtNonterminal() {;} // Singleton
        private static ProgramStmtNonterminal singletonInstance = null;
        public static final ProgramStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ProgramStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ProgramStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 326; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitProgramStmt(node); }
    }
    public static final Nonterminal.ProgramStmtNonterminal PROGRAMSTMT = ProgramStmtNonterminal.getInstance();

    public static class DefinedOperatorNonterminal extends Nonterminal
    {
        private DefinedOperatorNonterminal() {;} // Singleton
        private static DefinedOperatorNonterminal singletonInstance = null;
        public static final DefinedOperatorNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DefinedOperatorNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DefinedOperator>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 327; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDefinedOperator(node); }
    }
    public static final Nonterminal.DefinedOperatorNonterminal DEFINEDOPERATOR = DefinedOperatorNonterminal.getInstance();

    public static class ProcedureNameNonterminal extends Nonterminal
    {
        private ProcedureNameNonterminal() {;} // Singleton
        private static ProcedureNameNonterminal singletonInstance = null;
        public static final ProcedureNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ProcedureNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ProcedureName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 328; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitProcedureName(node); }
    }
    public static final Nonterminal.ProcedureNameNonterminal PROCEDURENAME = ProcedureNameNonterminal.getInstance();

    public static class Variable16ReductionNonterminal extends Nonterminal
    {
        private Variable16ReductionNonterminal() {;} // Singleton
        private static Variable16ReductionNonterminal singletonInstance = null;
        public static final Variable16ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new Variable16ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Variable@16>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 329; }
    }
    public static final Nonterminal.Variable16ReductionNonterminal VARIABLE16 = Variable16ReductionNonterminal.getInstance();

    public static class EndSubroutineStmt83ReductionNonterminal extends Nonterminal
    {
        private EndSubroutineStmt83ReductionNonterminal() {;} // Singleton
        private static EndSubroutineStmt83ReductionNonterminal singletonInstance = null;
        public static final EndSubroutineStmt83ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndSubroutineStmt83ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndSubroutineStmt@83>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 330; }
    }
    public static final Nonterminal.EndSubroutineStmt83ReductionNonterminal ENDSUBROUTINESTMT83 = EndSubroutineStmt83ReductionNonterminal.getInstance();

    public static class FormatStmt67ReductionNonterminal extends Nonterminal
    {
        private FormatStmt67ReductionNonterminal() {;} // Singleton
        private static FormatStmt67ReductionNonterminal singletonInstance = null;
        public static final FormatStmt67ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new FormatStmt67ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<FormatStmt@67>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 331; }
    }
    public static final Nonterminal.FormatStmt67ReductionNonterminal FORMATSTMT67 = FormatStmt67ReductionNonterminal.getInstance();

    public static class EquivalenceSetNonterminal extends Nonterminal
    {
        private EquivalenceSetNonterminal() {;} // Singleton
        private static EquivalenceSetNonterminal singletonInstance = null;
        public static final EquivalenceSetNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EquivalenceSetNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EquivalenceSet>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 332; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEquivalenceSet(node); }
    }
    public static final Nonterminal.EquivalenceSetNonterminal EQUIVALENCESET = EquivalenceSetNonterminal.getInstance();

    public static class OrOperand44ReductionNonterminal extends Nonterminal
    {
        private OrOperand44ReductionNonterminal() {;} // Singleton
        private static OrOperand44ReductionNonterminal singletonInstance = null;
        public static final OrOperand44ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new OrOperand44ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<OrOperand@44>"; }

        int getNumberOfSymbolsOnValueStack() { return 2; }

        int getGoToRow() { return 333; }
    }
    public static final Nonterminal.OrOperand44ReductionNonterminal OROPERAND44 = OrOperand44ReductionNonterminal.getInstance();

    public static class SubroutineStmt82ReductionNonterminal extends Nonterminal
    {
        private SubroutineStmt82ReductionNonterminal() {;} // Singleton
        private static SubroutineStmt82ReductionNonterminal singletonInstance = null;
        public static final SubroutineStmt82ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SubroutineStmt82ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SubroutineStmt@82>"; }

        int getNumberOfSymbolsOnValueStack() { return 3; }

        int getGoToRow() { return 334; }
    }
    public static final Nonterminal.SubroutineStmt82ReductionNonterminal SUBROUTINESTMT82 = SubroutineStmt82ReductionNonterminal.getInstance();

    public static class DimensionStmtNonterminal extends Nonterminal
    {
        private DimensionStmtNonterminal() {;} // Singleton
        private static DimensionStmtNonterminal singletonInstance = null;
        public static final DimensionStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DimensionStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DimensionStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 335; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDimensionStmt(node); }
    }
    public static final Nonterminal.DimensionStmtNonterminal DIMENSIONSTMT = DimensionStmtNonterminal.getInstance();

    public static class Primary22ReductionNonterminal extends Nonterminal
    {
        private Primary22ReductionNonterminal() {;} // Singleton
        private static Primary22ReductionNonterminal singletonInstance = null;
        public static final Primary22ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new Primary22ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Primary@22>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 336; }
    }
    public static final Nonterminal.Primary22ReductionNonterminal PRIMARY22 = Primary22ReductionNonterminal.getInstance();

    public static class SelectCaseBodyNonterminal extends Nonterminal
    {
        private SelectCaseBodyNonterminal() {;} // Singleton
        private static SelectCaseBodyNonterminal singletonInstance = null;
        public static final SelectCaseBodyNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SelectCaseBodyNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SelectCaseBody>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 337; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSelectCaseBody(node); }
    }
    public static final Nonterminal.SelectCaseBodyNonterminal SELECTCASEBODY = SelectCaseBodyNonterminal.getInstance();

    public static class UFPrimary33ReductionNonterminal extends Nonterminal
    {
        private UFPrimary33ReductionNonterminal() {;} // Singleton
        private static UFPrimary33ReductionNonterminal singletonInstance = null;
        public static final UFPrimary33ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new UFPrimary33ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<UFPrimary@33>"; }

        int getNumberOfSymbolsOnValueStack() { return 3; }

        int getGoToRow() { return 338; }
    }
    public static final Nonterminal.UFPrimary33ReductionNonterminal UFPRIMARY33 = UFPrimary33ReductionNonterminal.getInstance();

    public static class EndForallStmtNonterminal extends Nonterminal
    {
        private EndForallStmtNonterminal() {;} // Singleton
        private static EndForallStmtNonterminal singletonInstance = null;
        public static final EndForallStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndForallStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndForallStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 339; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEndForallStmt(node); }
    }
    public static final Nonterminal.EndForallStmtNonterminal ENDFORALLSTMT = EndForallStmtNonterminal.getInstance();

    public static class AccessStmtNonterminal extends Nonterminal
    {
        private AccessStmtNonterminal() {;} // Singleton
        private static AccessStmtNonterminal singletonInstance = null;
        public static final AccessStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AccessStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AccessStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 340; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAccessStmt(node); }
    }
    public static final Nonterminal.AccessStmtNonterminal ACCESSSTMT = AccessStmtNonterminal.getInstance();

    public static class EquivalenceStmtNonterminal extends Nonterminal
    {
        private EquivalenceStmtNonterminal() {;} // Singleton
        private static EquivalenceStmtNonterminal singletonInstance = null;
        public static final EquivalenceStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EquivalenceStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EquivalenceStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 341; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEquivalenceStmt(node); }
    }
    public static final Nonterminal.EquivalenceStmtNonterminal EQUIVALENCESTMT = EquivalenceStmtNonterminal.getInstance();

    public static class DeclarationConstructNonterminal extends Nonterminal
    {
        private DeclarationConstructNonterminal() {;} // Singleton
        private static DeclarationConstructNonterminal singletonInstance = null;
        public static final DeclarationConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DeclarationConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DeclarationConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 342; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDeclarationConstruct(node); }
    }
    public static final Nonterminal.DeclarationConstructNonterminal DECLARATIONCONSTRUCT = DeclarationConstructNonterminal.getInstance();

    public static class EndWhereStmtNonterminal extends Nonterminal
    {
        private EndWhereStmtNonterminal() {;} // Singleton
        private static EndWhereStmtNonterminal singletonInstance = null;
        public static final EndWhereStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndWhereStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndWhereStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 343; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEndWhereStmt(node); }
    }
    public static final Nonterminal.EndWhereStmtNonterminal ENDWHERESTMT = EndWhereStmtNonterminal.getInstance();

    public static class EntityDeclListNonterminal extends Nonterminal
    {
        private EntityDeclListNonterminal() {;} // Singleton
        private static EntityDeclListNonterminal singletonInstance = null;
        public static final EntityDeclListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EntityDeclListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EntityDeclList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 344; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEntityDeclList(node); }
    }
    public static final Nonterminal.EntityDeclListNonterminal ENTITYDECLLIST = EntityDeclListNonterminal.getInstance();

    public static class PointerAssignmentStmtNonterminal extends Nonterminal
    {
        private PointerAssignmentStmtNonterminal() {;} // Singleton
        private static PointerAssignmentStmtNonterminal singletonInstance = null;
        public static final PointerAssignmentStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new PointerAssignmentStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<PointerAssignmentStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 345; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitPointerAssignmentStmt(node); }
    }
    public static final Nonterminal.PointerAssignmentStmtNonterminal POINTERASSIGNMENTSTMT = PointerAssignmentStmtNonterminal.getInstance();

    public static class SectionSubscriptNonterminal extends Nonterminal
    {
        private SectionSubscriptNonterminal() {;} // Singleton
        private static SectionSubscriptNonterminal singletonInstance = null;
        public static final SectionSubscriptNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SectionSubscriptNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SectionSubscript>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 346; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSectionSubscript(node); }
    }
    public static final Nonterminal.SectionSubscriptNonterminal SECTIONSUBSCRIPT = SectionSubscriptNonterminal.getInstance();

    public static class MultOpNonterminal extends Nonterminal
    {
        private MultOpNonterminal() {;} // Singleton
        private static MultOpNonterminal singletonInstance = null;
        public static final MultOpNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new MultOpNonterminal(); return singletonInstance; }

        public String getDescription() { return "<MultOp>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 347; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitMultOp(node); }
    }
    public static final Nonterminal.MultOpNonterminal MULTOP = MultOpNonterminal.getInstance();

    public static class SFExprListNonterminal extends Nonterminal
    {
        private SFExprListNonterminal() {;} // Singleton
        private static SFExprListNonterminal singletonInstance = null;
        public static final SFExprListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SFExprListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SFExprList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 348; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSFExprList(node); }
    }
    public static final Nonterminal.SFExprListNonterminal SFEXPRLIST = SFExprListNonterminal.getInstance();

    public static class UFFactorNonterminal extends Nonterminal
    {
        private UFFactorNonterminal() {;} // Singleton
        private static UFFactorNonterminal singletonInstance = null;
        public static final UFFactorNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new UFFactorNonterminal(); return singletonInstance; }

        public String getDescription() { return "<UFFactor>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 349; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitUFFactor(node); }
    }
    public static final Nonterminal.UFFactorNonterminal UFFACTOR = UFFactorNonterminal.getInstance();

    public static class ComponentAttrSpecListNonterminal extends Nonterminal
    {
        private ComponentAttrSpecListNonterminal() {;} // Singleton
        private static ComponentAttrSpecListNonterminal singletonInstance = null;
        public static final ComponentAttrSpecListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ComponentAttrSpecListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ComponentAttrSpecList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 350; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitComponentAttrSpecList(node); }
    }
    public static final Nonterminal.ComponentAttrSpecListNonterminal COMPONENTATTRSPECLIST = ComponentAttrSpecListNonterminal.getInstance();

    public static class ComlistNonterminal extends Nonterminal
    {
        private ComlistNonterminal() {;} // Singleton
        private static ComlistNonterminal singletonInstance = null;
        public static final ComlistNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ComlistNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Comlist>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 351; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitComlist(node); }
    }
    public static final Nonterminal.ComlistNonterminal COMLIST = ComlistNonterminal.getInstance();

    public static class Variable15ReductionNonterminal extends Nonterminal
    {
        private Variable15ReductionNonterminal() {;} // Singleton
        private static Variable15ReductionNonterminal singletonInstance = null;
        public static final Variable15ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new Variable15ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Variable@15>"; }

        int getNumberOfSymbolsOnValueStack() { return 4; }

        int getGoToRow() { return 352; }
    }
    public static final Nonterminal.Variable15ReductionNonterminal VARIABLE15 = Variable15ReductionNonterminal.getInstance();

    public static class DeallocateStmtNonterminal extends Nonterminal
    {
        private DeallocateStmtNonterminal() {;} // Singleton
        private static DeallocateStmtNonterminal singletonInstance = null;
        public static final DeallocateStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DeallocateStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DeallocateStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 353; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDeallocateStmt(node); }
    }
    public static final Nonterminal.DeallocateStmtNonterminal DEALLOCATESTMT = DeallocateStmtNonterminal.getInstance();

    public static class CaseStmtNonterminal extends Nonterminal
    {
        private CaseStmtNonterminal() {;} // Singleton
        private static CaseStmtNonterminal singletonInstance = null;
        public static final CaseStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CaseStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CaseStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 354; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCaseStmt(node); }
    }
    public static final Nonterminal.CaseStmtNonterminal CASESTMT = CaseStmtNonterminal.getInstance();

    public static class AllocateStmtNonterminal extends Nonterminal
    {
        private AllocateStmtNonterminal() {;} // Singleton
        private static AllocateStmtNonterminal singletonInstance = null;
        public static final AllocateStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AllocateStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AllocateStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 355; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAllocateStmt(node); }
    }
    public static final Nonterminal.AllocateStmtNonterminal ALLOCATESTMT = AllocateStmtNonterminal.getInstance();

    public static class Primary21ReductionNonterminal extends Nonterminal
    {
        private Primary21ReductionNonterminal() {;} // Singleton
        private static Primary21ReductionNonterminal singletonInstance = null;
        public static final Primary21ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new Primary21ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Primary@21>"; }

        int getNumberOfSymbolsOnValueStack() { return 4; }

        int getGoToRow() { return 356; }
    }
    public static final Nonterminal.Primary21ReductionNonterminal PRIMARY21 = Primary21ReductionNonterminal.getInstance();

    public static class DeferredShapeSpecListNonterminal extends Nonterminal
    {
        private DeferredShapeSpecListNonterminal() {;} // Singleton
        private static DeferredShapeSpecListNonterminal singletonInstance = null;
        public static final DeferredShapeSpecListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DeferredShapeSpecListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DeferredShapeSpecList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 357; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDeferredShapeSpecList(node); }
    }
    public static final Nonterminal.DeferredShapeSpecListNonterminal DEFERREDSHAPESPECLIST = DeferredShapeSpecListNonterminal.getInstance();

    public static class UFPrimary32ReductionNonterminal extends Nonterminal
    {
        private UFPrimary32ReductionNonterminal() {;} // Singleton
        private static UFPrimary32ReductionNonterminal singletonInstance = null;
        public static final UFPrimary32ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new UFPrimary32ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<UFPrimary@32>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 358; }
    }
    public static final Nonterminal.UFPrimary32ReductionNonterminal UFPRIMARY32 = UFPrimary32ReductionNonterminal.getInstance();

    public static class AddOpNonterminal extends Nonterminal
    {
        private AddOpNonterminal() {;} // Singleton
        private static AddOpNonterminal singletonInstance = null;
        public static final AddOpNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AddOpNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AddOp>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 359; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAddOp(node); }
    }
    public static final Nonterminal.AddOpNonterminal ADDOP = AddOpNonterminal.getInstance();

    public static class SelectCaseRangeNonterminal extends Nonterminal
    {
        private SelectCaseRangeNonterminal() {;} // Singleton
        private static SelectCaseRangeNonterminal singletonInstance = null;
        public static final SelectCaseRangeNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SelectCaseRangeNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SelectCaseRange>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 360; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSelectCaseRange(node); }
    }
    public static final Nonterminal.SelectCaseRangeNonterminal SELECTCASERANGE = SelectCaseRangeNonterminal.getInstance();

    public static class GenericSpecNonterminal extends Nonterminal
    {
        private GenericSpecNonterminal() {;} // Singleton
        private static GenericSpecNonterminal singletonInstance = null;
        public static final GenericSpecNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new GenericSpecNonterminal(); return singletonInstance; }

        public String getDescription() { return "<GenericSpec>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 361; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitGenericSpec(node); }
    }
    public static final Nonterminal.GenericSpecNonterminal GENERICSPEC = GenericSpecNonterminal.getInstance();

    public static class SectionSubscriptListNonterminal extends Nonterminal
    {
        private SectionSubscriptListNonterminal() {;} // Singleton
        private static SectionSubscriptListNonterminal singletonInstance = null;
        public static final SectionSubscriptListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SectionSubscriptListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SectionSubscriptList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 362; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSectionSubscriptList(node); }
    }
    public static final Nonterminal.SectionSubscriptListNonterminal SECTIONSUBSCRIPTLIST = SectionSubscriptListNonterminal.getInstance();

    public static class DataStmtValueNonterminal extends Nonterminal
    {
        private DataStmtValueNonterminal() {;} // Singleton
        private static DataStmtValueNonterminal singletonInstance = null;
        public static final DataStmtValueNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DataStmtValueNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DataStmtValue>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 363; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDataStmtValue(node); }
    }
    public static final Nonterminal.DataStmtValueNonterminal DATASTMTVALUE = DataStmtValueNonterminal.getInstance();

    public static class RdIoCtlSpecListNonterminal extends Nonterminal
    {
        private RdIoCtlSpecListNonterminal() {;} // Singleton
        private static RdIoCtlSpecListNonterminal singletonInstance = null;
        public static final RdIoCtlSpecListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new RdIoCtlSpecListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<RdIoCtlSpecList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 364; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitRdIoCtlSpecList(node); }
    }
    public static final Nonterminal.RdIoCtlSpecListNonterminal RDIOCTLSPECLIST = RdIoCtlSpecListNonterminal.getInstance();

    public static class KindParamNonterminal extends Nonterminal
    {
        private KindParamNonterminal() {;} // Singleton
        private static KindParamNonterminal singletonInstance = null;
        public static final KindParamNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new KindParamNonterminal(); return singletonInstance; }

        public String getDescription() { return "<KindParam>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 365; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitKindParam(node); }
    }
    public static final Nonterminal.KindParamNonterminal KINDPARAM = KindParamNonterminal.getInstance();

    public static class ComponentArraySpecNonterminal extends Nonterminal
    {
        private ComponentArraySpecNonterminal() {;} // Singleton
        private static ComponentArraySpecNonterminal singletonInstance = null;
        public static final ComponentArraySpecNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ComponentArraySpecNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ComponentArraySpec>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 366; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitComponentArraySpec(node); }
    }
    public static final Nonterminal.ComponentArraySpecNonterminal COMPONENTARRAYSPEC = ComponentArraySpecNonterminal.getInstance();

    public static class ComponentNameNonterminal extends Nonterminal
    {
        private ComponentNameNonterminal() {;} // Singleton
        private static ComponentNameNonterminal singletonInstance = null;
        public static final ComponentNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ComponentNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ComponentName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 367; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitComponentName(node); }
    }
    public static final Nonterminal.ComponentNameNonterminal COMPONENTNAME = ComponentNameNonterminal.getInstance();

    public static class EndFunctionStmtNonterminal extends Nonterminal
    {
        private EndFunctionStmtNonterminal() {;} // Singleton
        private static EndFunctionStmtNonterminal singletonInstance = null;
        public static final EndFunctionStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndFunctionStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndFunctionStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 368; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEndFunctionStmt(node); }
    }
    public static final Nonterminal.EndFunctionStmtNonterminal ENDFUNCTIONSTMT = EndFunctionStmtNonterminal.getInstance();

    public static class Primary20ReductionNonterminal extends Nonterminal
    {
        private Primary20ReductionNonterminal() {;} // Singleton
        private static Primary20ReductionNonterminal singletonInstance = null;
        public static final Primary20ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new Primary20ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Primary@20>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 369; }
    }
    public static final Nonterminal.Primary20ReductionNonterminal PRIMARY20 = Primary20ReductionNonterminal.getInstance();

    public static class UFPrimary31ReductionNonterminal extends Nonterminal
    {
        private UFPrimary31ReductionNonterminal() {;} // Singleton
        private static UFPrimary31ReductionNonterminal singletonInstance = null;
        public static final UFPrimary31ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new UFPrimary31ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<UFPrimary@31>"; }

        int getNumberOfSymbolsOnValueStack() { return 4; }

        int getGoToRow() { return 370; }
    }
    public static final Nonterminal.UFPrimary31ReductionNonterminal UFPRIMARY31 = UFPrimary31ReductionNonterminal.getInstance();

    public static class SFDataRef18ReductionNonterminal extends Nonterminal
    {
        private SFDataRef18ReductionNonterminal() {;} // Singleton
        private static SFDataRef18ReductionNonterminal singletonInstance = null;
        public static final SFDataRef18ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SFDataRef18ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SFDataRef@18>"; }

        int getNumberOfSymbolsOnValueStack() { return 3; }

        int getGoToRow() { return 371; }
    }
    public static final Nonterminal.SFDataRef18ReductionNonterminal SFDATAREF18 = SFDataRef18ReductionNonterminal.getInstance();

    public static class PointerStmtNonterminal extends Nonterminal
    {
        private PointerStmtNonterminal() {;} // Singleton
        private static PointerStmtNonterminal singletonInstance = null;
        public static final PointerStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new PointerStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<PointerStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 372; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitPointerStmt(node); }
    }
    public static final Nonterminal.PointerStmtNonterminal POINTERSTMT = PointerStmtNonterminal.getInstance();

    public static class PointerObjectNonterminal extends Nonterminal
    {
        private PointerObjectNonterminal() {;} // Singleton
        private static PointerObjectNonterminal singletonInstance = null;
        public static final PointerObjectNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new PointerObjectNonterminal(); return singletonInstance; }

        public String getDescription() { return "<PointerObject>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 373; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitPointerObject(node); }
    }
    public static final Nonterminal.PointerObjectNonterminal POINTEROBJECT = PointerObjectNonterminal.getInstance();

    public static class SavedEntityNonterminal extends Nonterminal
    {
        private SavedEntityNonterminal() {;} // Singleton
        private static SavedEntityNonterminal singletonInstance = null;
        public static final SavedEntityNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SavedEntityNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SavedEntity>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 374; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSavedEntity(node); }
    }
    public static final Nonterminal.SavedEntityNonterminal SAVEDENTITY = SavedEntityNonterminal.getInstance();

    public static class MaskedElsewhereStmt53ReductionNonterminal extends Nonterminal
    {
        private MaskedElsewhereStmt53ReductionNonterminal() {;} // Singleton
        private static MaskedElsewhereStmt53ReductionNonterminal singletonInstance = null;
        public static final MaskedElsewhereStmt53ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new MaskedElsewhereStmt53ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<MaskedElsewhereStmt@53>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 375; }
    }
    public static final Nonterminal.MaskedElsewhereStmt53ReductionNonterminal MASKEDELSEWHERESTMT53 = MaskedElsewhereStmt53ReductionNonterminal.getInstance();

    public static class PowerOpNonterminal extends Nonterminal
    {
        private PowerOpNonterminal() {;} // Singleton
        private static PowerOpNonterminal singletonInstance = null;
        public static final PowerOpNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new PowerOpNonterminal(); return singletonInstance; }

        public String getDescription() { return "<PowerOp>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 376; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitPowerOp(node); }
    }
    public static final Nonterminal.PowerOpNonterminal POWEROP = PowerOpNonterminal.getInstance();

    public static class ReturnStmtNonterminal extends Nonterminal
    {
        private ReturnStmtNonterminal() {;} // Singleton
        private static ReturnStmtNonterminal singletonInstance = null;
        public static final ReturnStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ReturnStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ReturnStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 377; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitReturnStmt(node); }
    }
    public static final Nonterminal.ReturnStmtNonterminal RETURNSTMT = ReturnStmtNonterminal.getInstance();

    public static class ScalarMaskExprNonterminal extends Nonterminal
    {
        private ScalarMaskExprNonterminal() {;} // Singleton
        private static ScalarMaskExprNonterminal singletonInstance = null;
        public static final ScalarMaskExprNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ScalarMaskExprNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ScalarMaskExpr>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 378; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitScalarMaskExpr(node); }
    }
    public static final Nonterminal.ScalarMaskExprNonterminal SCALARMASKEXPR = ScalarMaskExprNonterminal.getInstance();

    public static class DimensionStmt11ReductionNonterminal extends Nonterminal
    {
        private DimensionStmt11ReductionNonterminal() {;} // Singleton
        private static DimensionStmt11ReductionNonterminal singletonInstance = null;
        public static final DimensionStmt11ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DimensionStmt11ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DimensionStmt@11>"; }

        int getNumberOfSymbolsOnValueStack() { return 2; }

        int getGoToRow() { return 379; }
    }
    public static final Nonterminal.DimensionStmt11ReductionNonterminal DIMENSIONSTMT11 = DimensionStmt11ReductionNonterminal.getInstance();

    public static class ElsewhereConstructNonterminal extends Nonterminal
    {
        private ElsewhereConstructNonterminal() {;} // Singleton
        private static ElsewhereConstructNonterminal singletonInstance = null;
        public static final ElsewhereConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ElsewhereConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ElsewhereConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 380; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitElsewhereConstruct(node); }
    }
    public static final Nonterminal.ElsewhereConstructNonterminal ELSEWHERECONSTRUCT = ElsewhereConstructNonterminal.getInstance();

    public static class SubprogramInterfaceBodyNonterminal extends Nonterminal
    {
        private SubprogramInterfaceBodyNonterminal() {;} // Singleton
        private static SubprogramInterfaceBodyNonterminal singletonInstance = null;
        public static final SubprogramInterfaceBodyNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SubprogramInterfaceBodyNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SubprogramInterfaceBody>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 381; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSubprogramInterfaceBody(node); }
    }
    public static final Nonterminal.SubprogramInterfaceBodyNonterminal SUBPROGRAMINTERFACEBODY = SubprogramInterfaceBodyNonterminal.getInstance();

    public static class EndSubroutineStmtNonterminal extends Nonterminal
    {
        private EndSubroutineStmtNonterminal() {;} // Singleton
        private static EndSubroutineStmtNonterminal singletonInstance = null;
        public static final EndSubroutineStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndSubroutineStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndSubroutineStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 382; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEndSubroutineStmt(node); }
    }
    public static final Nonterminal.EndSubroutineStmtNonterminal ENDSUBROUTINESTMT = EndSubroutineStmtNonterminal.getInstance();

    public static class EntryNameNonterminal extends Nonterminal
    {
        private EntryNameNonterminal() {;} // Singleton
        private static EntryNameNonterminal singletonInstance = null;
        public static final EntryNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EntryNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EntryName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 383; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEntryName(node); }
    }
    public static final Nonterminal.EntryNameNonterminal ENTRYNAME = EntryNameNonterminal.getInstance();

    public static class NamedConstantUseNonterminal extends Nonterminal
    {
        private NamedConstantUseNonterminal() {;} // Singleton
        private static NamedConstantUseNonterminal singletonInstance = null;
        public static final NamedConstantUseNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new NamedConstantUseNonterminal(); return singletonInstance; }

        public String getDescription() { return "<NamedConstantUse>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 384; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitNamedConstantUse(node); }
    }
    public static final Nonterminal.NamedConstantUseNonterminal NAMEDCONSTANTUSE = NamedConstantUseNonterminal.getInstance();

    public static class NamedConstantDefNonterminal extends Nonterminal
    {
        private NamedConstantDefNonterminal() {;} // Singleton
        private static NamedConstantDefNonterminal singletonInstance = null;
        public static final NamedConstantDefNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new NamedConstantDefNonterminal(); return singletonInstance; }

        public String getDescription() { return "<NamedConstantDef>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 385; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitNamedConstantDef(node); }
    }
    public static final Nonterminal.NamedConstantDefNonterminal NAMEDCONSTANTDEF = NamedConstantDefNonterminal.getInstance();

    public static class InputItemNonterminal extends Nonterminal
    {
        private InputItemNonterminal() {;} // Singleton
        private static InputItemNonterminal singletonInstance = null;
        public static final InputItemNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new InputItemNonterminal(); return singletonInstance; }

        public String getDescription() { return "<InputItem>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 386; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitInputItem(node); }
    }
    public static final Nonterminal.InputItemNonterminal INPUTITEM = InputItemNonterminal.getInstance();

    public static class PrivateSequenceStmtNonterminal extends Nonterminal
    {
        private PrivateSequenceStmtNonterminal() {;} // Singleton
        private static PrivateSequenceStmtNonterminal singletonInstance = null;
        public static final PrivateSequenceStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new PrivateSequenceStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<PrivateSequenceStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 387; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitPrivateSequenceStmt(node); }
    }
    public static final Nonterminal.PrivateSequenceStmtNonterminal PRIVATESEQUENCESTMT = PrivateSequenceStmtNonterminal.getInstance();

    public static class DataImpliedDoNonterminal extends Nonterminal
    {
        private DataImpliedDoNonterminal() {;} // Singleton
        private static DataImpliedDoNonterminal singletonInstance = null;
        public static final DataImpliedDoNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DataImpliedDoNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DataImpliedDo>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 388; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDataImpliedDo(node); }
    }
    public static final Nonterminal.DataImpliedDoNonterminal DATAIMPLIEDDO = DataImpliedDoNonterminal.getInstance();

    public static class CommonStmtNonterminal extends Nonterminal
    {
        private CommonStmtNonterminal() {;} // Singleton
        private static CommonStmtNonterminal singletonInstance = null;
        public static final CommonStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CommonStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CommonStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 389; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCommonStmt(node); }
    }
    public static final Nonterminal.CommonStmtNonterminal COMMONSTMT = CommonStmtNonterminal.getInstance();

    public static class FunctionParsNonterminal extends Nonterminal
    {
        private FunctionParsNonterminal() {;} // Singleton
        private static FunctionParsNonterminal singletonInstance = null;
        public static final FunctionParsNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new FunctionParsNonterminal(); return singletonInstance; }

        public String getDescription() { return "<FunctionPars>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 390; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitFunctionPars(node); }
    }
    public static final Nonterminal.FunctionParsNonterminal FUNCTIONPARS = FunctionParsNonterminal.getInstance();

    public static class UseStmtNonterminal extends Nonterminal
    {
        private UseStmtNonterminal() {;} // Singleton
        private static UseStmtNonterminal singletonInstance = null;
        public static final UseStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new UseStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<UseStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 391; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitUseStmt(node); }
    }
    public static final Nonterminal.UseStmtNonterminal USESTMT = UseStmtNonterminal.getInstance();

    public static class ForallConstructNonterminal extends Nonterminal
    {
        private ForallConstructNonterminal() {;} // Singleton
        private static ForallConstructNonterminal singletonInstance = null;
        public static final ForallConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ForallConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ForallConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 392; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitForallConstruct(node); }
    }
    public static final Nonterminal.ForallConstructNonterminal FORALLCONSTRUCT = ForallConstructNonterminal.getInstance();

    public static class StmtFunctionStmtNonterminal extends Nonterminal
    {
        private StmtFunctionStmtNonterminal() {;} // Singleton
        private static StmtFunctionStmtNonterminal singletonInstance = null;
        public static final StmtFunctionStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new StmtFunctionStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<StmtFunctionStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 393; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitStmtFunctionStmt(node); }
    }
    public static final Nonterminal.StmtFunctionStmtNonterminal STMTFUNCTIONSTMT = StmtFunctionStmtNonterminal.getInstance();

    public static class DeferredShapeSpecNonterminal extends Nonterminal
    {
        private DeferredShapeSpecNonterminal() {;} // Singleton
        private static DeferredShapeSpecNonterminal singletonInstance = null;
        public static final DeferredShapeSpecNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DeferredShapeSpecNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DeferredShapeSpec>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 394; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDeferredShapeSpec(node); }
    }
    public static final Nonterminal.DeferredShapeSpecNonterminal DEFERREDSHAPESPEC = DeferredShapeSpecNonterminal.getInstance();

    public static class SelectCaseStmtNonterminal extends Nonterminal
    {
        private SelectCaseStmtNonterminal() {;} // Singleton
        private static SelectCaseStmtNonterminal singletonInstance = null;
        public static final SelectCaseStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SelectCaseStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SelectCaseStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 395; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSelectCaseStmt(node); }
    }
    public static final Nonterminal.SelectCaseStmtNonterminal SELECTCASESTMT = SelectCaseStmtNonterminal.getInstance();

    public static class ReadStmtNonterminal extends Nonterminal
    {
        private ReadStmtNonterminal() {;} // Singleton
        private static ReadStmtNonterminal singletonInstance = null;
        public static final ReadStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ReadStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ReadStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 396; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitReadStmt(node); }
    }
    public static final Nonterminal.ReadStmtNonterminal READSTMT = ReadStmtNonterminal.getInstance();

    public static class OptionalStmt8ReductionNonterminal extends Nonterminal
    {
        private OptionalStmt8ReductionNonterminal() {;} // Singleton
        private static OptionalStmt8ReductionNonterminal singletonInstance = null;
        public static final OptionalStmt8ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new OptionalStmt8ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<OptionalStmt@8>"; }

        int getNumberOfSymbolsOnValueStack() { return 2; }

        int getGoToRow() { return 397; }
    }
    public static final Nonterminal.OptionalStmt8ReductionNonterminal OPTIONALSTMT8 = OptionalStmt8ReductionNonterminal.getInstance();

    public static class CharLenParamValueNonterminal extends Nonterminal
    {
        private CharLenParamValueNonterminal() {;} // Singleton
        private static CharLenParamValueNonterminal singletonInstance = null;
        public static final CharLenParamValueNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CharLenParamValueNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CharLenParamValue>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 398; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCharLenParamValue(node); }
    }
    public static final Nonterminal.CharLenParamValueNonterminal CHARLENPARAMVALUE = CharLenParamValueNonterminal.getInstance();

    public static class AllocatedShapeNonterminal extends Nonterminal
    {
        private AllocatedShapeNonterminal() {;} // Singleton
        private static AllocatedShapeNonterminal singletonInstance = null;
        public static final AllocatedShapeNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AllocatedShapeNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AllocatedShape>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 399; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAllocatedShape(node); }
    }
    public static final Nonterminal.AllocatedShapeNonterminal ALLOCATEDSHAPE = AllocatedShapeNonterminal.getInstance();

    public static class CaseSelectorNonterminal extends Nonterminal
    {
        private CaseSelectorNonterminal() {;} // Singleton
        private static CaseSelectorNonterminal singletonInstance = null;
        public static final CaseSelectorNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CaseSelectorNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CaseSelector>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 400; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCaseSelector(node); }
    }
    public static final Nonterminal.CaseSelectorNonterminal CASESELECTOR = CaseSelectorNonterminal.getInstance();

    public static class CommaExpNonterminal extends Nonterminal
    {
        private CommaExpNonterminal() {;} // Singleton
        private static CommaExpNonterminal singletonInstance = null;
        public static final CommaExpNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CommaExpNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CommaExp>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 401; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCommaExp(node); }
    }
    public static final Nonterminal.CommaExpNonterminal COMMAEXP = CommaExpNonterminal.getInstance();

    public static class PointerObjectListNonterminal extends Nonterminal
    {
        private PointerObjectListNonterminal() {;} // Singleton
        private static PointerObjectListNonterminal singletonInstance = null;
        public static final PointerObjectListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new PointerObjectListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<PointerObjectList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 402; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitPointerObjectList(node); }
    }
    public static final Nonterminal.PointerObjectListNonterminal POINTEROBJECTLIST = PointerObjectListNonterminal.getInstance();

    public static class OptionalParListNonterminal extends Nonterminal
    {
        private OptionalParListNonterminal() {;} // Singleton
        private static OptionalParListNonterminal singletonInstance = null;
        public static final OptionalParListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new OptionalParListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<OptionalParList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 403; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitOptionalParList(node); }
    }
    public static final Nonterminal.OptionalParListNonterminal OPTIONALPARLIST = OptionalParListNonterminal.getInstance();

    public static class ComponentDefStmtNonterminal extends Nonterminal
    {
        private ComponentDefStmtNonterminal() {;} // Singleton
        private static ComponentDefStmtNonterminal singletonInstance = null;
        public static final ComponentDefStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ComponentDefStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ComponentDefStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 404; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitComponentDefStmt(node); }
    }
    public static final Nonterminal.ComponentDefStmtNonterminal COMPONENTDEFSTMT = ComponentDefStmtNonterminal.getInstance();

    public static class ModuleBodyNonterminal extends Nonterminal
    {
        private ModuleBodyNonterminal() {;} // Singleton
        private static ModuleBodyNonterminal singletonInstance = null;
        public static final ModuleBodyNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ModuleBodyNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ModuleBody>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 405; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitModuleBody(node); }
    }
    public static final Nonterminal.ModuleBodyNonterminal MODULEBODY = ModuleBodyNonterminal.getInstance();

    public static class TargetStmt14ReductionNonterminal extends Nonterminal
    {
        private TargetStmt14ReductionNonterminal() {;} // Singleton
        private static TargetStmt14ReductionNonterminal singletonInstance = null;
        public static final TargetStmt14ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new TargetStmt14ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<TargetStmt@14>"; }

        int getNumberOfSymbolsOnValueStack() { return 2; }

        int getGoToRow() { return 406; }
    }
    public static final Nonterminal.TargetStmt14ReductionNonterminal TARGETSTMT14 = TargetStmt14ReductionNonterminal.getInstance();

    public static class DerivedTypeBodyNonterminal extends Nonterminal
    {
        private DerivedTypeBodyNonterminal() {;} // Singleton
        private static DerivedTypeBodyNonterminal singletonInstance = null;
        public static final DerivedTypeBodyNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DerivedTypeBodyNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DerivedTypeBody>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 407; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDerivedTypeBody(node); }
    }
    public static final Nonterminal.DerivedTypeBodyNonterminal DERIVEDTYPEBODY = DerivedTypeBodyNonterminal.getInstance();

    public static class NamelistGroupObjectNonterminal extends Nonterminal
    {
        private NamelistGroupObjectNonterminal() {;} // Singleton
        private static NamelistGroupObjectNonterminal singletonInstance = null;
        public static final NamelistGroupObjectNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new NamelistGroupObjectNonterminal(); return singletonInstance; }

        public String getDescription() { return "<NamelistGroupObject>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 408; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitNamelistGroupObject(node); }
    }
    public static final Nonterminal.NamelistGroupObjectNonterminal NAMELISTGROUPOBJECT = NamelistGroupObjectNonterminal.getInstance();

    public static class EditElementNonterminal extends Nonterminal
    {
        private EditElementNonterminal() {;} // Singleton
        private static EditElementNonterminal singletonInstance = null;
        public static final EditElementNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EditElementNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EditElement>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 409; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEditElement(node); }
    }
    public static final Nonterminal.EditElementNonterminal EDITELEMENT = EditElementNonterminal.getInstance();

    public static class SFPrimaryNonterminal extends Nonterminal
    {
        private SFPrimaryNonterminal() {;} // Singleton
        private static SFPrimaryNonterminal singletonInstance = null;
        public static final SFPrimaryNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SFPrimaryNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SFPrimary>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 410; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSFPrimary(node); }
    }
    public static final Nonterminal.SFPrimaryNonterminal SFPRIMARY = SFPrimaryNonterminal.getInstance();

    public static class InternalSubprogramNonterminal extends Nonterminal
    {
        private InternalSubprogramNonterminal() {;} // Singleton
        private static InternalSubprogramNonterminal singletonInstance = null;
        public static final InternalSubprogramNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new InternalSubprogramNonterminal(); return singletonInstance; }

        public String getDescription() { return "<InternalSubprogram>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 411; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitInternalSubprogram(node); }
    }
    public static final Nonterminal.InternalSubprogramNonterminal INTERNALSUBPROGRAM = InternalSubprogramNonterminal.getInstance();

    public static class ElseIfStmtNonterminal extends Nonterminal
    {
        private ElseIfStmtNonterminal() {;} // Singleton
        private static ElseIfStmtNonterminal singletonInstance = null;
        public static final ElseIfStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ElseIfStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ElseIfStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 412; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitElseIfStmt(node); }
    }
    public static final Nonterminal.ElseIfStmtNonterminal ELSEIFSTMT = ElseIfStmtNonterminal.getInstance();

    public static class TypeDeclarationStmtNonterminal extends Nonterminal
    {
        private TypeDeclarationStmtNonterminal() {;} // Singleton
        private static TypeDeclarationStmtNonterminal singletonInstance = null;
        public static final TypeDeclarationStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new TypeDeclarationStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<TypeDeclarationStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 413; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitTypeDeclarationStmt(node); }
    }
    public static final Nonterminal.TypeDeclarationStmtNonterminal TYPEDECLARATIONSTMT = TypeDeclarationStmtNonterminal.getInstance();

    public static class ElsePartNonterminal extends Nonterminal
    {
        private ElsePartNonterminal() {;} // Singleton
        private static ElsePartNonterminal singletonInstance = null;
        public static final ElsePartNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ElsePartNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ElsePart>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 414; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitElsePart(node); }
    }
    public static final Nonterminal.ElsePartNonterminal ELSEPART = ElsePartNonterminal.getInstance();

    public static class AssignStmtNonterminal extends Nonterminal
    {
        private AssignStmtNonterminal() {;} // Singleton
        private static AssignStmtNonterminal singletonInstance = null;
        public static final AssignStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AssignStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AssignStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 415; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAssignStmt(node); }
    }
    public static final Nonterminal.AssignStmtNonterminal ASSIGNSTMT = AssignStmtNonterminal.getInstance();

    public static class OptionalParNonterminal extends Nonterminal
    {
        private OptionalParNonterminal() {;} // Singleton
        private static OptionalParNonterminal singletonInstance = null;
        public static final OptionalParNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new OptionalParNonterminal(); return singletonInstance; }

        public String getDescription() { return "<OptionalPar>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 416; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitOptionalPar(node); }
    }
    public static final Nonterminal.OptionalParNonterminal OPTIONALPAR = OptionalParNonterminal.getInstance();

    public static class OrOperandNonterminal extends Nonterminal
    {
        private OrOperandNonterminal() {;} // Singleton
        private static OrOperandNonterminal singletonInstance = null;
        public static final OrOperandNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new OrOperandNonterminal(); return singletonInstance; }

        public String getDescription() { return "<OrOperand>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 417; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitOrOperand(node); }
    }
    public static final Nonterminal.OrOperandNonterminal OROPERAND = OrOperandNonterminal.getInstance();

    public static class RelOpNonterminal extends Nonterminal
    {
        private RelOpNonterminal() {;} // Singleton
        private static RelOpNonterminal singletonInstance = null;
        public static final RelOpNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new RelOpNonterminal(); return singletonInstance; }

        public String getDescription() { return "<RelOp>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 418; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitRelOp(node); }
    }
    public static final Nonterminal.RelOpNonterminal RELOP = RelOpNonterminal.getInstance();

    public static class CExprNonterminal extends Nonterminal
    {
        private CExprNonterminal() {;} // Singleton
        private static CExprNonterminal singletonInstance = null;
        public static final CExprNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CExprNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CExpr>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 419; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCExpr(node); }
    }
    public static final Nonterminal.CExprNonterminal CEXPR = CExprNonterminal.getInstance();

    public static class ForallHeaderNonterminal extends Nonterminal
    {
        private ForallHeaderNonterminal() {;} // Singleton
        private static ForallHeaderNonterminal singletonInstance = null;
        public static final ForallHeaderNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ForallHeaderNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ForallHeader>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 420; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitForallHeader(node); }
    }
    public static final Nonterminal.ForallHeaderNonterminal FORALLHEADER = ForallHeaderNonterminal.getInstance();

    public static class StmtFunctionRangeNonterminal extends Nonterminal
    {
        private StmtFunctionRangeNonterminal() {;} // Singleton
        private static StmtFunctionRangeNonterminal singletonInstance = null;
        public static final StmtFunctionRangeNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new StmtFunctionRangeNonterminal(); return singletonInstance; }

        public String getDescription() { return "<StmtFunctionRange>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 421; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitStmtFunctionRange(node); }
    }
    public static final Nonterminal.StmtFunctionRangeNonterminal STMTFUNCTIONRANGE = StmtFunctionRangeNonterminal.getInstance();

    public static class RdCtlSpecNonterminal extends Nonterminal
    {
        private RdCtlSpecNonterminal() {;} // Singleton
        private static RdCtlSpecNonterminal singletonInstance = null;
        public static final RdCtlSpecNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new RdCtlSpecNonterminal(); return singletonInstance; }

        public String getDescription() { return "<RdCtlSpec>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 422; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitRdCtlSpec(node); }
    }
    public static final Nonterminal.RdCtlSpecNonterminal RDCTLSPEC = RdCtlSpecNonterminal.getInstance();

    public static class Level2Expr39ReductionNonterminal extends Nonterminal
    {
        private Level2Expr39ReductionNonterminal() {;} // Singleton
        private static Level2Expr39ReductionNonterminal singletonInstance = null;
        public static final Level2Expr39ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new Level2Expr39ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Level2Expr@39>"; }

        int getNumberOfSymbolsOnValueStack() { return 2; }

        int getGoToRow() { return 423; }
    }
    public static final Nonterminal.Level2Expr39ReductionNonterminal LEVEL2EXPR39 = Level2Expr39ReductionNonterminal.getInstance();

    public static class TargetNameNonterminal extends Nonterminal
    {
        private TargetNameNonterminal() {;} // Singleton
        private static TargetNameNonterminal singletonInstance = null;
        public static final TargetNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new TargetNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<TargetName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 424; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitTargetName(node); }
    }
    public static final Nonterminal.TargetNameNonterminal TARGETNAME = TargetNameNonterminal.getInstance();

    public static class FunctionParNonterminal extends Nonterminal
    {
        private FunctionParNonterminal() {;} // Singleton
        private static FunctionParNonterminal singletonInstance = null;
        public static final FunctionParNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new FunctionParNonterminal(); return singletonInstance; }

        public String getDescription() { return "<FunctionPar>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 425; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitFunctionPar(node); }
    }
    public static final Nonterminal.FunctionParNonterminal FUNCTIONPAR = FunctionParNonterminal.getInstance();

    public static class EndIfStmt59ReductionNonterminal extends Nonterminal
    {
        private EndIfStmt59ReductionNonterminal() {;} // Singleton
        private static EndIfStmt59ReductionNonterminal singletonInstance = null;
        public static final EndIfStmt59ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndIfStmt59ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndIfStmt@59>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 426; }
    }
    public static final Nonterminal.EndIfStmt59ReductionNonterminal ENDIFSTMT59 = EndIfStmt59ReductionNonterminal.getInstance();

    public static class InterfaceBodyNonterminal extends Nonterminal
    {
        private InterfaceBodyNonterminal() {;} // Singleton
        private static InterfaceBodyNonterminal singletonInstance = null;
        public static final InterfaceBodyNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new InterfaceBodyNonterminal(); return singletonInstance; }

        public String getDescription() { return "<InterfaceBody>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 427; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitInterfaceBody(node); }
    }
    public static final Nonterminal.InterfaceBodyNonterminal INTERFACEBODY = InterfaceBodyNonterminal.getInstance();

    public static class SubroutineNameNonterminal extends Nonterminal
    {
        private SubroutineNameNonterminal() {;} // Singleton
        private static SubroutineNameNonterminal singletonInstance = null;
        public static final SubroutineNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SubroutineNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SubroutineName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 428; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSubroutineName(node); }
    }
    public static final Nonterminal.SubroutineNameNonterminal SUBROUTINENAME = SubroutineNameNonterminal.getInstance();

    public static class EndWhereStmt56ReductionNonterminal extends Nonterminal
    {
        private EndWhereStmt56ReductionNonterminal() {;} // Singleton
        private static EndWhereStmt56ReductionNonterminal singletonInstance = null;
        public static final EndWhereStmt56ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndWhereStmt56ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndWhereStmt@56>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 429; }
    }
    public static final Nonterminal.EndWhereStmt56ReductionNonterminal ENDWHERESTMT56 = EndWhereStmt56ReductionNonterminal.getInstance();

    public static class ForallBodyNonterminal extends Nonterminal
    {
        private ForallBodyNonterminal() {;} // Singleton
        private static ForallBodyNonterminal singletonInstance = null;
        public static final ForallBodyNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ForallBodyNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ForallBody>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 430; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitForallBody(node); }
    }
    public static final Nonterminal.ForallBodyNonterminal FORALLBODY = ForallBodyNonterminal.getInstance();

    public static class ArrayAllocationNonterminal extends Nonterminal
    {
        private ArrayAllocationNonterminal() {;} // Singleton
        private static ArrayAllocationNonterminal singletonInstance = null;
        public static final ArrayAllocationNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ArrayAllocationNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ArrayAllocation>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 431; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitArrayAllocation(node); }
    }
    public static final Nonterminal.ArrayAllocationNonterminal ARRAYALLOCATION = ArrayAllocationNonterminal.getInstance();

    public static class AssumedShapeSpecNonterminal extends Nonterminal
    {
        private AssumedShapeSpecNonterminal() {;} // Singleton
        private static AssumedShapeSpecNonterminal singletonInstance = null;
        public static final AssumedShapeSpecNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AssumedShapeSpecNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AssumedShapeSpec>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 432; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAssumedShapeSpec(node); }
    }
    public static final Nonterminal.AssumedShapeSpecNonterminal ASSUMEDSHAPESPEC = AssumedShapeSpecNonterminal.getInstance();

    public static class ExprListNonterminal extends Nonterminal
    {
        private ExprListNonterminal() {;} // Singleton
        private static ExprListNonterminal singletonInstance = null;
        public static final ExprListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ExprListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ExprList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 433; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitExprList(node); }
    }
    public static final Nonterminal.ExprListNonterminal EXPRLIST = ExprListNonterminal.getInstance();

    public static class AccessIdListNonterminal extends Nonterminal
    {
        private AccessIdListNonterminal() {;} // Singleton
        private static AccessIdListNonterminal singletonInstance = null;
        public static final AccessIdListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AccessIdListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AccessIdList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 434; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAccessIdList(node); }
    }
    public static final Nonterminal.AccessIdListNonterminal ACCESSIDLIST = AccessIdListNonterminal.getInstance();

    public static class SubscriptNonterminal extends Nonterminal
    {
        private SubscriptNonterminal() {;} // Singleton
        private static SubscriptNonterminal singletonInstance = null;
        public static final SubscriptNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SubscriptNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Subscript>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 435; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSubscript(node); }
    }
    public static final Nonterminal.SubscriptNonterminal SUBSCRIPT = SubscriptNonterminal.getInstance();

    public static class BlockDataNameNonterminal extends Nonterminal
    {
        private BlockDataNameNonterminal() {;} // Singleton
        private static BlockDataNameNonterminal singletonInstance = null;
        public static final BlockDataNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new BlockDataNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<BlockDataName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 436; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitBlockDataName(node); }
    }
    public static final Nonterminal.BlockDataNameNonterminal BLOCKDATANAME = BlockDataNameNonterminal.getInstance();

    public static class EquivalenceObjectListNonterminal extends Nonterminal
    {
        private EquivalenceObjectListNonterminal() {;} // Singleton
        private static EquivalenceObjectListNonterminal singletonInstance = null;
        public static final EquivalenceObjectListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EquivalenceObjectListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EquivalenceObjectList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 437; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEquivalenceObjectList(node); }
    }
    public static final Nonterminal.EquivalenceObjectListNonterminal EQUIVALENCEOBJECTLIST = EquivalenceObjectListNonterminal.getInstance();

    public static class SubroutineRangeNonterminal extends Nonterminal
    {
        private SubroutineRangeNonterminal() {;} // Singleton
        private static SubroutineRangeNonterminal singletonInstance = null;
        public static final SubroutineRangeNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SubroutineRangeNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SubroutineRange>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 438; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSubroutineRange(node); }
    }
    public static final Nonterminal.SubroutineRangeNonterminal SUBROUTINERANGE = SubroutineRangeNonterminal.getInstance();

    public static class InquireSpecNonterminal extends Nonterminal
    {
        private InquireSpecNonterminal() {;} // Singleton
        private static InquireSpecNonterminal singletonInstance = null;
        public static final InquireSpecNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new InquireSpecNonterminal(); return singletonInstance; }

        public String getDescription() { return "<InquireSpec>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 439; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitInquireSpec(node); }
    }
    public static final Nonterminal.InquireSpecNonterminal INQUIRESPEC = InquireSpecNonterminal.getInstance();

    public static class AllocatableStmt12ReductionNonterminal extends Nonterminal
    {
        private AllocatableStmt12ReductionNonterminal() {;} // Singleton
        private static AllocatableStmt12ReductionNonterminal singletonInstance = null;
        public static final AllocatableStmt12ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AllocatableStmt12ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AllocatableStmt@12>"; }

        int getNumberOfSymbolsOnValueStack() { return 2; }

        int getGoToRow() { return 440; }
    }
    public static final Nonterminal.AllocatableStmt12ReductionNonterminal ALLOCATABLESTMT12 = AllocatableStmt12ReductionNonterminal.getInstance();

    public static class StopStmtNonterminal extends Nonterminal
    {
        private StopStmtNonterminal() {;} // Singleton
        private static StopStmtNonterminal singletonInstance = null;
        public static final StopStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new StopStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<StopStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 441; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitStopStmt(node); }
    }
    public static final Nonterminal.StopStmtNonterminal STOPSTMT = StopStmtNonterminal.getInstance();

    public static class LblRefNonterminal extends Nonterminal
    {
        private LblRefNonterminal() {;} // Singleton
        private static LblRefNonterminal singletonInstance = null;
        public static final LblRefNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new LblRefNonterminal(); return singletonInstance; }

        public String getDescription() { return "<LblRef>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 442; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitLblRef(node); }
    }
    public static final Nonterminal.LblRefNonterminal LBLREF = LblRefNonterminal.getInstance();

    public static class ExplicitShapeSpecListNonterminal extends Nonterminal
    {
        private ExplicitShapeSpecListNonterminal() {;} // Singleton
        private static ExplicitShapeSpecListNonterminal singletonInstance = null;
        public static final ExplicitShapeSpecListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ExplicitShapeSpecListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ExplicitShapeSpecList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 443; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitExplicitShapeSpecList(node); }
    }
    public static final Nonterminal.ExplicitShapeSpecListNonterminal EXPLICITSHAPESPECLIST = ExplicitShapeSpecListNonterminal.getInstance();

    public static class NamelistGroupNameNonterminal extends Nonterminal
    {
        private NamelistGroupNameNonterminal() {;} // Singleton
        private static NamelistGroupNameNonterminal singletonInstance = null;
        public static final NamelistGroupNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new NamelistGroupNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<NamelistGroupName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 444; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitNamelistGroupName(node); }
    }
    public static final Nonterminal.NamelistGroupNameNonterminal NAMELISTGROUPNAME = NamelistGroupNameNonterminal.getInstance();

    public static class DataStmtObjectNonterminal extends Nonterminal
    {
        private DataStmtObjectNonterminal() {;} // Singleton
        private static DataStmtObjectNonterminal singletonInstance = null;
        public static final DataStmtObjectNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DataStmtObjectNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DataStmtObject>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 445; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDataStmtObject(node); }
    }
    public static final Nonterminal.DataStmtObjectNonterminal DATASTMTOBJECT = DataStmtObjectNonterminal.getInstance();

    public static class TargetNonterminal extends Nonterminal
    {
        private TargetNonterminal() {;} // Singleton
        private static TargetNonterminal singletonInstance = null;
        public static final TargetNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new TargetNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Target>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 446; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitTarget(node); }
    }
    public static final Nonterminal.TargetNonterminal TARGET = TargetNonterminal.getInstance();

    public static class ExternalNameListNonterminal extends Nonterminal
    {
        private ExternalNameListNonterminal() {;} // Singleton
        private static ExternalNameListNonterminal singletonInstance = null;
        public static final ExternalNameListNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ExternalNameListNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ExternalNameList>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 447; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitExternalNameList(node); }
    }
    public static final Nonterminal.ExternalNameListNonterminal EXTERNALNAMELIST = ExternalNameListNonterminal.getInstance();

    public static class SubroutinePrefixNonterminal extends Nonterminal
    {
        private SubroutinePrefixNonterminal() {;} // Singleton
        private static SubroutinePrefixNonterminal singletonInstance = null;
        public static final SubroutinePrefixNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SubroutinePrefixNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SubroutinePrefix>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 448; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSubroutinePrefix(node); }
    }
    public static final Nonterminal.SubroutinePrefixNonterminal SUBROUTINEPREFIX = SubroutinePrefixNonterminal.getInstance();

    public static class EndWhereStmt55ReductionNonterminal extends Nonterminal
    {
        private EndWhereStmt55ReductionNonterminal() {;} // Singleton
        private static EndWhereStmt55ReductionNonterminal singletonInstance = null;
        public static final EndWhereStmt55ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndWhereStmt55ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndWhereStmt@55>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 449; }
    }
    public static final Nonterminal.EndWhereStmt55ReductionNonterminal ENDWHERESTMT55 = EndWhereStmt55ReductionNonterminal.getInstance();

    public static class SubroutineParNonterminal extends Nonterminal
    {
        private SubroutineParNonterminal() {;} // Singleton
        private static SubroutineParNonterminal singletonInstance = null;
        public static final SubroutineParNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SubroutineParNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SubroutinePar>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 450; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSubroutinePar(node); }
    }
    public static final Nonterminal.SubroutineParNonterminal SUBROUTINEPAR = SubroutineParNonterminal.getInstance();

    public static class DefinedBinaryOpNonterminal extends Nonterminal
    {
        private DefinedBinaryOpNonterminal() {;} // Singleton
        private static DefinedBinaryOpNonterminal singletonInstance = null;
        public static final DefinedBinaryOpNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DefinedBinaryOpNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DefinedBinaryOp>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 451; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitDefinedBinaryOp(node); }
    }
    public static final Nonterminal.DefinedBinaryOpNonterminal DEFINEDBINARYOP = DefinedBinaryOpNonterminal.getInstance();

    public static class IntrinsicProcedureNameNonterminal extends Nonterminal
    {
        private IntrinsicProcedureNameNonterminal() {;} // Singleton
        private static IntrinsicProcedureNameNonterminal singletonInstance = null;
        public static final IntrinsicProcedureNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new IntrinsicProcedureNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<IntrinsicProcedureName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 452; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitIntrinsicProcedureName(node); }
    }
    public static final Nonterminal.IntrinsicProcedureNameNonterminal INTRINSICPROCEDURENAME = IntrinsicProcedureNameNonterminal.getInstance();

    public static class EndProgramStmtNonterminal extends Nonterminal
    {
        private EndProgramStmtNonterminal() {;} // Singleton
        private static EndProgramStmtNonterminal singletonInstance = null;
        public static final EndProgramStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndProgramStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndProgramStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 453; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEndProgramStmt(node); }
    }
    public static final Nonterminal.EndProgramStmtNonterminal ENDPROGRAMSTMT = EndProgramStmtNonterminal.getInstance();

    public static class LabelDoStmtNonterminal extends Nonterminal
    {
        private LabelDoStmtNonterminal() {;} // Singleton
        private static LabelDoStmtNonterminal singletonInstance = null;
        public static final LabelDoStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new LabelDoStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<LabelDoStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 454; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitLabelDoStmt(node); }
    }
    public static final Nonterminal.LabelDoStmtNonterminal LABELDOSTMT = LabelDoStmtNonterminal.getInstance();

    public static class InquireStmtNonterminal extends Nonterminal
    {
        private InquireStmtNonterminal() {;} // Singleton
        private static InquireStmtNonterminal singletonInstance = null;
        public static final InquireStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new InquireStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<InquireStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 455; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitInquireStmt(node); }
    }
    public static final Nonterminal.InquireStmtNonterminal INQUIRESTMT = InquireStmtNonterminal.getInstance();

    public static class DataRef17ReductionNonterminal extends Nonterminal
    {
        private DataRef17ReductionNonterminal() {;} // Singleton
        private static DataRef17ReductionNonterminal singletonInstance = null;
        public static final DataRef17ReductionNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new DataRef17ReductionNonterminal(); return singletonInstance; }

        public String getDescription() { return "<DataRef@17>"; }

        int getNumberOfSymbolsOnValueStack() { return 3; }

        int getGoToRow() { return 456; }
    }
    public static final Nonterminal.DataRef17ReductionNonterminal DATAREF17 = DataRef17ReductionNonterminal.getInstance();

    public static class OutputImpliedDoNonterminal extends Nonterminal
    {
        private OutputImpliedDoNonterminal() {;} // Singleton
        private static OutputImpliedDoNonterminal singletonInstance = null;
        public static final OutputImpliedDoNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new OutputImpliedDoNonterminal(); return singletonInstance; }

        public String getDescription() { return "<OutputImpliedDo>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 457; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitOutputImpliedDo(node); }
    }
    public static final Nonterminal.OutputImpliedDoNonterminal OUTPUTIMPLIEDDO = OutputImpliedDoNonterminal.getInstance();

    public static class LabelNonterminal extends Nonterminal
    {
        private LabelNonterminal() {;} // Singleton
        private static LabelNonterminal singletonInstance = null;
        public static final LabelNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new LabelNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Label>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 458; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitLabel(node); }
    }
    public static final Nonterminal.LabelNonterminal LABEL = LabelNonterminal.getInstance();

    public static class EndTypeStmtNonterminal extends Nonterminal
    {
        private EndTypeStmtNonterminal() {;} // Singleton
        private static EndTypeStmtNonterminal singletonInstance = null;
        public static final EndTypeStmtNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new EndTypeStmtNonterminal(); return singletonInstance; }

        public String getDescription() { return "<EndTypeStmt>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 459; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitEndTypeStmt(node); }
    }
    public static final Nonterminal.EndTypeStmtNonterminal ENDTYPESTMT = EndTypeStmtNonterminal.getInstance();

    public static class SFVarNameNonterminal extends Nonterminal
    {
        private SFVarNameNonterminal() {;} // Singleton
        private static SFVarNameNonterminal singletonInstance = null;
        public static final SFVarNameNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new SFVarNameNonterminal(); return singletonInstance; }

        public String getDescription() { return "<SFVarName>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 460; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitSFVarName(node); }
    }
    public static final Nonterminal.SFVarNameNonterminal SFVARNAME = SFVarNameNonterminal.getInstance();

    public static class ProgramUnitNonterminal extends Nonterminal
    {
        private ProgramUnitNonterminal() {;} // Singleton
        private static ProgramUnitNonterminal singletonInstance = null;
        public static final ProgramUnitNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ProgramUnitNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ProgramUnit>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 461; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitProgramUnit(node); }
    }
    public static final Nonterminal.ProgramUnitNonterminal PROGRAMUNIT = ProgramUnitNonterminal.getInstance();

    public static class ElseIfConstructNonterminal extends Nonterminal
    {
        private ElseIfConstructNonterminal() {;} // Singleton
        private static ElseIfConstructNonterminal singletonInstance = null;
        public static final ElseIfConstructNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new ElseIfConstructNonterminal(); return singletonInstance; }

        public String getDescription() { return "<ElseIfConstruct>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 462; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitElseIfConstruct(node); }
    }
    public static final Nonterminal.ElseIfConstructNonterminal ELSEIFCONSTRUCT = ElseIfConstructNonterminal.getInstance();

    public static class AddOperandNonterminal extends Nonterminal
    {
        private AddOperandNonterminal() {;} // Singleton
        private static AddOperandNonterminal singletonInstance = null;
        public static final AddOperandNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new AddOperandNonterminal(); return singletonInstance; }

        public String getDescription() { return "<AddOperand>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 463; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitAddOperand(node); }
    }
    public static final Nonterminal.AddOperandNonterminal ADDOPERAND = AddOperandNonterminal.getInstance();

    public static class OnlyNonterminal extends Nonterminal
    {
        private OnlyNonterminal() {;} // Singleton
        private static OnlyNonterminal singletonInstance = null;
        public static final OnlyNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new OnlyNonterminal(); return singletonInstance; }

        public String getDescription() { return "<Only>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 464; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitOnly(node); }
    }
    public static final Nonterminal.OnlyNonterminal ONLY = OnlyNonterminal.getInstance();

    public static class CharLengthNonterminal extends Nonterminal
    {
        private CharLengthNonterminal() {;} // Singleton
        private static CharLengthNonterminal singletonInstance = null;
        public static final CharLengthNonterminal getInstance() { if (singletonInstance == null) singletonInstance = new CharLengthNonterminal(); return singletonInstance; }

        public String getDescription() { return "<CharLength>"; }

        int getNumberOfSymbolsOnValueStack() { return 1; }

        int getGoToRow() { return 465; }

        public void visitParseTreeNodeUsing(ParseTreeNode node, ParseTreeVisitor visitor) { visitor.visitCharLength(node); }
    }
    public static final Nonterminal.CharLengthNonterminal CHARLENGTH = CharLengthNonterminal.getInstance();

    public String toString()
    {
        return getDescription();
    }
}
