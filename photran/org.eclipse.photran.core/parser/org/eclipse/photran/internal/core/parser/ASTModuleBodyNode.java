// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser;


/**
 * <ModuleBody> ::= SpecificationPartConstruct:<SpecificationPartConstruct> 
 * <ModuleBody> ::= ModuleSubprogramPartConstruct:<ModuleSubprogramPartConstruct> 
 * <ModuleBody> ::= @:<ModuleBody> SpecificationPartConstruct:<SpecificationPartConstruct> 
 * <ModuleBody> ::= @:<ModuleBody> ModuleSubprogramPartConstruct:<ModuleSubprogramPartConstruct> 
 */
public class ASTModuleBodyNode extends ParseTreeNode
{
    public ASTModuleBodyNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public int count()
    {
        ParseTreeNode node = this;
        int count = 1;
        while (node.getChild("@") != null)
        {
            count++;
            node = node.getChild("@");
        }
        return count;
    }

    public ASTSpecificationPartConstructNode getASTSpecificationPartConstruct(int index)
    {
        ASTModuleBodyNode node = this;
        for (int i = 0; i < index; i++)
            node = (ASTModuleBodyNode)node.getChild("@");
        return (ASTSpecificationPartConstructNode)node.getChild("SpecificationPartConstruct");
    }

    public ASTModuleSubprogramPartConstructNode getASTModuleSubprogramPartConstruct(int index)
    {
        ASTModuleBodyNode node = this;
        for (int i = 0; i < index; i++)
            node = (ASTModuleBodyNode)node.getChild("@");
        return (ASTModuleSubprogramPartConstructNode)node.getChild("ModuleSubprogramPartConstruct");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTModuleBodyNode(this); }
}
