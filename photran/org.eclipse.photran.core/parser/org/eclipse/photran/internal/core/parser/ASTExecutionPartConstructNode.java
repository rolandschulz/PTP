// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser; import org.eclipse.photran.internal.core.lexer.*;


/**
 * <ExecutionPartConstruct> ::= ObsoleteExecutionPartConstruct:<ObsoleteExecutionPartConstruct>  :production47
 * <ExecutionPartConstruct> ::= ExecutableConstruct:<ExecutableConstruct>  :production48
 * <ExecutionPartConstruct> ::= FormatStmt:<FormatStmt>  :production49
 * <ExecutionPartConstruct> ::= EntryStmt:<EntryStmt>  :production50
 */
public class ASTExecutionPartConstructNode extends ParseTreeNode
{
    public ASTExecutionPartConstructNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public ASTObsoleteExecutionPartConstructNode getASTObsoleteExecutionPartConstruct()
    {
        return (ASTObsoleteExecutionPartConstructNode)this.getChild("ObsoleteExecutionPartConstruct");
    }

    public ASTExecutableConstructNode getASTExecutableConstruct()
    {
        return (ASTExecutableConstructNode)this.getChild("ExecutableConstruct");
    }

    public ASTFormatStmtNode getASTFormatStmt()
    {
        return (ASTFormatStmtNode)this.getChild("FormatStmt");
    }

    public ASTEntryStmtNode getASTEntryStmt()
    {
        return (ASTEntryStmtNode)this.getChild("EntryStmt");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTExecutionPartConstructNode(this); }
}
