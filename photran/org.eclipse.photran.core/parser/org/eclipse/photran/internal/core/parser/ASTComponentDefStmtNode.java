// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser;

import org.eclipse.photran.internal.core.lexer.Token;


/**
 * <ComponentDefStmt> ::= LblDef:<LblDef> TypeSpec:<TypeSpec> tcomma:T_COMMA ComponentAttrSpecList:<ComponentAttrSpecList> tcolon:T_COLON tcolon2:T_COLON ComponentDeclList:<ComponentDeclList> teos:T_EOS 
 * <ComponentDefStmt> ::= LblDef:<LblDef> TypeSpec:<TypeSpec> tcolon:T_COLON tcolon2:T_COLON ComponentDeclList:<ComponentDeclList> teos:T_EOS 
 * <ComponentDefStmt> ::= LblDef:<LblDef> TypeSpec:<TypeSpec> ComponentDeclList:<ComponentDeclList> teos:T_EOS 
 */
public class ASTComponentDefStmtNode extends ParseTreeNode
{
    public ASTComponentDefStmtNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public ASTLblDefNode getASTLblDef()
    {
        return (ASTLblDefNode)this.getChild("LblDef");
    }

    public ASTTypeSpecNode getASTTypeSpec()
    {
        return (ASTTypeSpecNode)this.getChild("TypeSpec");
    }

    public Token getASTTcomma()
    {
        return this.getChildToken("tcomma");
    }

    public ASTComponentAttrSpecListNode getASTComponentAttrSpecList()
    {
        return (ASTComponentAttrSpecListNode)this.getChild("ComponentAttrSpecList");
    }

    public Token getASTTcolon()
    {
        return this.getChildToken("tcolon");
    }

    public Token getASTTcolon2()
    {
        return this.getChildToken("tcolon2");
    }

    public ASTComponentDeclListNode getASTComponentDeclList()
    {
        return (ASTComponentDeclListNode)this.getChild("ComponentDeclList");
    }

    public Token getASTTeos()
    {
        return this.getChildToken("teos");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTComponentDefStmtNode(this); }
}
