// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser;

import org.eclipse.photran.internal.core.lexer.Token;


/**
 * <ComponentDecl> ::= ComponentName:<ComponentName> tlparen:T_LPAREN ComponentArraySpec:<ComponentArraySpec> trparen:T_RPAREN tasterisk:T_ASTERISK CharLength:<CharLength> ComponentInitialization:<ComponentInitialization> 
 * <ComponentDecl> ::= ComponentName:<ComponentName> tlparen:T_LPAREN ComponentArraySpec:<ComponentArraySpec> trparen:T_RPAREN ComponentInitialization:<ComponentInitialization> 
 * <ComponentDecl> ::= ComponentName:<ComponentName> tasterisk:T_ASTERISK CharLength:<CharLength> ComponentInitialization:<ComponentInitialization> 
 * <ComponentDecl> ::= ComponentName:<ComponentName> ComponentInitialization:<ComponentInitialization> 
 * <ComponentDecl> ::= ComponentName:<ComponentName> tlparen:T_LPAREN ComponentArraySpec:<ComponentArraySpec> trparen:T_RPAREN tasterisk:T_ASTERISK CharLength:<CharLength> 
 * <ComponentDecl> ::= ComponentName:<ComponentName> tlparen:T_LPAREN ComponentArraySpec:<ComponentArraySpec> trparen:T_RPAREN 
 * <ComponentDecl> ::= ComponentName:<ComponentName> tasterisk:T_ASTERISK CharLength:<CharLength> 
 * <ComponentDecl> ::= ComponentName:<ComponentName> 
 */
public class ASTComponentDeclNode extends ParseTreeNode
{
    public ASTComponentDeclNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public ASTComponentNameNode getASTComponentName()
    {
        return (ASTComponentNameNode)this.getChild("ComponentName");
    }

    public Token getASTTlparen()
    {
        return this.getChildToken("tlparen");
    }

    public ASTComponentArraySpecNode getASTComponentArraySpec()
    {
        return (ASTComponentArraySpecNode)this.getChild("ComponentArraySpec");
    }

    public Token getASTTrparen()
    {
        return this.getChildToken("trparen");
    }

    public Token getASTTasterisk()
    {
        return this.getChildToken("tasterisk");
    }

    public ASTCharLengthNode getASTCharLength()
    {
        return (ASTCharLengthNode)this.getChild("CharLength");
    }

    public ASTComponentInitializationNode getASTComponentInitialization()
    {
        return (ASTComponentInitializationNode)this.getChild("ComponentInitialization");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTComponentDeclNode(this); }
}
