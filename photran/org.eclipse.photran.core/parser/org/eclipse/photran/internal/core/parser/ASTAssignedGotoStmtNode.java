// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser;

import org.eclipse.photran.internal.core.lexer.Token;


/**
 * <AssignedGotoStmt> ::= LblDef:<LblDef> GoToKw:<GoToKw> VariableName:<VariableName> teos:T_EOS 
 * <AssignedGotoStmt> ::= LblDef:<LblDef> GoToKw:<GoToKw> VariableName:<VariableName> tlparen:T_LPAREN LblRefList:<LblRefList> trparen:T_RPAREN teos:T_EOS 
 * <AssignedGotoStmt> ::= LblDef:<LblDef> GoToKw:<GoToKw> VariableComma:<VariableComma> tlparen:T_LPAREN LblRefList:<LblRefList> trparen:T_RPAREN teos:T_EOS 
 */
public class ASTAssignedGotoStmtNode extends ParseTreeNode
{
    public ASTAssignedGotoStmtNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public ASTLblDefNode getASTLblDef()
    {
        return (ASTLblDefNode)this.getChild("LblDef");
    }

    public ASTGoToKwNode getASTGoToKw()
    {
        return (ASTGoToKwNode)this.getChild("GoToKw");
    }

    public ASTVariableNameNode getASTVariableName()
    {
        return (ASTVariableNameNode)this.getChild("VariableName");
    }

    public Token getASTTeos()
    {
        return this.getChildToken("teos");
    }

    public Token getASTTlparen()
    {
        return this.getChildToken("tlparen");
    }

    public ASTLblRefListNode getASTLblRefList()
    {
        return (ASTLblRefListNode)this.getChild("LblRefList");
    }

    public Token getASTTrparen()
    {
        return this.getChildToken("trparen");
    }

    public ASTVariableCommaNode getASTVariableComma()
    {
        return (ASTVariableCommaNode)this.getChild("VariableComma");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTAssignedGotoStmtNode(this); }
}
