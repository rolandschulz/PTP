// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser;

import org.eclipse.photran.internal.core.lexer.Token;


/**
 * <MaskedElsewhereStmt> ::= LblDef:<LblDef> telsewhere:T_ELSEWHERE tlparen:T_LPAREN MaskExpr:<MaskExpr> trparen:T_RPAREN ( EndName:<EndName> )? teos:T_EOS 
 */
public class ASTMaskedElsewhereStmtNode extends ParseTreeNode
{
    public ASTMaskedElsewhereStmtNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public ASTLblDefNode getASTLblDef()
    {
        return (ASTLblDefNode)this.getChild("LblDef");
    }

    public Token getASTTelsewhere()
    {
        return this.getChildToken("telsewhere");
    }

    public Token getASTTlparen()
    {
        return this.getChildToken("tlparen");
    }

    public ASTMaskExprNode getASTMaskExpr()
    {
        return (ASTMaskExprNode)this.getChild("MaskExpr");
    }

    public Token getASTTrparen()
    {
        return this.getChildToken("trparen");
    }

    public ASTEndNameNode getASTEndName()
    {
        return (ASTEndNameNode)this.getChild("EndName");
    }

    public Token getASTTeos()
    {
        return this.getChildToken("teos");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTMaskedElsewhereStmtNode(this); }
}
