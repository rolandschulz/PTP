// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser; import org.eclipse.photran.internal.core.lexer.*;


/**
 * <CallStmt> ::= LblDef:<LblDef> tcall:T_CALL SubroutineNameUse:<SubroutineNameUse> teos:T_EOS  :production876
 * <CallStmt> ::= LblDef:<LblDef> tcall:T_CALL SubroutineNameUse:<SubroutineNameUse> tlparen:T_LPAREN SubroutineArgList:<SubroutineArgList> trparen:T_RPAREN teos:T_EOS  :production877
 */
public class ASTCallStmtNode extends ParseTreeNode
{
    public ASTCallStmtNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public ASTLblDefNode getASTLblDef()
    {
        return (ASTLblDefNode)this.getChild("LblDef");
    }

    public Token getASTTcall()
    {
        return this.getChildToken("tcall");
    }

    public ASTSubroutineNameUseNode getASTSubroutineNameUse()
    {
        return (ASTSubroutineNameUseNode)this.getChild("SubroutineNameUse");
    }

    public Token getASTTeos()
    {
        return this.getChildToken("teos");
    }

    public Token getASTTlparen()
    {
        return this.getChildToken("tlparen");
    }

    public ASTSubroutineArgListNode getASTSubroutineArgList()
    {
        return (ASTSubroutineArgListNode)this.getChild("SubroutineArgList");
    }

    public Token getASTTrparen()
    {
        return this.getChildToken("trparen");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTCallStmtNode(this); }
}
