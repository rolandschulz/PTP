// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser; import org.eclipse.photran.internal.core.lexer.*;


/**
 * <WhereConstructStmt> ::= LblDef:<LblDef> Name:<Name> tcolon:T_COLON twhere:T_WHERE tlparen:T_LPAREN MaskExpr:<MaskExpr> trparen:T_RPAREN teos:T_EOS  :production553
 * <WhereConstructStmt> ::= LblDef:<LblDef> twhere:T_WHERE tlparen:T_LPAREN MaskExpr:<MaskExpr> trparen:T_RPAREN teos:T_EOS  :production554
 */
public class ASTWhereConstructStmtNode extends ParseTreeNode
{
    public ASTWhereConstructStmtNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public ASTLblDefNode getASTLblDef()
    {
        return (ASTLblDefNode)this.getChild("LblDef");
    }

    public ASTNameNode getASTName()
    {
        return (ASTNameNode)this.getChild("Name");
    }

    public Token getASTTcolon()
    {
        return this.getChildToken("tcolon");
    }

    public Token getASTTwhere()
    {
        return this.getChildToken("twhere");
    }

    public Token getASTTlparen()
    {
        return this.getChildToken("tlparen");
    }

    public ASTMaskExprNode getASTMaskExpr()
    {
        return (ASTMaskExprNode)this.getChild("MaskExpr");
    }

    public Token getASTTrparen()
    {
        return this.getChildToken("trparen");
    }

    public Token getASTTeos()
    {
        return this.getChildToken("teos");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTWhereConstructStmtNode(this); }
}
