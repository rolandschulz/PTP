// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser;

import org.eclipse.photran.internal.core.lexer.Token;


/**
 * <TypeDeclarationStmt> ::= LblDef:<LblDef> TypeSpec:<TypeSpec> AttrSpecSeq:<AttrSpecSeq> tcolon:T_COLON tcolon2:T_COLON EntityDeclList:<EntityDeclList> teos:T_EOS 
 * <TypeDeclarationStmt> ::= LblDef:<LblDef> TypeSpec:<TypeSpec> tcolon:T_COLON tcolon2:T_COLON EntityDeclList:<EntityDeclList> teos:T_EOS 
 * <TypeDeclarationStmt> ::= LblDef:<LblDef> TypeSpec:<TypeSpec> EntityDeclList:<EntityDeclList> teos:T_EOS 
 */
public class ASTTypeDeclarationStmtNode extends ParseTreeNode
{
    public ASTTypeDeclarationStmtNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public ASTLblDefNode getASTLblDef()
    {
        return (ASTLblDefNode)this.getChild("LblDef");
    }

    public ASTTypeSpecNode getASTTypeSpec()
    {
        return (ASTTypeSpecNode)this.getChild("TypeSpec");
    }

    public ASTAttrSpecSeqNode getASTAttrSpecSeq()
    {
        return (ASTAttrSpecSeqNode)this.getChild("AttrSpecSeq");
    }

    public Token getASTTcolon()
    {
        return this.getChildToken("tcolon");
    }

    public Token getASTTcolon2()
    {
        return this.getChildToken("tcolon2");
    }

    public ASTEntityDeclListNode getASTEntityDeclList()
    {
        return (ASTEntityDeclListNode)this.getChild("EntityDeclList");
    }

    public Token getASTTeos()
    {
        return this.getChildToken("teos");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTTypeDeclarationStmtNode(this); }
}
