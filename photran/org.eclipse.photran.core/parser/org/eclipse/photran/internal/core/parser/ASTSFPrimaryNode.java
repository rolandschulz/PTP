// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser;

import org.eclipse.photran.internal.core.lexer.Token;


/**
 * <SFPrimary> ::= ArrayConstructor:<ArrayConstructor> 
 * <SFPrimary> ::= ticon:T_ICON 
 * <SFPrimary> ::= SFVarName:<SFVarName> 
 * <SFPrimary> ::= SFDataRef:<SFDataRef> 
 * <SFPrimary> ::= FunctionReference:<FunctionReference> 
 * <SFPrimary> ::= tlparen:T_LPAREN Expr:<Expr> trparen:T_RPAREN 
 */
public class ASTSFPrimaryNode extends ParseTreeNode
{
    public ASTSFPrimaryNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public ASTArrayConstructorNode getASTArrayConstructor()
    {
        return (ASTArrayConstructorNode)this.getChild("ArrayConstructor");
    }

    public Token getASTTicon()
    {
        return this.getChildToken("ticon");
    }

    public ASTSFVarNameNode getASTSFVarName()
    {
        return (ASTSFVarNameNode)this.getChild("SFVarName");
    }

    public ASTSFDataRefNode getASTSFDataRef()
    {
        return (ASTSFDataRefNode)this.getChild("SFDataRef");
    }

    public ASTFunctionReferenceNode getASTFunctionReference()
    {
        return (ASTFunctionReferenceNode)this.getChild("FunctionReference");
    }

    public Token getASTTlparen()
    {
        return this.getChildToken("tlparen");
    }

    public ASTExprNode getASTExpr()
    {
        return (ASTExprNode)this.getChild("Expr");
    }

    public Token getASTTrparen()
    {
        return this.getChildToken("trparen");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTSFPrimaryNode(this); }
}
