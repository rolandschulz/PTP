// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser;

import org.eclipse.photran.internal.core.lexer.Token;


/**
 * <CharSelector> ::= LengthSelector:<LengthSelector> 
 * <CharSelector> ::= tlparen:T_LPAREN tleneq:T_LENEQ CharLenParamValue:<CharLenParamValue> tcomma:T_COMMA tkindeq:T_KINDEQ Expr:<Expr> trparen:T_RPAREN 
 * <CharSelector> ::= tlparen:T_LPAREN tleneq:T_LENEQ CharLenParamValue:<CharLenParamValue> tcomma:T_COMMA Expr:<Expr> trparen:T_RPAREN 
 * <CharSelector> ::= tlparen:T_LPAREN tkindeq:T_KINDEQ Expr:<Expr> trparen:T_RPAREN 
 * <CharSelector> ::= tlparen:T_LPAREN tleneq:T_LENEQ CharLenParamValue:<CharLenParamValue> trparen:T_RPAREN 
 * <CharSelector> ::= tlparen:T_LPAREN CharLenParamValue:<CharLenParamValue> trparen:T_RPAREN 
 */
public class ASTCharSelectorNode extends ParseTreeNode
{
    public ASTCharSelectorNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public ASTLengthSelectorNode getASTLengthSelector()
    {
        return (ASTLengthSelectorNode)this.getChild("LengthSelector");
    }

    public Token getASTTlparen()
    {
        return this.getChildToken("tlparen");
    }

    public Token getASTTleneq()
    {
        return this.getChildToken("tleneq");
    }

    public ASTCharLenParamValueNode getASTCharLenParamValue()
    {
        return (ASTCharLenParamValueNode)this.getChild("CharLenParamValue");
    }

    public Token getASTTcomma()
    {
        return this.getChildToken("tcomma");
    }

    public Token getASTTkindeq()
    {
        return this.getChildToken("tkindeq");
    }

    public ASTExprNode getASTExpr()
    {
        return (ASTExprNode)this.getChild("Expr");
    }

    public Token getASTTrparen()
    {
        return this.getChildToken("trparen");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTCharSelectorNode(this); }
}
