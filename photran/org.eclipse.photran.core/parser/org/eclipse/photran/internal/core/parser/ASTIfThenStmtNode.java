// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser;

import org.eclipse.photran.internal.core.lexer.Token;


/**
 * <IfThenStmt> ::= LblDef:<LblDef> tif:T_IF tlparen:T_LPAREN Expr:<Expr> trparen:T_RPAREN tthen:T_THEN teos:T_EOS 
 * <IfThenStmt> ::= LblDef:<LblDef> Name:<Name> tcolon:T_COLON tif:T_IF tlparen:T_LPAREN Expr:<Expr> trparen:T_RPAREN tthen:T_THEN teos:T_EOS 
 */
public class ASTIfThenStmtNode extends ParseTreeNode
{
    public ASTIfThenStmtNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public ASTLblDefNode getASTLblDef()
    {
        return (ASTLblDefNode)this.getChild("LblDef");
    }

    public Token getASTTif()
    {
        return this.getChildToken("tif");
    }

    public Token getASTTlparen()
    {
        return this.getChildToken("tlparen");
    }

    public ASTExprNode getASTExpr()
    {
        return (ASTExprNode)this.getChild("Expr");
    }

    public Token getASTTrparen()
    {
        return this.getChildToken("trparen");
    }

    public Token getASTTthen()
    {
        return this.getChildToken("tthen");
    }

    public Token getASTTeos()
    {
        return this.getChildToken("teos");
    }

    public ASTNameNode getASTName()
    {
        return (ASTNameNode)this.getChild("Name");
    }

    public Token getASTTcolon()
    {
        return this.getChildToken("tcolon");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTIfThenStmtNode(this); }
}
