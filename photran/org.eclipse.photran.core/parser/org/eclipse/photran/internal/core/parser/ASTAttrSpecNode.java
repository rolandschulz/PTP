// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser; import org.eclipse.photran.internal.core.lexer.*;


/**
 * <AttrSpec> ::= tparameter:T_PARAMETER  :production245
 * <AttrSpec> ::= AccessSpec:<AccessSpec>  :production246
 * <AttrSpec> ::= tallocatable:T_ALLOCATABLE  :production247
 * <AttrSpec> ::= tdimension:T_DIMENSION tlparen:T_LPAREN ArraySpec:<ArraySpec> trparen:T_RPAREN  :production248
 * <AttrSpec> ::= texternal:T_EXTERNAL  :production249
 * <AttrSpec> ::= tintent:T_INTENT tlparen:T_LPAREN IntentSpec:<IntentSpec> trparen:T_RPAREN  :production250
 * <AttrSpec> ::= tintrinsic:T_INTRINSIC  :production251
 * <AttrSpec> ::= toptional:T_OPTIONAL  :production252
 * <AttrSpec> ::= tpointer:T_POINTER  :production253
 * <AttrSpec> ::= tsave:T_SAVE  :production254
 * <AttrSpec> ::= ttarget:T_TARGET  :production255
 */
public class ASTAttrSpecNode extends ParseTreeNode
{
    public ASTAttrSpecNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public Token getASTTparameter()
    {
        return this.getChildToken("tparameter");
    }

    public ASTAccessSpecNode getASTAccessSpec()
    {
        return (ASTAccessSpecNode)this.getChild("AccessSpec");
    }

    public Token getASTTallocatable()
    {
        return this.getChildToken("tallocatable");
    }

    public Token getASTTdimension()
    {
        return this.getChildToken("tdimension");
    }

    public Token getASTTlparen()
    {
        return this.getChildToken("tlparen");
    }

    public ASTArraySpecNode getASTArraySpec()
    {
        return (ASTArraySpecNode)this.getChild("ArraySpec");
    }

    public Token getASTTrparen()
    {
        return this.getChildToken("trparen");
    }

    public Token getASTTexternal()
    {
        return this.getChildToken("texternal");
    }

    public Token getASTTintent()
    {
        return this.getChildToken("tintent");
    }

    public ASTIntentSpecNode getASTIntentSpec()
    {
        return (ASTIntentSpecNode)this.getChild("IntentSpec");
    }

    public Token getASTTintrinsic()
    {
        return this.getChildToken("tintrinsic");
    }

    public Token getASTToptional()
    {
        return this.getChildToken("toptional");
    }

    public Token getASTTpointer()
    {
        return this.getChildToken("tpointer");
    }

    public Token getASTTsave()
    {
        return this.getChildToken("tsave");
    }

    public Token getASTTtarget()
    {
        return this.getChildToken("ttarget");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTAttrSpecNode(this); }
}
