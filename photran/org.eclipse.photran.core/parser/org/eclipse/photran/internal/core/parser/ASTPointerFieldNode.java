// Generated by Ludwig version 1.0 alpha 6

package org.eclipse.photran.internal.core.parser; import org.eclipse.photran.internal.core.lexer.*;


/**
 * <PointerField> ::= Name:<Name> tlparen:T_LPAREN SFExprList:<SFExprList> trparen:T_RPAREN tpercent:T_PERCENT Name2:<Name>  :production448
 * <PointerField> ::= Name:<Name> tlparen:T_LPAREN SFDummyArgNameList:<SFDummyArgNameList> trparen:T_RPAREN tpercent:T_PERCENT Name2:<Name>  :production449
 * <PointerField> ::= Name:<Name> tpercent:T_PERCENT Name2:<Name>  :production450
 * <PointerField> ::= @:<PointerField> FieldSelector:<FieldSelector>  :production451
 */
public class ASTPointerFieldNode extends ParseTreeNode
{
    public ASTPointerFieldNode(Nonterminal nonterminal, Production production)
    {
        super(nonterminal, production);
    }

    public int count()
    {
        ParseTreeNode node = this;
        int count = 1;
        while (node.getChild("@") != null)
        {
            count++;
            node = node.getChild("@");
        }
        return count;
    }

    public ASTNameNode getASTName(int index)
    {
        ASTPointerFieldNode node = this;
        for (int i = 0; i < index; i++)
            node = (ASTPointerFieldNode)node.getChild("@");
        return (ASTNameNode)node.getChild("Name");
    }

    public Token getASTTlparen(int index)
    {
        ASTPointerFieldNode node = this;
        for (int i = 0; i < index; i++)
            node = (ASTPointerFieldNode)node.getChild("@");
        return node.getChildToken("tlparen");
    }

    public ASTSFExprListNode getASTSFExprList(int index)
    {
        ASTPointerFieldNode node = this;
        for (int i = 0; i < index; i++)
            node = (ASTPointerFieldNode)node.getChild("@");
        return (ASTSFExprListNode)node.getChild("SFExprList");
    }

    public Token getASTTrparen(int index)
    {
        ASTPointerFieldNode node = this;
        for (int i = 0; i < index; i++)
            node = (ASTPointerFieldNode)node.getChild("@");
        return node.getChildToken("trparen");
    }

    public Token getASTTpercent(int index)
    {
        ASTPointerFieldNode node = this;
        for (int i = 0; i < index; i++)
            node = (ASTPointerFieldNode)node.getChild("@");
        return node.getChildToken("tpercent");
    }

    public ASTNameNode getASTName2(int index)
    {
        ASTPointerFieldNode node = this;
        for (int i = 0; i < index; i++)
            node = (ASTPointerFieldNode)node.getChild("@");
        return (ASTNameNode)node.getChild("Name2");
    }

    public ASTSFDummyArgNameListNode getASTSFDummyArgNameList(int index)
    {
        ASTPointerFieldNode node = this;
        for (int i = 0; i < index; i++)
            node = (ASTPointerFieldNode)node.getChild("@");
        return (ASTSFDummyArgNameListNode)node.getChild("SFDummyArgNameList");
    }

    public ASTFieldSelectorNode getASTFieldSelector(int index)
    {
        ASTPointerFieldNode node = this;
        for (int i = 0; i < index; i++)
            node = (ASTPointerFieldNode)node.getChild("@");
        return (ASTFieldSelectorNode)node.getChild("FieldSelector");
    }

    protected void visitThisNodeUsing(ASTVisitor visitor) { visitor.visitASTPointerFieldNode(this); }
}
