// Generated by Rex version 1.0 alpha 4

package org.eclipse.photran.internal.core.f95parser;

import java.util.LinkedList;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.Iterator;
import org.eclipse.photran.internal.core.model.FortranElement;
import org.eclipse.cdt.core.model.CModelException;


/**
 * User-specified actions, called when the parser is about to
 * reduce by a certain production
 */
public class BuildModelParserAction implements AbstractParserAction
{
    private BuildModelParserAction() {;} // Singleton
    private static BuildModelParserAction singletonInstance = null;
    public static final BuildModelParserAction getInstance() { if (singletonInstance == null) singletonInstance = new BuildModelParserAction(); return singletonInstance; }


private class M
    {
        private Map/*<FortranElement, FortranElementInfo>*/ allElements = new HashMap();
    
        public Map/*<FortranElement, FortranElementInfo>*/ getAllElements()
        {
            return allElements;
        }
    
        public List/*<FortranElement>*/list(List list, FortranElement node)
        {
            if (list == null) list = new LinkedList();
            if (node != null) list.add(node);
            return list;
        }
    
        public List/*<FortranElement>*/list(FortranElement node)
        {
            return list(new LinkedList(), node);
        }
    
        public FortranElement mainProgram(Token nameToken, List/*<FortranElement>*/children)
        {
            FortranElement e = new FortranElement.MainProgram(null, nameToken);
            reparent(children, e);
            return newElement(e);
        }
    
        public FortranElement module(Token nameToken, List/*<FortranElement>*/children)
        {
            FortranElement e = new FortranElement.Module(null, nameToken);
            reparent(children, e);
            return newElement(e);
        }
    
        public FortranElement functionSubprogram(Token nameToken)
        {
            return newElement(new FortranElement.Function(null, nameToken));
        }
    
        public FortranElement subroutineSubprogram(Token nameToken)
        {
            return newElement(new FortranElement.Subroutine(null, nameToken));
        }
    
        public FortranElement blockData(Token nameToken)
        {
            return newElement(new FortranElement.BlockData(null, nameToken));
        }
    
        private void reparent(List children, FortranElement parent)
        {
            if (children == null) return;
    
            //try
            //{
                Iterator it = children.iterator();
                while (it.hasNext())
                {
                    FortranElement c = (FortranElement)it.next();
                    c.setParent(parent);
                    //parent.addChild(c);
                    //if (parent instanceof Parent) ((Parent)parent).addChild(c);
                }
            //}
            //catch (CModelException x)
            //{
            //    x.printStackTrace();
            //}
        }
    
        private FortranElement newElement(FortranElement e)
        {
            try { allElements.put(e, e.getElementInfo()); }
            catch (CModelException x) {;}
            return e;
        }
    }
    
    protected M m = new M();
    
    
    /**
     * Returns the production reductions associated with these user actions
     */
    public AbstractProductionReductions getProductionReductions()
    {
        return BuildModelProductionReductions.getInstance();
    }

    /**
     * This method is called before parsing begins
     */
    public void initialize()
    {
    }

    /**
     * This method is called after parsing completes
     */
    public void deinitialize()
    {
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExecutableProgram> ::= <xProgramUnit>  ;
     */
    public Map/*<FortranElement, FortranElementInfo>*/ production1UserAction(FortranElement v1)
    {
        return m.getAllElements();
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExecutableProgram> ::= <xExecutableProgram> <xProgramUnit>  ;
     */
    public Map/*<FortranElement, FortranElementInfo>*/ production2UserAction(Map/*<FortranElement, FortranElementInfo>*/ v1, FortranElement v2)
    {
        return m.getAllElements();
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xProgramUnit> ::= <xMainProgram>  ;
     */
    public FortranElement production3UserAction(FortranElement v1)
    {
        return v1;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xProgramUnit> ::= <xFunctionSubprogram>  ;
     */
    public FortranElement production4UserAction(FortranElement v1)
    {
        return v1;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xProgramUnit> ::= <xSubroutineSubprogram>  ;
     */
    public FortranElement production5UserAction(FortranElement v1)
    {
        return v1;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xProgramUnit> ::= <xModule>  ;
     */
    public FortranElement production6UserAction(FortranElement v1)
    {
        return v1;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xProgramUnit> ::= <xBlockDataSubprogram>  ;
     */
    public FortranElement production7UserAction(FortranElement v1)
    {
        return v1;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xMainProgram> ::= <xMainRange>  ;
     */
    public FortranElement production8UserAction(List/*<FortranElement>*/ v1)
    {
        return m.mainProgram(null, v1);
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xMainProgram> ::= <xProgramStmt> <xMainRange>  ;
     */
    public FortranElement production9UserAction(Token v1, List/*<FortranElement>*/ v2)
    {
        return m.mainProgram(v1, v2);
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xMainRange> ::= <xBody> <xEndProgramStmt>  ;
     */
    public List/*<FortranElement>*/ production10UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xMainRange> ::= <xBodyPlusInternals> <xEndProgramStmt>  ;
     */
    public List/*<FortranElement>*/ production11UserAction(List/*<FortranElement>*/ v1, Object v2)
    {
        return v1;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xMainRange> ::= <xEndProgramStmt>  ;
     */
    public List/*<FortranElement>*/ production12UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBody> ::= <xBodyConstruct>  ;
     */
    public Object production13UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBody> ::= <xBody> <xBodyConstruct>  ;
     */
    public Object production14UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBodyConstruct> ::= <xSpecificationPartConstruct>  ;
     */
    public Object production15UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBodyConstruct> ::= <xExecutableConstruct>  ;
     */
    public Object production16UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionSubprogram> ::= <xFunctionStmt> <xFunctionRange>  ;
     */
    public FortranElement production17UserAction(Token v1, Object v2)
    {
        return m.functionSubprogram(v1);
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionRange> ::= <xBody> <xEndFunctionStmt>  ;
     */
    public Object production18UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionRange> ::= <xEndFunctionStmt>  ;
     */
    public Object production19UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionRange> ::= <xBodyPlusInternals> <xEndFunctionStmt>  ;
     */
    public Object production20UserAction(List/*<FortranElement>*/ v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutineSubprogram> ::= <xSubroutineStmt> <xSubroutineRange>  ;
     */
    public FortranElement production21UserAction(Token v1, Object v2)
    {
        return m.subroutineSubprogram(v1);
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutineRange> ::= <xBody> <xEndSubroutineStmt>  ;
     */
    public Object production22UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutineRange> ::= <xEndSubroutineStmt>  ;
     */
    public Object production23UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutineRange> ::= <xBodyPlusInternals> <xEndSubroutineStmt>  ;
     */
    public Object production24UserAction(List/*<FortranElement>*/ v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xModule> ::= <xModuleStmt> <xModuleBlock>  ;
     */
    public FortranElement production25UserAction(Token v1, List/*<FortranElement>*/ v2)
    {
        return m.module(v1, v2);
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xModuleBlock> ::= <xModuleBody> <xEndModuleStmt>  ;
     */
    public List/*<FortranElement>*/ production26UserAction(List/*<FortranElement>*/ v1, Object v2)
    {
        return v1;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xModuleBlock> ::= <xEndModuleStmt>  ;
     */
    public List/*<FortranElement>*/ production27UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xModuleBody> ::= <xSpecificationPartConstruct>  ;
     */
    public List/*<FortranElement>*/ production28UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xModuleBody> ::= <xModuleBody> <xSpecificationPartConstruct>  ;
     */
    public List/*<FortranElement>*/ production29UserAction(List/*<FortranElement>*/ v1, Object v2)
    {
        return v1;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xModuleBody> ::= <xModuleSubprogramPartConstruct>  ;
     */
    public List/*<FortranElement>*/ production30UserAction(FortranElement v1)
    {
        return m.list(v1);
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xModuleBody> ::= <xModuleBody> <xModuleSubprogramPartConstruct>  ;
     */
    public List/*<FortranElement>*/ production31UserAction(List/*<FortranElement>*/ v1, FortranElement v2)
    {
        return m.list(v1, v2);
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBlockDataSubprogram> ::= <xBlockDataStmt> <xBlockDataBody> <xEndBlockDataStmt>  ;
     */
    public FortranElement production32UserAction(Token v1, Object v2, Object v3)
    {
        return m.blockData(v1);
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBlockDataSubprogram> ::= <xBlockDataStmt> <xEndBlockDataStmt>  ;
     */
    public FortranElement production33UserAction(Token v1, Object v2)
    {
        return m.blockData(v1);
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBlockDataBody> ::= <xBlockDataBodyConstruct>  ;
     */
    public Object production34UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBlockDataBody> ::= <xBlockDataBody> <xBlockDataBodyConstruct>  ;
     */
    public Object production35UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBlockDataBodyConstruct> ::= <xSpecificationPartConstruct>  ;
     */
    public Object production36UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSpecificationPartConstruct> ::= <xUseStmt>  ;
     */
    public Object production37UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSpecificationPartConstruct> ::= <T_xImplicitStmt>  ;
     */
    public Object production38UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSpecificationPartConstruct> ::= <xParameterStmt>  ;
     */
    public Object production39UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSpecificationPartConstruct> ::= <xFormatStmt>  ;
     */
    public Object production40UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSpecificationPartConstruct> ::= <xEntryStmt>  ;
     */
    public Object production41UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSpecificationPartConstruct> ::= <xDeclarationConstruct>  ;
     */
    public Object production42UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDeclarationConstruct> ::= <xDerivedTypeDef>  ;
     */
    public Object production43UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDeclarationConstruct> ::= <xInterfaceBlock>  ;
     */
    public Object production44UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDeclarationConstruct> ::= <xTypeDeclarationStmt>  ;
     */
    public Object production45UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDeclarationConstruct> ::= <xSpecificationStmt>  ;
     */
    public Object production46UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExecutionPartConstruct> ::= <xObsoleteExecutionPartConstruct>  ;
     */
    public Object production47UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExecutionPartConstruct> ::= <xExecutableConstruct>  ;
     */
    public Object production48UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExecutionPartConstruct> ::= <xFormatStmt>  ;
     */
    public Object production49UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExecutionPartConstruct> ::= <xEntryStmt>  ;
     */
    public Object production50UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xObsoleteExecutionPartConstruct> ::= <xDataStmt>  ;
     */
    public Object production51UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBodyPlusInternals> ::= <xBody> <xContainsStmt> <xInternalSubprogram>  ;
     */
    public List/*<FortranElement>*/ production52UserAction(Object v1, Object v2, FortranElement v3)
    {
        return m.list(v3);
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBodyPlusInternals> ::= <xContainsStmt> <xInternalSubprogram>  ;
     */
    public List/*<FortranElement>*/ production53UserAction(Object v1, FortranElement v2)
    {
        return m.list(v2);
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBodyPlusInternals> ::= <xBodyPlusInternals> <xInternalSubprogram>  ;
     */
    public List/*<FortranElement>*/ production54UserAction(List/*<FortranElement>*/ v1, FortranElement v2)
    {
        return m.list(v1, v2);
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInternalSubprogram> ::= <xFunctionSubprogram>  ;
     */
    public FortranElement production55UserAction(FortranElement v1)
    {
        return v1;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInternalSubprogram> ::= <xSubroutineSubprogram>  ;
     */
    public FortranElement production56UserAction(FortranElement v1)
    {
        return v1;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xModuleSubprogramPartConstruct> ::= <xContainsStmt>  ;
     */
    public FortranElement production57UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xModuleSubprogramPartConstruct> ::= <xModuleSubprogram>  ;
     */
    public FortranElement production58UserAction(FortranElement v1)
    {
        return v1;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xModuleSubprogram> ::= <xFunctionSubprogram>  ;
     */
    public FortranElement production59UserAction(FortranElement v1)
    {
        return v1;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xModuleSubprogram> ::= <xSubroutineSubprogram>  ;
     */
    public FortranElement production60UserAction(FortranElement v1)
    {
        return v1;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSpecificationStmt> ::= <xAccessStmt>  ;
     */
    public Object production61UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSpecificationStmt> ::= <xAllocatableStmt>  ;
     */
    public Object production62UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSpecificationStmt> ::= <xCommonStmt>  ;
     */
    public Object production63UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSpecificationStmt> ::= <xDataStmt>  ;
     */
    public Object production64UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSpecificationStmt> ::= <xDimensionStmt>  ;
     */
    public Object production65UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSpecificationStmt> ::= <xEquivalenceStmt>  ;
     */
    public Object production66UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSpecificationStmt> ::= <xExternalStmt>  ;
     */
    public Object production67UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSpecificationStmt> ::= <xIntentStmt>  ;
     */
    public Object production68UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSpecificationStmt> ::= <xIntrinsicStmt>  ;
     */
    public Object production69UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSpecificationStmt> ::= <xNamelistStmt>  ;
     */
    public Object production70UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSpecificationStmt> ::= <xOptionalStmt>  ;
     */
    public Object production71UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSpecificationStmt> ::= <xPointerStmt>  ;
     */
    public Object production72UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSpecificationStmt> ::= <xSaveStmt>  ;
     */
    public Object production73UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSpecificationStmt> ::= <xTargetStmt>  ;
     */
    public Object production74UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExecutableConstruct> ::= <xActionStmt>  ;
     */
    public Object production75UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExecutableConstruct> ::= <xCaseConstruct>  ;
     */
    public Object production76UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExecutableConstruct> ::= <xDoConstruct>  ;
     */
    public Object production77UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExecutableConstruct> ::= <xForallConstruct>  ;
     */
    public Object production78UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExecutableConstruct> ::= <xIfConstruct>  ;
     */
    public Object production79UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExecutableConstruct> ::= <xWhereConstruct>  ;
     */
    public Object production80UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExecutableConstruct> ::= <xEndDoStmt>  ;
     */
    public Object production81UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xObsoleteActionStmt>  ;
     */
    public Object production82UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xAllocateStmt>  ;
     */
    public Object production83UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xAssignmentStmt>  ;
     */
    public Object production84UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xBackspaceStmt>  ;
     */
    public Object production85UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xCallStmt>  ;
     */
    public Object production86UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xCloseStmt>  ;
     */
    public Object production87UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xContinueStmt>  ;
     */
    public Object production88UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xCycleStmt>  ;
     */
    public Object production89UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xDeallocateStmt>  ;
     */
    public Object production90UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xEndfileStmt>  ;
     */
    public Object production91UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xExitStmt>  ;
     */
    public Object production92UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xForallStmt>  ;
     */
    public Object production93UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xGotoStmt>  ;
     */
    public Object production94UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xIfStmt>  ;
     */
    public Object production95UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xInquireStmt>  ;
     */
    public Object production96UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xNullifyStmt>  ;
     */
    public Object production97UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xOpenStmt>  ;
     */
    public Object production98UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xPointerAssignmentStmt>  ;
     */
    public Object production99UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xPrintStmt>  ;
     */
    public Object production100UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xReadStmt>  ;
     */
    public Object production101UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xReturnStmt>  ;
     */
    public Object production102UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xRewindStmt>  ;
     */
    public Object production103UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xStopStmt>  ;
     */
    public Object production104UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xWhereStmt>  ;
     */
    public Object production105UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xWriteStmt>  ;
     */
    public Object production106UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xObsoleteActionStmt> ::= <xStmtFunctionStmt>  ;
     */
    public Object production107UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xObsoleteActionStmt> ::= <xArithmeticIfStmt>  ;
     */
    public Object production108UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xObsoleteActionStmt> ::= <xComputedGotoStmt>  ;
     */
    public Object production109UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xName> ::= T_IDENT  ;
     */
    public Object production110UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConstant> ::= <xNamedConstantUse>  ;
     */
    public Object production111UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConstant> ::= <xUnsignedArithmeticConstant>  ;
     */
    public Object production112UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConstant> ::= T_PLUS <xUnsignedArithmeticConstant>  ;
     */
    public Object production113UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConstant> ::= T_MINUS <xUnsignedArithmeticConstant>  ;
     */
    public Object production114UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConstant> ::= T_SCON  ;
     */
    public Object production115UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConstant> ::= T_ICON T_UNDERSCORE T_SCON  ;
     */
    public Object production116UserAction(Token v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConstant> ::= <xNamedConstantUse> T_UNDERSCORE T_SCON  ;
     */
    public Object production117UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConstant> ::= <xLogicalConstant>  ;
     */
    public Object production118UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConstant> ::= <xStructureConstructor>  ;
     */
    public Object production119UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConstant> ::= <xBozLiteralConstant>  ;
     */
    public Object production120UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConstant> ::= T_HCON  ;
     */
    public Object production121UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xNamedConstant> ::= T_IDENT  ;
     */
    public Object production122UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xNamedConstantUse> ::= T_IDENT  ;
     */
    public Object production123UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPowerOp> ::= T_POW  ;
     */
    public Object production124UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xMultOp> ::= T_ASTERISK  ;
     */
    public Object production125UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xMultOp> ::= T_SLASH  ;
     */
    public Object production126UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAddOp> ::= T_PLUS  ;
     */
    public Object production127UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAddOp> ::= T_MINUS  ;
     */
    public Object production128UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSign> ::= T_PLUS  ;
     */
    public Object production129UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSign> ::= T_MINUS  ;
     */
    public Object production130UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConcatOp> ::= T_SLASHSLASH  ;
     */
    public Object production131UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRelOp> ::= T_EQ  ;
     */
    public Object production132UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRelOp> ::= T_NE  ;
     */
    public Object production133UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRelOp> ::= T_LT  ;
     */
    public Object production134UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRelOp> ::= T_LE  ;
     */
    public Object production135UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRelOp> ::= T_GT  ;
     */
    public Object production136UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRelOp> ::= T_GE  ;
     */
    public Object production137UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRelOp> ::= T_EQEQ  ;
     */
    public Object production138UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRelOp> ::= T_SLASHEQ  ;
     */
    public Object production139UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRelOp> ::= T_LESSTHAN  ;
     */
    public Object production140UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRelOp> ::= T_LESSTHANEQ  ;
     */
    public Object production141UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRelOp> ::= T_GREATERTHAN  ;
     */
    public Object production142UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRelOp> ::= T_GREATERTHANEQ  ;
     */
    public Object production143UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xNotOp> ::= T_NOT  ;
     */
    public Object production144UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAndOp> ::= T_AND  ;
     */
    public Object production145UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOrOp> ::= T_OR  ;
     */
    public Object production146UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEquivOp> ::= T_EQV  ;
     */
    public Object production147UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEquivOp> ::= T_NEQV  ;
     */
    public Object production148UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDefinedOperator> ::= T_XDOP  ;
     */
    public Object production149UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDefinedOperator> ::= <xConcatOp>  ;
     */
    public Object production150UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDefinedOperator> ::= <xPowerOp>  ;
     */
    public Object production151UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDefinedOperator> ::= <xMultOp>  ;
     */
    public Object production152UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDefinedOperator> ::= <xAddOp>  ;
     */
    public Object production153UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDefinedOperator> ::= <xRelOp>  ;
     */
    public Object production154UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDefinedOperator> ::= <xNotOp>  ;
     */
    public Object production155UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDefinedOperator> ::= <xAndOp>  ;
     */
    public Object production156UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDefinedOperator> ::= <xOrOp>  ;
     */
    public Object production157UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDefinedOperator> ::= <xEquivOp>  ;
     */
    public Object production158UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDefinedUnaryOp> ::= T_XDOP  ;
     */
    public Object production159UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDefinedBinaryOp> ::= T_XDOP  ;
     */
    public Object production160UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLabel> ::= T_ICON  ;
     */
    public Object production161UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUnsignedArithmeticConstant> ::= T_ICON  ;
     */
    public Object production162UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUnsignedArithmeticConstant> ::= T_RCON  ;
     */
    public Object production163UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUnsignedArithmeticConstant> ::= T_DCON  ;
     */
    public Object production164UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUnsignedArithmeticConstant> ::= <xComplexConst>  ;
     */
    public Object production165UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUnsignedArithmeticConstant> ::= T_ICON T_UNDERSCORE <xKindParam>  ;
     */
    public Object production166UserAction(Token v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUnsignedArithmeticConstant> ::= T_RCON T_UNDERSCORE <xKindParam>  ;
     */
    public Object production167UserAction(Token v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUnsignedArithmeticConstant> ::= T_DCON T_UNDERSCORE <xKindParam>  ;
     */
    public Object production168UserAction(Token v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xKindParam> ::= T_ICON  ;
     */
    public Object production169UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xKindParam> ::= <xNamedConstantUse>  ;
     */
    public Object production170UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBozLiteralConstant> ::= T_BCON  ;
     */
    public Object production171UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBozLiteralConstant> ::= T_OCON  ;
     */
    public Object production172UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBozLiteralConstant> ::= T_ZCON  ;
     */
    public Object production173UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComplexConst> ::= T_LPAREN <xExpr> T_COMMA <xExpr> T_RPAREN  ;
     */
    public Object production174UserAction(Token v1, Object v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLogicalConstant> ::= T_TRUE  ;
     */
    public Object production175UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLogicalConstant> ::= T_FALSE  ;
     */
    public Object production176UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLogicalConstant> ::= T_TRUE T_UNDERSCORE <xKindParam>  ;
     */
    public Object production177UserAction(Token v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLogicalConstant> ::= T_FALSE T_UNDERSCORE <xKindParam>  ;
     */
    public Object production178UserAction(Token v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDerivedTypeDef> ::= <xDerivedTypeStmt> <xDerivedTypeBody> <xEndTypeStmt>  ;
     */
    public Object production179UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDerivedTypeBody> ::= <xDerivedTypeBodyConstruct>  ;
     */
    public Object production180UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDerivedTypeBody> ::= <xDerivedTypeBody> <xDerivedTypeBodyConstruct>  ;
     */
    public Object production181UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDerivedTypeBodyConstruct> ::= <xPrivateSequenceStmt>  ;
     */
    public Object production182UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDerivedTypeBodyConstruct> ::= <xComponentDefStmt>  ;
     */
    public Object production183UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDerivedTypeStmt> ::= T_TYPE <xTypeName> T_EOS  ;
     */
    public Object production184UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDerivedTypeStmt> ::= <xLblDef> T_TYPE <xTypeName> T_EOS  ;
     */
    public Object production185UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDerivedTypeStmt> ::= T_TYPE T_COLON T_COLON <xTypeName> T_EOS  ;
     */
    public Object production186UserAction(Token v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDerivedTypeStmt> ::= <xLblDef> T_TYPE T_COLON T_COLON <xTypeName> T_EOS  ;
     */
    public Object production187UserAction(Object v1, Token v2, Token v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDerivedTypeStmt> ::= T_TYPE T_COMMA <xAccessSpec> T_COLON T_COLON <xTypeName> T_EOS  ;
     */
    public Object production188UserAction(Token v1, Token v2, Object v3, Token v4, Token v5, Object v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDerivedTypeStmt> ::= <xLblDef> T_TYPE T_COMMA <xAccessSpec> T_COLON T_COLON <xTypeName> T_EOS  ;
     */
    public Object production189UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6, Object v7, Token v8)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrivateSequenceStmt> ::= T_PRIVATE T_EOS  ;
     */
    public Object production190UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrivateSequenceStmt> ::= <xLblDef> T_PRIVATE T_EOS  ;
     */
    public Object production191UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrivateSequenceStmt> ::= T_SEQUENCE T_EOS  ;
     */
    public Object production192UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrivateSequenceStmt> ::= <xLblDef> T_SEQUENCE T_EOS  ;
     */
    public Object production193UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentDefStmt> ::= <xTypeSpec> T_COMMA <xComponentAttrSpecList> T_COLON T_COLON <xComponentDeclList> T_EOS  ;
     */
    public Object production194UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentDefStmt> ::= <xLblDef> <xTypeSpec> T_COMMA <xComponentAttrSpecList> T_COLON T_COLON <xComponentDeclList> T_EOS  ;
     */
    public Object production195UserAction(Object v1, Object v2, Token v3, Object v4, Token v5, Token v6, Object v7, Token v8)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentDefStmt> ::= <xTypeSpec> T_COLON T_COLON <xComponentDeclList> T_EOS  ;
     */
    public Object production196UserAction(Object v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentDefStmt> ::= <xLblDef> <xTypeSpec> T_COLON T_COLON <xComponentDeclList> T_EOS  ;
     */
    public Object production197UserAction(Object v1, Object v2, Token v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentDefStmt> ::= <xTypeSpec> <xComponentDeclList> T_EOS  ;
     */
    public Object production198UserAction(Object v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentDefStmt> ::= <xLblDef> <xTypeSpec> <xComponentDeclList> T_EOS  ;
     */
    public Object production199UserAction(Object v1, Object v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentAttrSpecList> ::= <xComponentAttrSpec>  ;
     */
    public Object production200UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentAttrSpecList> ::= <xComponentAttrSpecList> T_COMMA <xComponentAttrSpec>  ;
     */
    public Object production201UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentAttrSpec> ::= T_POINTER  ;
     */
    public Object production202UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentAttrSpec> ::= T_DIMENSION T_LPAREN <xComponentArraySpec> T_RPAREN  ;
     */
    public Object production203UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentArraySpec> ::= <xExplicitShapeSpecList>  ;
     */
    public Object production204UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentArraySpec> ::= <xDeferredShapeSpecList>  ;
     */
    public Object production205UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentDeclList> ::= <xComponentDecl>  ;
     */
    public Object production206UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentDeclList> ::= <xComponentDeclList> T_COMMA <xComponentDecl>  ;
     */
    public Object production207UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentDecl> ::= <xComponentName> T_LPAREN <xComponentArraySpec> T_RPAREN T_ASTERISK <xCharLength> <xComponentInitialization>  ;
     */
    public Object production208UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6, Object v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentDecl> ::= <xComponentName> T_LPAREN <xComponentArraySpec> T_RPAREN <xComponentInitialization>  ;
     */
    public Object production209UserAction(Object v1, Token v2, Object v3, Token v4, Object v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentDecl> ::= <xComponentName> T_ASTERISK <xCharLength> <xComponentInitialization>  ;
     */
    public Object production210UserAction(Object v1, Token v2, Object v3, Object v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentDecl> ::= <xComponentName> <xComponentInitialization>  ;
     */
    public Object production211UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentDecl> ::= <xComponentName> T_LPAREN <xComponentArraySpec> T_RPAREN T_ASTERISK <xCharLength>  ;
     */
    public Object production212UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentDecl> ::= <xComponentName> T_LPAREN <xComponentArraySpec> T_RPAREN  ;
     */
    public Object production213UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentDecl> ::= <xComponentName> T_ASTERISK <xCharLength>  ;
     */
    public Object production214UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentDecl> ::= <xComponentName>  ;
     */
    public Object production215UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentInitialization> ::= T_EQUALS <xExpr>  ;
     */
    public Object production216UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentInitialization> ::= T_EQGREATERTHAN T_NULL T_LPAREN T_RPAREN  ;
     */
    public Object production217UserAction(Token v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndTypeStmt> ::= T_ENDTYPE T_EOS  ;
     */
    public Object production218UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndTypeStmt> ::= T_ENDTYPE <xEndTypeStmt@1> T_EOS  ;
     */
    public Object production219UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndTypeStmt> ::= <xLblDef> T_ENDTYPE T_EOS  ;
     */
    public Object production220UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndTypeStmt> ::= <xLblDef> T_ENDTYPE <xEndTypeStmt@1> T_EOS  ;
     */
    public Object production221UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndTypeStmt> ::= T_END T_TYPE T_EOS  ;
     */
    public Object production222UserAction(Token v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndTypeStmt> ::= T_END T_TYPE <xEndTypeStmt@2> T_EOS  ;
     */
    public Object production223UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndTypeStmt> ::= <xLblDef> T_END T_TYPE T_EOS  ;
     */
    public Object production224UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndTypeStmt> ::= <xLblDef> T_END T_TYPE <xEndTypeStmt@2> T_EOS  ;
     */
    public Object production225UserAction(Object v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xStructureConstructor> ::= <xTypeName> T_LPAREN <xExprList> T_RPAREN  ;
     */
    public Object production226UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExprList> ::= <xExpr>  ;
     */
    public Object production227UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExprList> ::= <xExprList> T_COMMA <xExpr>  ;
     */
    public Object production228UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xArrayConstructor> ::= T_LPARENSLASH <xAcValueList> T_SLASHRPAREN  ;
     */
    public Object production229UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAcValueList> ::= <xExpr>  ;
     */
    public Object production230UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAcValueList> ::= <xAcValueList1>  ;
     */
    public Object production231UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAcValueList1> ::= <xExpr> T_COMMA <xExpr>  ;
     */
    public Object production232UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAcValueList1> ::= <xExpr> T_COMMA <xAcImpliedDo>  ;
     */
    public Object production233UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAcValueList1> ::= <xAcImpliedDo>  ;
     */
    public Object production234UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAcValueList1> ::= <xAcValueList1> T_COMMA <xExpr>  ;
     */
    public Object production235UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAcValueList1> ::= <xAcValueList1> T_COMMA <xAcImpliedDo>  ;
     */
    public Object production236UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAcImpliedDo> ::= T_LPAREN <xExpr> T_COMMA <T_xImpliedDoVariable> T_EQUALS <xExpr> T_COMMA <xExpr> T_RPAREN  ;
     */
    public Object production237UserAction(Token v1, Object v2, Token v3, Object v4, Token v5, Object v6, Token v7, Object v8, Token v9)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAcImpliedDo> ::= T_LPAREN <xExpr> T_COMMA <T_xImpliedDoVariable> T_EQUALS <xExpr> T_COMMA <xExpr> T_COMMA <xExpr> T_RPAREN  ;
     */
    public Object production238UserAction(Token v1, Object v2, Token v3, Object v4, Token v5, Object v6, Token v7, Object v8, Token v9, Object v10, Token v11)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAcImpliedDo> ::= T_LPAREN <xAcImpliedDo> T_COMMA <T_xImpliedDoVariable> T_EQUALS <xExpr> T_COMMA <xExpr> T_RPAREN  ;
     */
    public Object production239UserAction(Token v1, Object v2, Token v3, Object v4, Token v5, Object v6, Token v7, Object v8, Token v9)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAcImpliedDo> ::= T_LPAREN <xAcImpliedDo> T_COMMA <T_xImpliedDoVariable> T_EQUALS <xExpr> T_COMMA <xExpr> T_COMMA <xExpr> T_RPAREN  ;
     */
    public Object production240UserAction(Token v1, Object v2, Token v3, Object v4, Token v5, Object v6, Token v7, Object v8, Token v9, Object v10, Token v11)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTypeDeclarationStmt> ::= <xTypeSpec> <xAttrSpecSeq> T_COLON T_COLON <xEntityDeclList> T_EOS  ;
     */
    public Object production241UserAction(Object v1, Object v2, Token v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTypeDeclarationStmt> ::= <xLblDef> <xTypeSpec> <xAttrSpecSeq> T_COLON T_COLON <xEntityDeclList> T_EOS  ;
     */
    public Object production242UserAction(Object v1, Object v2, Object v3, Token v4, Token v5, Object v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTypeDeclarationStmt> ::= <xTypeSpec> T_COLON T_COLON <xEntityDeclList> T_EOS  ;
     */
    public Object production243UserAction(Object v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTypeDeclarationStmt> ::= <xLblDef> <xTypeSpec> T_COLON T_COLON <xEntityDeclList> T_EOS  ;
     */
    public Object production244UserAction(Object v1, Object v2, Token v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTypeDeclarationStmt> ::= <xTypeSpec> <xEntityDeclList> T_EOS  ;
     */
    public Object production245UserAction(Object v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTypeDeclarationStmt> ::= <xLblDef> <xTypeSpec> <xEntityDeclList> T_EOS  ;
     */
    public Object production246UserAction(Object v1, Object v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAttrSpecSeq> ::= T_COMMA <xAttrSpec>  ;
     */
    public Object production247UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAttrSpecSeq> ::= <xAttrSpecSeq> T_COMMA <xAttrSpec>  ;
     */
    public Object production248UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTypeSpec> ::= T_INTEGER  ;
     */
    public Object production249UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTypeSpec> ::= T_REAL  ;
     */
    public Object production250UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTypeSpec> ::= T_DOUBLEPRECISION  ;
     */
    public Object production251UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTypeSpec> ::= T_COMPLEX  ;
     */
    public Object production252UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTypeSpec> ::= T_LOGICAL  ;
     */
    public Object production253UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTypeSpec> ::= T_CHARACTER  ;
     */
    public Object production254UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTypeSpec> ::= T_INTEGER <xKindSelector>  ;
     */
    public Object production255UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTypeSpec> ::= T_REAL <xKindSelector>  ;
     */
    public Object production256UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTypeSpec> ::= T_DOUBLE T_PRECISION  ;
     */
    public Object production257UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTypeSpec> ::= T_COMPLEX <xKindSelector>  ;
     */
    public Object production258UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTypeSpec> ::= T_CHARACTER <xCharSelector>  ;
     */
    public Object production259UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTypeSpec> ::= T_LOGICAL <xKindSelector>  ;
     */
    public Object production260UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTypeSpec> ::= T_TYPE T_LPAREN <xTypeName> T_RPAREN  ;
     */
    public Object production261UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAttrSpec> ::= T_PARAMETER  ;
     */
    public Object production262UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAttrSpec> ::= <xAccessSpec>  ;
     */
    public Object production263UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAttrSpec> ::= T_ALLOCATABLE  ;
     */
    public Object production264UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAttrSpec> ::= T_DIMENSION T_LPAREN <xArraySpec> T_RPAREN  ;
     */
    public Object production265UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAttrSpec> ::= T_EXTERNAL  ;
     */
    public Object production266UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAttrSpec> ::= T_INTENT T_LPAREN <xIntentSpec> T_RPAREN  ;
     */
    public Object production267UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAttrSpec> ::= T_INTRINSIC  ;
     */
    public Object production268UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAttrSpec> ::= T_OPTIONAL  ;
     */
    public Object production269UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAttrSpec> ::= T_POINTER  ;
     */
    public Object production270UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAttrSpec> ::= T_SAVE  ;
     */
    public Object production271UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAttrSpec> ::= T_TARGET  ;
     */
    public Object production272UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEntityDeclList> ::= <xEntityDecl>  ;
     */
    public Object production273UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEntityDeclList> ::= <xEntityDeclList> T_COMMA <xEntityDecl>  ;
     */
    public Object production274UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEntityDecl> ::= <xObjectName>  ;
     */
    public Object production275UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEntityDecl> ::= <xObjectName> <xEntityDecl@5>  ;
     */
    public Object production276UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEntityDecl> ::= <xObjectName> <xEntityDecl@4>  ;
     */
    public Object production277UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEntityDecl> ::= <xObjectName> <xEntityDecl@4> <xEntityDecl@5>  ;
     */
    public Object production278UserAction(Object v1, Token v2, Object v3, Object v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEntityDecl> ::= <xObjectName> <xEntityDecl@3>  ;
     */
    public Object production279UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEntityDecl> ::= <xObjectName> <xEntityDecl@3> <xEntityDecl@5>  ;
     */
    public Object production280UserAction(Object v1, Token v2, Object v3, Token v4, Object v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEntityDecl> ::= <xObjectName> <xEntityDecl@3> <xEntityDecl@4>  ;
     */
    public Object production281UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEntityDecl> ::= <xObjectName> <xEntityDecl@3> <xEntityDecl@4> <xEntityDecl@5>  ;
     */
    public Object production282UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6, Object v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEntityDecl> ::= <xInvalidEntityDecl>  ;
     */
    public Object production283UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInvalidEntityDecl> ::= <xObjectName> T_ASTERISK <xCharLength> T_LPAREN <xArraySpec> T_RPAREN  ;
     */
    public Object production284UserAction(Object v1, Token v2, Object v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInvalidEntityDecl> ::= <xObjectName> T_ASTERISK <xCharLength> T_LPAREN <xArraySpec> T_RPAREN <xInvalidEntityDecl@6>  ;
     */
    public Object production285UserAction(Object v1, Token v2, Object v3, Token v4, Object v5, Token v6, Object v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInitialization> ::= T_EQUALS <xExpr>  ;
     */
    public Object production286UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInitialization> ::= T_EQGREATERTHAN T_NULL T_LPAREN T_RPAREN  ;
     */
    public Object production287UserAction(Token v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xKindSelector> ::= T_LPAREN T_KINDEQ <xExpr> T_RPAREN  ;
     */
    public Object production288UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xKindSelector> ::= T_LPAREN <xExpr> T_RPAREN  ;
     */
    public Object production289UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCharSelector> ::= <xLengthSelector>  ;
     */
    public Object production290UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCharSelector> ::= T_LPAREN T_LENEQ <xCharLenParamValue> T_COMMA T_KINDEQ <xExpr> T_RPAREN  ;
     */
    public Object production291UserAction(Token v1, Token v2, Object v3, Token v4, Token v5, Object v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCharSelector> ::= T_LPAREN T_LENEQ <xCharLenParamValue> T_COMMA <xExpr> T_RPAREN  ;
     */
    public Object production292UserAction(Token v1, Token v2, Object v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCharSelector> ::= T_LPAREN T_KINDEQ <xExpr> T_RPAREN  ;
     */
    public Object production293UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCharSelector> ::= T_LPAREN T_LENEQ <xCharLenParamValue> T_RPAREN  ;
     */
    public Object production294UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCharSelector> ::= T_LPAREN <xCharLenParamValue> T_RPAREN  ;
     */
    public Object production295UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLengthSelector> ::= T_ASTERISK <xCharLength>  ;
     */
    public Object production296UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCharLength> ::= T_LPAREN <xCharLenParamValue> T_RPAREN  ;
     */
    public Object production297UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCharLength> ::= T_ICON  ;
     */
    public Object production298UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCharLenParamValue> ::= <xExpr>  ;
     */
    public Object production299UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCharLenParamValue> ::= T_ASTERISK  ;
     */
    public Object production300UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAccessSpec> ::= T_PUBLIC  ;
     */
    public Object production301UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAccessSpec> ::= T_PRIVATE  ;
     */
    public Object production302UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIntentSpec> ::= T_IN  ;
     */
    public Object production303UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIntentSpec> ::= T_OUT  ;
     */
    public Object production304UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIntentSpec> ::= T_INOUT  ;
     */
    public Object production305UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIntentSpec> ::= T_IN T_OUT  ;
     */
    public Object production306UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xArraySpec> ::= <xExplicitShapeSpecList>  ;
     */
    public Object production307UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xArraySpec> ::= <xAssumedSizeSpec>  ;
     */
    public Object production308UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xArraySpec> ::= <xAssumedShapeSpecList>  ;
     */
    public Object production309UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xArraySpec> ::= <xDeferredShapeSpecList>  ;
     */
    public Object production310UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssumedShapeSpecList> ::= <xLowerBound> T_COLON  ;
     */
    public Object production311UserAction(Object v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssumedShapeSpecList> ::= <xDeferredShapeSpecList> T_COMMA <xLowerBound> T_COLON  ;
     */
    public Object production312UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssumedShapeSpecList> ::= <xAssumedShapeSpecList> T_COMMA <xAssumedShapeSpec>  ;
     */
    public Object production313UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExplicitShapeSpecList> ::= <xExplicitShapeSpec>  ;
     */
    public Object production314UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExplicitShapeSpecList> ::= <xExplicitShapeSpecList> T_COMMA <xExplicitShapeSpec>  ;
     */
    public Object production315UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExplicitShapeSpec> ::= <xLowerBound> T_COLON <xUpperBound>  ;
     */
    public Object production316UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExplicitShapeSpec> ::= <xUpperBound>  ;
     */
    public Object production317UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLowerBound> ::= <xExpr>  ;
     */
    public Object production318UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUpperBound> ::= <xExpr>  ;
     */
    public Object production319UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssumedShapeSpec> ::= <xLowerBound> T_COLON  ;
     */
    public Object production320UserAction(Object v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssumedShapeSpec> ::= T_COLON  ;
     */
    public Object production321UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDeferredShapeSpecList> ::= <xDeferredShapeSpec>  ;
     */
    public Object production322UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDeferredShapeSpecList> ::= <xDeferredShapeSpecList> T_COMMA <xDeferredShapeSpec>  ;
     */
    public Object production323UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDeferredShapeSpec> ::= T_COLON  ;
     */
    public Object production324UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssumedSizeSpec> ::= T_ASTERISK  ;
     */
    public Object production325UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssumedSizeSpec> ::= <xLowerBound> T_COLON T_ASTERISK  ;
     */
    public Object production326UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssumedSizeSpec> ::= <xExplicitShapeSpecList> T_COMMA T_ASTERISK  ;
     */
    public Object production327UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssumedSizeSpec> ::= <xExplicitShapeSpecList> T_COMMA <xLowerBound> T_COLON T_ASTERISK  ;
     */
    public Object production328UserAction(Object v1, Token v2, Object v3, Token v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIntentStmt> ::= T_INTENT T_LPAREN <xIntentSpec> T_RPAREN <xIntentParList> T_EOS  ;
     */
    public Object production329UserAction(Token v1, Token v2, Object v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIntentStmt> ::= T_INTENT T_LPAREN <xIntentSpec> T_RPAREN <xIntentStmt@7> <xIntentParList> T_EOS  ;
     */
    public Object production330UserAction(Token v1, Token v2, Object v3, Token v4, Token v5, Token v6, Object v7, Token v8)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIntentStmt> ::= <xLblDef> T_INTENT T_LPAREN <xIntentSpec> T_RPAREN <xIntentParList> T_EOS  ;
     */
    public Object production331UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Object v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIntentStmt> ::= <xLblDef> T_INTENT T_LPAREN <xIntentSpec> T_RPAREN <xIntentStmt@7> <xIntentParList> T_EOS  ;
     */
    public Object production332UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6, Token v7, Object v8, Token v9)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIntentParList> ::= <xIntentPar>  ;
     */
    public Object production333UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIntentParList> ::= <xIntentParList> T_COMMA <xIntentPar>  ;
     */
    public Object production334UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIntentPar> ::= <xDummyArgName>  ;
     */
    public Object production335UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOptionalStmt> ::= T_OPTIONAL <xOptionalParList> T_EOS  ;
     */
    public Object production336UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOptionalStmt> ::= T_OPTIONAL <xOptionalStmt@8> <xOptionalParList> T_EOS  ;
     */
    public Object production337UserAction(Token v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOptionalStmt> ::= <xLblDef> T_OPTIONAL <xOptionalParList> T_EOS  ;
     */
    public Object production338UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOptionalStmt> ::= <xLblDef> T_OPTIONAL <xOptionalStmt@8> <xOptionalParList> T_EOS  ;
     */
    public Object production339UserAction(Object v1, Token v2, Token v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOptionalParList> ::= <xOptionalPar>  ;
     */
    public Object production340UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOptionalParList> ::= <xOptionalParList> T_COMMA <xOptionalPar>  ;
     */
    public Object production341UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOptionalPar> ::= <xDummyArgName>  ;
     */
    public Object production342UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAccessStmt> ::= <xAccessSpec> <xAccessIdList> T_EOS  ;
     */
    public Object production343UserAction(Object v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAccessStmt> ::= <xAccessSpec> <xAccessStmt@9> <xAccessIdList> T_EOS  ;
     */
    public Object production344UserAction(Object v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAccessStmt> ::= <xLblDef> <xAccessSpec> <xAccessIdList> T_EOS  ;
     */
    public Object production345UserAction(Object v1, Object v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAccessStmt> ::= <xLblDef> <xAccessSpec> <xAccessStmt@9> <xAccessIdList> T_EOS  ;
     */
    public Object production346UserAction(Object v1, Object v2, Token v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAccessStmt> ::= <xAccessSpec> T_EOS  ;
     */
    public Object production347UserAction(Object v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAccessStmt> ::= <xLblDef> <xAccessSpec> T_EOS  ;
     */
    public Object production348UserAction(Object v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAccessIdList> ::= <xAccessId>  ;
     */
    public Object production349UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAccessIdList> ::= <xAccessIdList> T_COMMA <xAccessId>  ;
     */
    public Object production350UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAccessId> ::= <xGenericName>  ;
     */
    public Object production351UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAccessId> ::= <xGenericSpec>  ;
     */
    public Object production352UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSaveStmt> ::= T_SAVE T_EOS  ;
     */
    public Object production353UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSaveStmt> ::= <xLblDef> T_SAVE T_EOS  ;
     */
    public Object production354UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSaveStmt> ::= T_SAVE <xSavedEntityList> T_EOS  ;
     */
    public Object production355UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSaveStmt> ::= T_SAVE <xSaveStmt@10> <xSavedEntityList> T_EOS  ;
     */
    public Object production356UserAction(Token v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSaveStmt> ::= <xLblDef> T_SAVE <xSavedEntityList> T_EOS  ;
     */
    public Object production357UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSaveStmt> ::= <xLblDef> T_SAVE <xSaveStmt@10> <xSavedEntityList> T_EOS  ;
     */
    public Object production358UserAction(Object v1, Token v2, Token v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSavedEntityList> ::= <xSavedEntity>  ;
     */
    public Object production359UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSavedEntityList> ::= <xSavedEntityList> T_COMMA <xSavedEntity>  ;
     */
    public Object production360UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSavedEntity> ::= <xVariableName>  ;
     */
    public Object production361UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSavedEntity> ::= <xSavedCommonBlock>  ;
     */
    public Object production362UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSavedCommonBlock> ::= T_SLASH <xCommonBlockName> T_SLASH  ;
     */
    public Object production363UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDimensionStmt> ::= T_DIMENSION <xArrayDeclaratorList> T_EOS  ;
     */
    public Object production364UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDimensionStmt> ::= T_DIMENSION <xDimensionStmt@11> <xArrayDeclaratorList> T_EOS  ;
     */
    public Object production365UserAction(Token v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDimensionStmt> ::= <xLblDef> T_DIMENSION <xArrayDeclaratorList> T_EOS  ;
     */
    public Object production366UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDimensionStmt> ::= <xLblDef> T_DIMENSION <xDimensionStmt@11> <xArrayDeclaratorList> T_EOS  ;
     */
    public Object production367UserAction(Object v1, Token v2, Token v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xArrayDeclaratorList> ::= <xArrayDeclarator>  ;
     */
    public Object production368UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xArrayDeclaratorList> ::= <xArrayDeclaratorList> T_COMMA <xArrayDeclarator>  ;
     */
    public Object production369UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xArrayDeclarator> ::= <xVariableName> T_LPAREN <xArraySpec> T_RPAREN  ;
     */
    public Object production370UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAllocatableStmt> ::= T_ALLOCATABLE <xArrayAllocationList> T_EOS  ;
     */
    public Object production371UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAllocatableStmt> ::= T_ALLOCATABLE <xAllocatableStmt@12> <xArrayAllocationList> T_EOS  ;
     */
    public Object production372UserAction(Token v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAllocatableStmt> ::= <xLblDef> T_ALLOCATABLE <xArrayAllocationList> T_EOS  ;
     */
    public Object production373UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAllocatableStmt> ::= <xLblDef> T_ALLOCATABLE <xAllocatableStmt@12> <xArrayAllocationList> T_EOS  ;
     */
    public Object production374UserAction(Object v1, Token v2, Token v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xArrayAllocationList> ::= <xArrayAllocation>  ;
     */
    public Object production375UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xArrayAllocationList> ::= <xArrayAllocationList> T_COMMA <xArrayAllocation>  ;
     */
    public Object production376UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xArrayAllocation> ::= <xArrayName>  ;
     */
    public Object production377UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xArrayAllocation> ::= <xArrayName> T_LPAREN <xDeferredShapeSpecList> T_RPAREN  ;
     */
    public Object production378UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerStmt> ::= T_POINTER <xPointerStmtObjectList> T_EOS  ;
     */
    public Object production379UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerStmt> ::= T_POINTER <xPointerStmt@13> <xPointerStmtObjectList> T_EOS  ;
     */
    public Object production380UserAction(Token v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerStmt> ::= <xLblDef> T_POINTER <xPointerStmtObjectList> T_EOS  ;
     */
    public Object production381UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerStmt> ::= <xLblDef> T_POINTER <xPointerStmt@13> <xPointerStmtObjectList> T_EOS  ;
     */
    public Object production382UserAction(Object v1, Token v2, Token v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerStmtObjectList> ::= <xPointerStmtObject>  ;
     */
    public Object production383UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerStmtObjectList> ::= <xPointerStmtObjectList> T_COMMA <xPointerStmtObject>  ;
     */
    public Object production384UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerStmtObject> ::= <xPointerName>  ;
     */
    public Object production385UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerStmtObject> ::= <xPointerName> T_LPAREN <xDeferredShapeSpecList> T_RPAREN  ;
     */
    public Object production386UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerName> ::= T_IDENT  ;
     */
    public Object production387UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTargetStmt> ::= T_TARGET <xTargetObjectList> T_EOS  ;
     */
    public Object production388UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTargetStmt> ::= T_TARGET <xTargetStmt@14> <xTargetObjectList> T_EOS  ;
     */
    public Object production389UserAction(Token v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTargetStmt> ::= <xLblDef> T_TARGET <xTargetObjectList> T_EOS  ;
     */
    public Object production390UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTargetStmt> ::= <xLblDef> T_TARGET <xTargetStmt@14> <xTargetObjectList> T_EOS  ;
     */
    public Object production391UserAction(Object v1, Token v2, Token v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTargetObjectList> ::= <xTargetObject>  ;
     */
    public Object production392UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTargetObjectList> ::= <xTargetObjectList> T_COMMA <xTargetObject>  ;
     */
    public Object production393UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTargetObject> ::= <xTargetName>  ;
     */
    public Object production394UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTargetObject> ::= <xTargetName> T_LPAREN <xArraySpec> T_RPAREN  ;
     */
    public Object production395UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTargetName> ::= T_IDENT  ;
     */
    public Object production396UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xParameterStmt> ::= T_PARAMETER T_LPAREN <xNamedConstantDefList> T_RPAREN T_EOS  ;
     */
    public Object production397UserAction(Token v1, Token v2, Object v3, Token v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xParameterStmt> ::= <xLblDef> T_PARAMETER T_LPAREN <xNamedConstantDefList> T_RPAREN T_EOS  ;
     */
    public Object production398UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xNamedConstantDefList> ::= <xNamedConstantDef>  ;
     */
    public Object production399UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xNamedConstantDefList> ::= <xNamedConstantDefList> T_COMMA <xNamedConstantDef>  ;
     */
    public Object production400UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xNamedConstantDef> ::= <xNamedConstant> T_EQUALS <xExpr>  ;
     */
    public Object production401UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataStmt> ::= T_DATA <xDatalist> T_EOS  ;
     */
    public Object production402UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataStmt> ::= <xLblDef> T_DATA <xDatalist> T_EOS  ;
     */
    public Object production403UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDatalist> ::= <xDataStmtSet>  ;
     */
    public Object production404UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDatalist> ::= <xDatalist> <xDataStmtSet>  ;
     */
    public Object production405UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDatalist> ::= <xDatalist> T_COMMA <xDataStmtSet>  ;
     */
    public Object production406UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataStmtSet> ::= <xDataStmtObjectList> T_SLASH <xDataStmtValueList> T_SLASH  ;
     */
    public Object production407UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataStmtObjectList> ::= <xDataStmtObject>  ;
     */
    public Object production408UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataStmtObjectList> ::= <xDataStmtObjectList> T_COMMA <xDataStmtObject>  ;
     */
    public Object production409UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataStmtObject> ::= <xVariable>  ;
     */
    public Object production410UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataStmtObject> ::= <xDataImpliedDo>  ;
     */
    public Object production411UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataImpliedDo> ::= T_LPAREN <xDataIDoObjectList> T_COMMA <T_xImpliedDoVariable> T_EQUALS <xExpr> T_COMMA <xExpr> T_RPAREN  ;
     */
    public Object production412UserAction(Token v1, Object v2, Token v3, Object v4, Token v5, Object v6, Token v7, Object v8, Token v9)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataImpliedDo> ::= T_LPAREN <xDataIDoObjectList> T_COMMA <T_xImpliedDoVariable> T_EQUALS <xExpr> T_COMMA <xExpr> T_COMMA <xExpr> T_RPAREN  ;
     */
    public Object production413UserAction(Token v1, Object v2, Token v3, Object v4, Token v5, Object v6, Token v7, Object v8, Token v9, Object v10, Token v11)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataIDoObjectList> ::= <xDataIDoObject>  ;
     */
    public Object production414UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataIDoObjectList> ::= <xDataIDoObjectList> T_COMMA <xDataIDoObject>  ;
     */
    public Object production415UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataIDoObject> ::= <xArrayElement>  ;
     */
    public Object production416UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataIDoObject> ::= <xDataImpliedDo>  ;
     */
    public Object production417UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataIDoObject> ::= <xStructureComponent>  ;
     */
    public Object production418UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataStmtValueList> ::= <xDataStmtValue>  ;
     */
    public Object production419UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataStmtValueList> ::= <xDataStmtValueList> T_COMMA <xDataStmtValue>  ;
     */
    public Object production420UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataStmtValue> ::= <xDataStmtConstant>  ;
     */
    public Object production421UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataStmtValue> ::= T_ICON T_ASTERISK <xDataStmtConstant>  ;
     */
    public Object production422UserAction(Token v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataStmtValue> ::= <xNamedConstantUse> T_ASTERISK <xDataStmtConstant>  ;
     */
    public Object production423UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataStmtConstant> ::= <xConstant>  ;
     */
    public Object production424UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataStmtConstant> ::= T_NULL T_LPAREN T_RPAREN  ;
     */
    public Object production425UserAction(Token v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <T_xImplicitStmt> ::= T_IMPLICIT <T_xImplicitSpecList> T_EOS  ;
     */
    public Object production426UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <T_xImplicitStmt> ::= <xLblDef> T_IMPLICIT <T_xImplicitSpecList> T_EOS  ;
     */
    public Object production427UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <T_xImplicitStmt> ::= T_IMPLICIT T_NONE T_EOS  ;
     */
    public Object production428UserAction(Token v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <T_xImplicitStmt> ::= <xLblDef> T_IMPLICIT T_NONE T_EOS  ;
     */
    public Object production429UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <T_xImplicitSpecList> ::= <T_xImplicitSpec>  ;
     */
    public Object production430UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <T_xImplicitSpecList> ::= <T_xImplicitSpecList> T_COMMA <T_xImplicitSpec>  ;
     */
    public Object production431UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <T_xImplicitSpec> ::= <xTypeSpec> T_xImpl  ;
     */
    public Object production432UserAction(Object v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xNamelistStmt> ::= T_NAMELIST <xNamelistGroups> T_EOS  ;
     */
    public Object production433UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xNamelistStmt> ::= <xLblDef> T_NAMELIST <xNamelistGroups> T_EOS  ;
     */
    public Object production434UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xNamelistGroups> ::= T_SLASH <xNamelistGroupName> T_SLASH <xNamelistGroupObject>  ;
     */
    public Object production435UserAction(Token v1, Object v2, Token v3, Object v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xNamelistGroups> ::= <xNamelistGroups> T_SLASH <xNamelistGroupName> T_SLASH <xNamelistGroupObject>  ;
     */
    public Object production436UserAction(Object v1, Token v2, Object v3, Token v4, Object v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xNamelistGroups> ::= <xNamelistGroups> T_COMMA T_SLASH <xNamelistGroupName> T_SLASH <xNamelistGroupObject>  ;
     */
    public Object production437UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Object v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xNamelistGroups> ::= <xNamelistGroups> T_COMMA <xNamelistGroupObject>  ;
     */
    public Object production438UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xNamelistGroupObject> ::= <xVariableName>  ;
     */
    public Object production439UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEquivalenceStmt> ::= T_EQUIVALENCE <xEquivalenceSetList> T_EOS  ;
     */
    public Object production440UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEquivalenceStmt> ::= <xLblDef> T_EQUIVALENCE <xEquivalenceSetList> T_EOS  ;
     */
    public Object production441UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEquivalenceSetList> ::= <xEquivalenceSet>  ;
     */
    public Object production442UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEquivalenceSetList> ::= <xEquivalenceSetList> T_COMMA <xEquivalenceSet>  ;
     */
    public Object production443UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEquivalenceSet> ::= T_LPAREN <xEquivalenceObject> T_COMMA <xEquivalenceObjectList> T_RPAREN  ;
     */
    public Object production444UserAction(Token v1, Object v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEquivalenceObjectList> ::= <xEquivalenceObject>  ;
     */
    public Object production445UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEquivalenceObjectList> ::= <xEquivalenceObjectList> T_COMMA <xEquivalenceObject>  ;
     */
    public Object production446UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEquivalenceObject> ::= <xVariable>  ;
     */
    public Object production447UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCommonStmt> ::= T_COMMON <xComlist> T_EOS  ;
     */
    public Object production448UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCommonStmt> ::= <xLblDef> T_COMMON <xComlist> T_EOS  ;
     */
    public Object production449UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComlist> ::= <xCommonBlockObject>  ;
     */
    public Object production450UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComlist> ::= <xComblock> <xCommonBlockObject>  ;
     */
    public Object production451UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComlist> ::= <xComlist> T_COMMA <xCommonBlockObject>  ;
     */
    public Object production452UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComlist> ::= <xComlist> <xComblock> <xCommonBlockObject>  ;
     */
    public Object production453UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComlist> ::= <xComlist> T_COMMA <xComblock> <xCommonBlockObject>  ;
     */
    public Object production454UserAction(Object v1, Token v2, Object v3, Object v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComblock> ::= T_SLASH T_SLASH  ;
     */
    public Object production455UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComblock> ::= T_SLASH <xCommonBlockName> T_SLASH  ;
     */
    public Object production456UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCommonBlockObject> ::= <xVariableName>  ;
     */
    public Object production457UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCommonBlockObject> ::= <xArrayDeclarator>  ;
     */
    public Object production458UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xVariable> ::= <xDataRef>  ;
     */
    public Object production459UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xVariable> ::= <xDataRef> <xVariable@15>  ;
     */
    public Object production460UserAction(Object v1, Token v2, Object v3, Token v4, Object v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xVariable> ::= <xSubstrConst>  ;
     */
    public Object production461UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubstrConst> ::= T_SCON <xSubstringRange>  ;
     */
    public Object production462UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xVariableName> ::= T_IDENT  ;
     */
    public Object production463UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xScalarVariable> ::= <xVariableName>  ;
     */
    public Object production464UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xScalarVariable> ::= <xArrayElement>  ;
     */
    public Object production465UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubstringRange> ::= T_LPAREN <xSubscriptTriplet> T_RPAREN  ;
     */
    public Object production466UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataRef> ::= <xName>  ;
     */
    public Object production467UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataRef> ::= <xDataRef> T_PERCENT <xName>  ;
     */
    public Object production468UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDataRef> ::= <xDataRef> <xDataRef@17> T_PERCENT <xName>  ;
     */
    public Object production469UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFDataRef> ::= <xName> T_PERCENT <xName>  ;
     */
    public Object production470UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFDataRef> ::= <xName> T_LPAREN <xSectionSubscriptList> T_RPAREN  ;
     */
    public Object production471UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFDataRef> ::= <xSFDataRef> T_PERCENT <xName>  ;
     */
    public Object production472UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFDataRef> ::= <xSFDataRef> <xSFDataRef@18> T_PERCENT <xName>  ;
     */
    public Object production473UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xStructureComponent> ::= <xVariableName> <xFieldSelector>  ;
     */
    public Object production474UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xStructureComponent> ::= <xStructureComponent> <xFieldSelector>  ;
     */
    public Object production475UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFieldSelector> ::= T_LPAREN <xSectionSubscriptList> T_RPAREN T_PERCENT <xName>  ;
     */
    public Object production476UserAction(Token v1, Object v2, Token v3, Token v4, Object v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFieldSelector> ::= T_PERCENT <xName>  ;
     */
    public Object production477UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xArrayElement> ::= <xVariableName> T_LPAREN <xSectionSubscriptList> T_RPAREN  ;
     */
    public Object production478UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xArrayElement> ::= <xStructureComponent> T_LPAREN <xSectionSubscriptList> T_RPAREN  ;
     */
    public Object production479UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubscript> ::= <xExpr>  ;
     */
    public Object production480UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSectionSubscriptList> ::= <xSectionSubscript>  ;
     */
    public Object production481UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSectionSubscriptList> ::= <xSectionSubscriptList> T_COMMA <xSectionSubscript>  ;
     */
    public Object production482UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSectionSubscript> ::= <xExpr>  ;
     */
    public Object production483UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSectionSubscript> ::= <xSubscriptTriplet>  ;
     */
    public Object production484UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubscriptTriplet> ::= T_COLON  ;
     */
    public Object production485UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubscriptTriplet> ::= T_COLON <xExpr>  ;
     */
    public Object production486UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubscriptTriplet> ::= <xExpr> T_COLON  ;
     */
    public Object production487UserAction(Object v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubscriptTriplet> ::= <xExpr> T_COLON <xExpr>  ;
     */
    public Object production488UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubscriptTriplet> ::= <xExpr> T_COLON <xExpr> T_COLON <xExpr>  ;
     */
    public Object production489UserAction(Object v1, Token v2, Object v3, Token v4, Object v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubscriptTriplet> ::= <xExpr> T_COLON T_COLON <xExpr>  ;
     */
    public Object production490UserAction(Object v1, Token v2, Token v3, Object v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubscriptTriplet> ::= T_COLON <xExpr> T_COLON <xExpr>  ;
     */
    public Object production491UserAction(Token v1, Object v2, Token v3, Object v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubscriptTriplet> ::= T_COLON T_COLON <xExpr>  ;
     */
    public Object production492UserAction(Token v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAllocateStmt> ::= T_ALLOCATE T_LPAREN <xAllocationList> T_COMMA T_STATEQ <xVariable> T_RPAREN T_EOS  ;
     */
    public Object production493UserAction(Token v1, Token v2, Object v3, Token v4, Token v5, Object v6, Token v7, Token v8)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAllocateStmt> ::= <xLblDef> T_ALLOCATE T_LPAREN <xAllocationList> T_COMMA T_STATEQ <xVariable> T_RPAREN T_EOS  ;
     */
    public Object production494UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6, Object v7, Token v8, Token v9)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAllocateStmt> ::= T_ALLOCATE T_LPAREN <xAllocationList> T_RPAREN T_EOS  ;
     */
    public Object production495UserAction(Token v1, Token v2, Object v3, Token v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAllocateStmt> ::= <xLblDef> T_ALLOCATE T_LPAREN <xAllocationList> T_RPAREN T_EOS  ;
     */
    public Object production496UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAllocationList> ::= <xAllocation>  ;
     */
    public Object production497UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAllocationList> ::= <xAllocationList> T_COMMA <xAllocation>  ;
     */
    public Object production498UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAllocation> ::= <xAllocateObject>  ;
     */
    public Object production499UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAllocation> ::= <xAllocateObject> <xAllocatedShape>  ;
     */
    public Object production500UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAllocatedShape> ::= T_LPAREN <xSectionSubscriptList> T_RPAREN  ;
     */
    public Object production501UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAllocateObjectList> ::= <xAllocateObject>  ;
     */
    public Object production502UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAllocateObjectList> ::= <xAllocateObjectList> T_COMMA <xAllocateObject>  ;
     */
    public Object production503UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAllocateObject> ::= <xVariableName>  ;
     */
    public Object production504UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAllocateObject> ::= <xAllocateObject> <xFieldSelector>  ;
     */
    public Object production505UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xNullifyStmt> ::= T_NULLIFY T_LPAREN <xPointerObjectList> T_RPAREN T_EOS  ;
     */
    public Object production506UserAction(Token v1, Token v2, Object v3, Token v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xNullifyStmt> ::= <xLblDef> T_NULLIFY T_LPAREN <xPointerObjectList> T_RPAREN T_EOS  ;
     */
    public Object production507UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerObjectList> ::= <xPointerObject>  ;
     */
    public Object production508UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerObjectList> ::= <xPointerObjectList> T_COMMA <xPointerObject>  ;
     */
    public Object production509UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerObject> ::= <xName>  ;
     */
    public Object production510UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerObject> ::= <xPointerField>  ;
     */
    public Object production511UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerField> ::= <xName> T_LPAREN <xSFExprList> T_RPAREN T_PERCENT <xName>  ;
     */
    public Object production512UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerField> ::= <xName> T_LPAREN <xSFDummyArgNameList> T_RPAREN T_PERCENT <xName>  ;
     */
    public Object production513UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerField> ::= <xName> T_PERCENT <xName>  ;
     */
    public Object production514UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerField> ::= <xPointerField> <xFieldSelector>  ;
     */
    public Object production515UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDeallocateStmt> ::= T_DEALLOCATE T_LPAREN <xAllocateObjectList> T_COMMA T_STATEQ <xVariable> T_RPAREN T_EOS  ;
     */
    public Object production516UserAction(Token v1, Token v2, Object v3, Token v4, Token v5, Object v6, Token v7, Token v8)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDeallocateStmt> ::= <xLblDef> T_DEALLOCATE T_LPAREN <xAllocateObjectList> T_COMMA T_STATEQ <xVariable> T_RPAREN T_EOS  ;
     */
    public Object production517UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6, Object v7, Token v8, Token v9)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDeallocateStmt> ::= T_DEALLOCATE T_LPAREN <xAllocateObjectList> T_RPAREN T_EOS  ;
     */
    public Object production518UserAction(Token v1, Token v2, Object v3, Token v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDeallocateStmt> ::= <xLblDef> T_DEALLOCATE T_LPAREN <xAllocateObjectList> T_RPAREN T_EOS  ;
     */
    public Object production519UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrimary> ::= <xLogicalConstant>  ;
     */
    public Object production520UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrimary> ::= T_SCON  ;
     */
    public Object production521UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrimary> ::= <xUnsignedArithmeticConstant>  ;
     */
    public Object production522UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrimary> ::= <xArrayConstructor>  ;
     */
    public Object production523UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrimary> ::= <xName>  ;
     */
    public Object production524UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrimary> ::= <xName> <xPrimary@19>  ;
     */
    public Object production525UserAction(Object v1, Token v2, Object v3, Token v4, Object v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrimary> ::= <xName> T_PERCENT <xDataRef>  ;
     */
    public Object production526UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrimary> ::= <xName> T_PERCENT <xDataRef> <xPrimary@21>  ;
     */
    public Object production527UserAction(Object v1, Token v2, Object v3, Token v4, Object v5, Token v6, Object v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrimary> ::= <xName> T_LPAREN <xSectionSubscriptList> T_RPAREN T_PERCENT <xDataRef>  ;
     */
    public Object production528UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrimary> ::= <xName> T_LPAREN <xSectionSubscriptList> T_RPAREN T_PERCENT <xDataRef> <xPrimary@23>  ;
     */
    public Object production529UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6, Token v7, Object v8, Token v9, Object v10)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrimary> ::= <xFunctionReference>  ;
     */
    public Object production530UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrimary> ::= <xFunctionReference> <xPrimary@25>  ;
     */
    public Object production531UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrimary> ::= <xFunctionReference> T_PERCENT <xDataRef>  ;
     */
    public Object production532UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrimary> ::= <xFunctionReference> T_PERCENT <xDataRef> <xPrimary@26>  ;
     */
    public Object production533UserAction(Object v1, Token v2, Object v3, Token v4, Object v5, Token v6, Object v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrimary> ::= T_LPAREN <xExpr> T_RPAREN  ;
     */
    public Object production534UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrimary> ::= <xSubstrConst>  ;
     */
    public Object production535UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCPrimary> ::= <xCOperand>  ;
     */
    public Object production536UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCPrimary> ::= T_LPAREN <xCExpr> T_RPAREN  ;
     */
    public Object production537UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCOperand> ::= T_SCON  ;
     */
    public Object production538UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCOperand> ::= <xName>  ;
     */
    public Object production539UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCOperand> ::= <xName> <xCOperand@28>  ;
     */
    public Object production540UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCOperand> ::= <xName> T_PERCENT <xDataRef>  ;
     */
    public Object production541UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCOperand> ::= <xName> T_PERCENT <xDataRef> <xCOperand@30>  ;
     */
    public Object production542UserAction(Object v1, Token v2, Object v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCOperand> ::= <xName> <xCOperand@29> T_PERCENT <xDataRef>  ;
     */
    public Object production543UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCOperand> ::= <xName> <xCOperand@29> T_PERCENT <xDataRef> <xCOperand@30>  ;
     */
    public Object production544UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6, Token v7, Object v8, Token v9)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCOperand> ::= <xFunctionReference>  ;
     */
    public Object production545UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUFPrimary> ::= T_ICON  ;
     */
    public Object production546UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUFPrimary> ::= T_SCON  ;
     */
    public Object production547UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUFPrimary> ::= <xFunctionReference>  ;
     */
    public Object production548UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUFPrimary> ::= <xName>  ;
     */
    public Object production549UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUFPrimary> ::= <xName> <xUFPrimary@31>  ;
     */
    public Object production550UserAction(Object v1, Token v2, Object v3, Token v4, Object v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUFPrimary> ::= <xName> T_PERCENT <xDataRef>  ;
     */
    public Object production551UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUFPrimary> ::= <xName> T_PERCENT <xDataRef> <xUFPrimary@34>  ;
     */
    public Object production552UserAction(Object v1, Token v2, Object v3, Token v4, Object v5, Token v6, Object v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUFPrimary> ::= <xName> <xUFPrimary@33> T_PERCENT <xDataRef>  ;
     */
    public Object production553UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUFPrimary> ::= <xName> <xUFPrimary@33> T_PERCENT <xDataRef> <xUFPrimary@34>  ;
     */
    public Object production554UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6, Token v7, Object v8, Token v9, Object v10)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUFPrimary> ::= T_LPAREN <xUFExpr> T_RPAREN  ;
     */
    public Object production555UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLevel1Expr> ::= <xPrimary>  ;
     */
    public Object production556UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLevel1Expr> ::= <xDefinedUnaryOp> <xPrimary>  ;
     */
    public Object production557UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xMultOperand> ::= <xLevel1Expr>  ;
     */
    public Object production558UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xMultOperand> ::= <xLevel1Expr> <xMultOperand@36>  ;
     */
    public Object production559UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUFFactor> ::= <xUFPrimary>  ;
     */
    public Object production560UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUFFactor> ::= <xUFPrimary> <xUFFactor@37>  ;
     */
    public Object production561UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAddOperand> ::= <xMultOperand>  ;
     */
    public Object production562UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAddOperand> ::= <xAddOperand@38> <xMultOperand>  ;
     */
    public Object production563UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUFTerm> ::= <xUFFactor>  ;
     */
    public Object production564UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUFTerm> ::= <xUFTerm> <xMultOp> <xUFFactor>  ;
     */
    public Object production565UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUFTerm> ::= <xUFTerm> <xConcatOp> <xUFPrimary>  ;
     */
    public Object production566UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLevel2Expr> ::= <xAddOperand>  ;
     */
    public Object production567UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLevel2Expr> ::= <xLevel2Expr@39> <xAddOperand>  ;
     */
    public Object production568UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLevel2Expr> ::= <xSign> <xAddOperand>  ;
     */
    public Object production569UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUFExpr> ::= <xUFTerm>  ;
     */
    public Object production570UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUFExpr> ::= <xSign> <xUFTerm>  ;
     */
    public Object production571UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUFExpr> ::= <xUFExpr> <xAddOp> <xUFTerm>  ;
     */
    public Object production572UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLevel3Expr> ::= <xLevel2Expr>  ;
     */
    public Object production573UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLevel3Expr> ::= <xLevel3Expr@40> <xLevel2Expr>  ;
     */
    public Object production574UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCExpr> ::= <xCPrimary>  ;
     */
    public Object production575UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCExpr> ::= <xCExpr@41> <xCPrimary>  ;
     */
    public Object production576UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLevel4Expr> ::= <xLevel3Expr>  ;
     */
    public Object production577UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLevel4Expr> ::= <xLevel4Expr@42> <xLevel3Expr>  ;
     */
    public Object production578UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAndOperand> ::= <xLevel4Expr>  ;
     */
    public Object production579UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAndOperand> ::= <xAndOperand@43> <xLevel4Expr>  ;
     */
    public Object production580UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOrOperand> ::= <xAndOperand>  ;
     */
    public Object production581UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOrOperand> ::= <xOrOperand@44> <xAndOperand>  ;
     */
    public Object production582UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEquivOperand> ::= <xOrOperand>  ;
     */
    public Object production583UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEquivOperand> ::= <xEquivOperand@45> <xOrOperand>  ;
     */
    public Object production584UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLevel5Expr> ::= <xEquivOperand>  ;
     */
    public Object production585UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLevel5Expr> ::= <xLevel5Expr@46> <xEquivOperand>  ;
     */
    public Object production586UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExpr> ::= <xLevel5Expr>  ;
     */
    public Object production587UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExpr> ::= <xExpr> <xDefinedBinaryOp> <xLevel5Expr>  ;
     */
    public Object production588UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFExprList> ::= <xSFExpr> T_COLON <xExpr> T_COLON <xExpr>  ;
     */
    public Object production589UserAction(Object v1, Token v2, Object v3, Token v4, Object v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFExprList> ::= <xSFExpr> T_COLON T_COLON <xExpr>  ;
     */
    public Object production590UserAction(Object v1, Token v2, Token v3, Object v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFExprList> ::= T_COLON <xExpr> T_COLON <xExpr>  ;
     */
    public Object production591UserAction(Token v1, Object v2, Token v3, Object v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFExprList> ::= T_COLON T_COLON <xExpr>  ;
     */
    public Object production592UserAction(Token v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignmentStmt> ::= <xName> T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production593UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignmentStmt> ::= <xLblDef> <xName> T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production594UserAction(Object v1, Object v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignmentStmt> ::= <xName> T_LPAREN <xSFExprList> T_RPAREN T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production595UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignmentStmt> ::= <xLblDef> <xName> T_LPAREN <xSFExprList> T_RPAREN T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production596UserAction(Object v1, Object v2, Token v3, Object v4, Token v5, Token v6, Object v7, Token v8)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignmentStmt> ::= <xName> T_LPAREN <xSFExprList> T_RPAREN <xSubstringRange> T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production597UserAction(Object v1, Token v2, Object v3, Token v4, Object v5, Token v6, Object v7, Token v8)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignmentStmt> ::= <xLblDef> <xName> T_LPAREN <xSFExprList> T_RPAREN <xSubstringRange> T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production598UserAction(Object v1, Object v2, Token v3, Object v4, Token v5, Object v6, Token v7, Object v8, Token v9)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignmentStmt> ::= <xName> T_LPAREN <xSFDummyArgNameList> T_RPAREN <xSubstringRange> T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production599UserAction(Object v1, Token v2, Object v3, Token v4, Object v5, Token v6, Object v7, Token v8)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignmentStmt> ::= <xLblDef> <xName> T_LPAREN <xSFDummyArgNameList> T_RPAREN <xSubstringRange> T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production600UserAction(Object v1, Object v2, Token v3, Object v4, Token v5, Object v6, Token v7, Object v8, Token v9)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignmentStmt> ::= <xName> T_PERCENT <xDataRef> T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production601UserAction(Object v1, Token v2, Object v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignmentStmt> ::= <xName> T_PERCENT <xDataRef> <xAssignmentStmt@47> T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production602UserAction(Object v1, Token v2, Object v3, Token v4, Object v5, Token v6, Object v7, Token v8, Object v9, Token v10)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignmentStmt> ::= <xLblDef> <xName> T_PERCENT <xDataRef> T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production603UserAction(Object v1, Object v2, Token v3, Object v4, Token v5, Object v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignmentStmt> ::= <xLblDef> <xName> T_PERCENT <xDataRef> <xAssignmentStmt@47> T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production604UserAction(Object v1, Object v2, Token v3, Object v4, Token v5, Object v6, Token v7, Object v8, Token v9, Object v10, Token v11)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignmentStmt> ::= <xName> T_LPAREN <xSFExprList> T_RPAREN T_PERCENT <xDataRef> T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production605UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6, Token v7, Object v8, Token v9)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignmentStmt> ::= <xName> T_LPAREN <xSFExprList> T_RPAREN T_PERCENT <xDataRef> <xAssignmentStmt@49> T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production606UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6, Token v7, Object v8, Token v9, Object v10, Token v11, Object v12, Token v13)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignmentStmt> ::= <xLblDef> <xName> T_LPAREN <xSFExprList> T_RPAREN T_PERCENT <xDataRef> T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production607UserAction(Object v1, Object v2, Token v3, Object v4, Token v5, Token v6, Object v7, Token v8, Object v9, Token v10)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignmentStmt> ::= <xLblDef> <xName> T_LPAREN <xSFExprList> T_RPAREN T_PERCENT <xDataRef> <xAssignmentStmt@49> T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production608UserAction(Object v1, Object v2, Token v3, Object v4, Token v5, Token v6, Object v7, Token v8, Object v9, Token v10, Object v11, Token v12, Object v13, Token v14)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignmentStmt> ::= <xName> T_LPAREN <xSFDummyArgNameList> T_RPAREN T_PERCENT <xDataRef> T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production609UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6, Token v7, Object v8, Token v9)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignmentStmt> ::= <xName> T_LPAREN <xSFDummyArgNameList> T_RPAREN T_PERCENT <xDataRef> <xAssignmentStmt@51> T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production610UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6, Token v7, Object v8, Token v9, Object v10, Token v11, Object v12, Token v13)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignmentStmt> ::= <xLblDef> <xName> T_LPAREN <xSFDummyArgNameList> T_RPAREN T_PERCENT <xDataRef> T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production611UserAction(Object v1, Object v2, Token v3, Object v4, Token v5, Token v6, Object v7, Token v8, Object v9, Token v10)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignmentStmt> ::= <xLblDef> <xName> T_LPAREN <xSFDummyArgNameList> T_RPAREN T_PERCENT <xDataRef> <xAssignmentStmt@51> T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production612UserAction(Object v1, Object v2, Token v3, Object v4, Token v5, Token v6, Object v7, Token v8, Object v9, Token v10, Object v11, Token v12, Object v13, Token v14)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFExprList> ::= T_COLON  ;
     */
    public Object production613UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFExprList> ::= T_COLON <xExpr>  ;
     */
    public Object production614UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFExprList> ::= <xSFExpr>  ;
     */
    public Object production615UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFExprList> ::= <xSFExpr> T_COLON  ;
     */
    public Object production616UserAction(Object v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFExprList> ::= <xSFExpr> T_COLON <xExpr>  ;
     */
    public Object production617UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFExprList> ::= <xSFExprList> T_COMMA <xSectionSubscript>  ;
     */
    public Object production618UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFExprList> ::= <xSFDummyArgNameList> T_COMMA T_COLON  ;
     */
    public Object production619UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFExprList> ::= <xSFDummyArgNameList> T_COMMA T_COLON <xExpr>  ;
     */
    public Object production620UserAction(Object v1, Token v2, Token v3, Object v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFExprList> ::= <xSFDummyArgNameList> T_COMMA <xSFExpr>  ;
     */
    public Object production621UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFExprList> ::= <xSFDummyArgNameList> T_COMMA <xSFExpr> T_COLON  ;
     */
    public Object production622UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFExprList> ::= <xSFDummyArgNameList> T_COMMA <xSFExpr> T_COLON <xExpr>  ;
     */
    public Object production623UserAction(Object v1, Token v2, Object v3, Token v4, Object v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFExpr> ::= <xSFTerm>  ;
     */
    public Object production624UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFExpr> ::= <xSign> <xAddOperand>  ;
     */
    public Object production625UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFExpr> ::= <xSFExpr> <xAddOp> <xAddOperand>  ;
     */
    public Object production626UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFTerm> ::= <xSFFactor>  ;
     */
    public Object production627UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFTerm> ::= <xSFTerm> <xMultOp> <xMultOperand>  ;
     */
    public Object production628UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFFactor> ::= <xSFPrimary>  ;
     */
    public Object production629UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFFactor> ::= <xSFPrimary> <xPowerOp> <xMultOperand>  ;
     */
    public Object production630UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFPrimary> ::= <xArrayConstructor>  ;
     */
    public Object production631UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFPrimary> ::= T_ICON  ;
     */
    public Object production632UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFPrimary> ::= <xSFVarName>  ;
     */
    public Object production633UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFPrimary> ::= <xSFDataRef>  ;
     */
    public Object production634UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFPrimary> ::= <xFunctionReference>  ;
     */
    public Object production635UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFPrimary> ::= T_LPAREN <xExpr> T_RPAREN  ;
     */
    public Object production636UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerAssignmentStmt> ::= <xName> T_EQGREATERTHAN <xTarget> T_EOS  ;
     */
    public Object production637UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerAssignmentStmt> ::= <xLblDef> <xName> T_EQGREATERTHAN <xTarget> T_EOS  ;
     */
    public Object production638UserAction(Object v1, Object v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerAssignmentStmt> ::= <xName> T_PERCENT <xDataRef> T_EQGREATERTHAN <xTarget> T_EOS  ;
     */
    public Object production639UserAction(Object v1, Token v2, Object v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerAssignmentStmt> ::= <xLblDef> <xName> T_PERCENT <xDataRef> T_EQGREATERTHAN <xTarget> T_EOS  ;
     */
    public Object production640UserAction(Object v1, Object v2, Token v3, Object v4, Token v5, Object v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerAssignmentStmt> ::= <xName> T_LPAREN <xSFExprList> T_RPAREN T_PERCENT <xDataRef> T_EQGREATERTHAN <xTarget> T_EOS  ;
     */
    public Object production641UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6, Token v7, Object v8, Token v9)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerAssignmentStmt> ::= <xLblDef> <xName> T_LPAREN <xSFExprList> T_RPAREN T_PERCENT <xDataRef> T_EQGREATERTHAN <xTarget> T_EOS  ;
     */
    public Object production642UserAction(Object v1, Object v2, Token v3, Object v4, Token v5, Token v6, Object v7, Token v8, Object v9, Token v10)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerAssignmentStmt> ::= <xName> T_LPAREN <xSFDummyArgNameList> T_RPAREN T_PERCENT <xDataRef> T_EQGREATERTHAN <xTarget> T_EOS  ;
     */
    public Object production643UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Object v6, Token v7, Object v8, Token v9)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPointerAssignmentStmt> ::= <xLblDef> <xName> T_LPAREN <xSFDummyArgNameList> T_RPAREN T_PERCENT <xDataRef> T_EQGREATERTHAN <xTarget> T_EOS  ;
     */
    public Object production644UserAction(Object v1, Object v2, Token v3, Object v4, Token v5, Token v6, Object v7, Token v8, Object v9, Token v10)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTarget> ::= <xExpr>  ;
     */
    public Object production645UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWhereStmt> ::= T_WHERE T_LPAREN <xMaskExpr> T_RPAREN <xAssignmentStmt>  ;
     */
    public Object production646UserAction(Token v1, Token v2, Object v3, Token v4, Object v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWhereStmt> ::= <xLblDef> T_WHERE T_LPAREN <xMaskExpr> T_RPAREN <xAssignmentStmt>  ;
     */
    public Object production647UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Object v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWhereConstruct> ::= <xWhereConstructStmt> <xWhereRange>  ;
     */
    public Object production648UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWhereRange> ::= <xEndWhereStmt>  ;
     */
    public Object production649UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWhereRange> ::= <xWhereBodyConstructBlock> <xEndWhereStmt>  ;
     */
    public Object production650UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWhereRange> ::= <xMaskedElsewhereConstruct>  ;
     */
    public Object production651UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWhereRange> ::= <xWhereBodyConstructBlock> <xMaskedElsewhereConstruct>  ;
     */
    public Object production652UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWhereRange> ::= <xElsewhereConstruct>  ;
     */
    public Object production653UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWhereRange> ::= <xWhereBodyConstructBlock> <xElsewhereConstruct>  ;
     */
    public Object production654UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xMaskedElsewhereConstruct> ::= <xMaskedElsewhereStmt> <xWhereRange>  ;
     */
    public Object production655UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElsewhereConstruct> ::= <xElsewhereStmt> <xElsewherePart>  ;
     */
    public Object production656UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElsewherePart> ::= <xEndWhereStmt>  ;
     */
    public Object production657UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElsewherePart> ::= <xWhereBodyConstructBlock> <xEndWhereStmt>  ;
     */
    public Object production658UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWhereBodyConstructBlock> ::= <xWhereBodyConstruct>  ;
     */
    public Object production659UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWhereBodyConstructBlock> ::= <xWhereBodyConstructBlock> <xWhereBodyConstruct>  ;
     */
    public Object production660UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWhereConstructStmt> ::= <xName> T_COLON T_WHERE T_LPAREN <xMaskExpr> T_RPAREN T_EOS  ;
     */
    public Object production661UserAction(Object v1, Token v2, Token v3, Token v4, Object v5, Token v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWhereConstructStmt> ::= <xLblDef> <xName> T_COLON T_WHERE T_LPAREN <xMaskExpr> T_RPAREN T_EOS  ;
     */
    public Object production662UserAction(Object v1, Object v2, Token v3, Token v4, Token v5, Object v6, Token v7, Token v8)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWhereConstructStmt> ::= T_WHERE T_LPAREN <xMaskExpr> T_RPAREN T_EOS  ;
     */
    public Object production663UserAction(Token v1, Token v2, Object v3, Token v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWhereConstructStmt> ::= <xLblDef> T_WHERE T_LPAREN <xMaskExpr> T_RPAREN T_EOS  ;
     */
    public Object production664UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWhereBodyConstruct> ::= <xAssignmentStmt>  ;
     */
    public Object production665UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWhereBodyConstruct> ::= <xWhereStmt>  ;
     */
    public Object production666UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWhereBodyConstruct> ::= <xWhereConstruct>  ;
     */
    public Object production667UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xMaskExpr> ::= <xExpr>  ;
     */
    public Object production668UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xMaskedElsewhereStmt> ::= T_ELSEWHERE T_LPAREN <xMaskExpr> T_RPAREN T_EOS  ;
     */
    public Object production669UserAction(Token v1, Token v2, Object v3, Token v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xMaskedElsewhereStmt> ::= T_ELSEWHERE T_LPAREN <xMaskExpr> T_RPAREN <xMaskedElsewhereStmt@53> T_EOS  ;
     */
    public Object production670UserAction(Token v1, Token v2, Object v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xMaskedElsewhereStmt> ::= <xLblDef> T_ELSEWHERE T_LPAREN <xMaskExpr> T_RPAREN T_EOS  ;
     */
    public Object production671UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xMaskedElsewhereStmt> ::= <xLblDef> T_ELSEWHERE T_LPAREN <xMaskExpr> T_RPAREN <xMaskedElsewhereStmt@53> T_EOS  ;
     */
    public Object production672UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Object v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElsewhereStmt> ::= T_ELSEWHERE T_EOS  ;
     */
    public Object production673UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElsewhereStmt> ::= T_ELSEWHERE <xElsewhereStmt@54> T_EOS  ;
     */
    public Object production674UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElsewhereStmt> ::= <xLblDef> T_ELSEWHERE T_EOS  ;
     */
    public Object production675UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElsewhereStmt> ::= <xLblDef> T_ELSEWHERE <xElsewhereStmt@54> T_EOS  ;
     */
    public Object production676UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndWhereStmt> ::= T_ENDWHERE T_EOS  ;
     */
    public Object production677UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndWhereStmt> ::= T_ENDWHERE <xEndWhereStmt@55> T_EOS  ;
     */
    public Object production678UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndWhereStmt> ::= <xLblDef> T_ENDWHERE T_EOS  ;
     */
    public Object production679UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndWhereStmt> ::= <xLblDef> T_ENDWHERE <xEndWhereStmt@55> T_EOS  ;
     */
    public Object production680UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndWhereStmt> ::= T_END T_WHERE T_EOS  ;
     */
    public Object production681UserAction(Token v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndWhereStmt> ::= T_END T_WHERE <xEndWhereStmt@56> T_EOS  ;
     */
    public Object production682UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndWhereStmt> ::= <xLblDef> T_END T_WHERE T_EOS  ;
     */
    public Object production683UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndWhereStmt> ::= <xLblDef> T_END T_WHERE <xEndWhereStmt@56> T_EOS  ;
     */
    public Object production684UserAction(Object v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallConstruct> ::= <xForallConstructStmt> <xEndForallStmt>  ;
     */
    public Object production685UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallConstruct> ::= <xForallConstructStmt> <xForallBody> <xEndForallStmt>  ;
     */
    public Object production686UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallBody> ::= <xForallBodyConstruct>  ;
     */
    public Object production687UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallBody> ::= <xForallBody> <xForallBodyConstruct>  ;
     */
    public Object production688UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallConstructStmt> ::= T_FORALL <xForallHeader> T_EOS  ;
     */
    public Object production689UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallConstructStmt> ::= <xLblDef> T_FORALL <xForallHeader> T_EOS  ;
     */
    public Object production690UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallConstructStmt> ::= <xName> T_COLON T_FORALL <xForallHeader> T_EOS  ;
     */
    public Object production691UserAction(Object v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallConstructStmt> ::= <xLblDef> <xName> T_COLON T_FORALL <xForallHeader> T_EOS  ;
     */
    public Object production692UserAction(Object v1, Object v2, Token v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallHeader> ::= T_LPAREN <xForallTripletSpecList> T_RPAREN  ;
     */
    public Object production693UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallHeader> ::= T_LPAREN <xForallTripletSpecList> T_COMMA <xScalarMaskExpr> T_RPAREN  ;
     */
    public Object production694UserAction(Token v1, Object v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xScalarMaskExpr> ::= <xMaskExpr>  ;
     */
    public Object production695UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallTripletSpecList> ::= <xName> T_EQUALS <xSubscript> T_COLON <xSubscript>  ;
     */
    public Object production696UserAction(Object v1, Token v2, Object v3, Token v4, Object v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallTripletSpecList> ::= <xName> T_EQUALS <xSubscript> T_COLON <xSubscript> T_COLON <xExpr>  ;
     */
    public Object production697UserAction(Object v1, Token v2, Object v3, Token v4, Object v5, Token v6, Object v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallBodyConstruct> ::= <xAssignmentStmt>  ;
     */
    public Object production698UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallBodyConstruct> ::= <xPointerAssignmentStmt>  ;
     */
    public Object production699UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallBodyConstruct> ::= <xWhereStmt>  ;
     */
    public Object production700UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallBodyConstruct> ::= <xWhereConstruct>  ;
     */
    public Object production701UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallBodyConstruct> ::= <xForallConstruct>  ;
     */
    public Object production702UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallBodyConstruct> ::= <xForallStmt>  ;
     */
    public Object production703UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndForallStmt> ::= T_END T_FORALL T_EOS  ;
     */
    public Object production704UserAction(Token v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndForallStmt> ::= T_END T_FORALL <xEndForallStmt@57> T_EOS  ;
     */
    public Object production705UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndForallStmt> ::= <xLblDef> T_END T_FORALL T_EOS  ;
     */
    public Object production706UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndForallStmt> ::= <xLblDef> T_END T_FORALL <xEndForallStmt@57> T_EOS  ;
     */
    public Object production707UserAction(Object v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndForallStmt> ::= T_ENDFORALL T_EOS  ;
     */
    public Object production708UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndForallStmt> ::= T_ENDFORALL <xEndForallStmt@58> T_EOS  ;
     */
    public Object production709UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndForallStmt> ::= <xLblDef> T_ENDFORALL T_EOS  ;
     */
    public Object production710UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndForallStmt> ::= <xLblDef> T_ENDFORALL <xEndForallStmt@58> T_EOS  ;
     */
    public Object production711UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallStmt> ::= T_FORALL <xForallHeader> <xAssignmentStmt> T_EOS  ;
     */
    public Object production712UserAction(Token v1, Object v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallStmt> ::= <xLblDef> T_FORALL <xForallHeader> <xAssignmentStmt> T_EOS  ;
     */
    public Object production713UserAction(Object v1, Token v2, Object v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallStmt> ::= T_FORALL <xForallHeader> <xPointerAssignmentStmt> T_EOS  ;
     */
    public Object production714UserAction(Token v1, Object v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xForallStmt> ::= <xLblDef> T_FORALL <xForallHeader> <xPointerAssignmentStmt> T_EOS  ;
     */
    public Object production715UserAction(Object v1, Token v2, Object v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIfConstruct> ::= <xIfThenStmt> <xThenPart>  ;
     */
    public Object production716UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xThenPart> ::= <xEndIfStmt>  ;
     */
    public Object production717UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xThenPart> ::= <xConditionalBody> <xEndIfStmt>  ;
     */
    public Object production718UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xThenPart> ::= <xElseIfConstruct>  ;
     */
    public Object production719UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xThenPart> ::= <xConditionalBody> <xElseIfConstruct>  ;
     */
    public Object production720UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xThenPart> ::= <xElseConstruct>  ;
     */
    public Object production721UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xThenPart> ::= <xConditionalBody> <xElseConstruct>  ;
     */
    public Object production722UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElseIfConstruct> ::= <xElseIfStmt> <xThenPart>  ;
     */
    public Object production723UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElseConstruct> ::= <xElseStmt> <xElsePart>  ;
     */
    public Object production724UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElsePart> ::= <xEndIfStmt>  ;
     */
    public Object production725UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElsePart> ::= <xConditionalBody> <xEndIfStmt>  ;
     */
    public Object production726UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConditionalBody> ::= <xExecutionPartConstruct>  ;
     */
    public Object production727UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConditionalBody> ::= <xConditionalBody> <xExecutionPartConstruct>  ;
     */
    public Object production728UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIfThenStmt> ::= T_IF T_LPAREN <xExpr> T_RPAREN T_THEN T_EOS  ;
     */
    public Object production729UserAction(Token v1, Token v2, Object v3, Token v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIfThenStmt> ::= <xLblDef> T_IF T_LPAREN <xExpr> T_RPAREN T_THEN T_EOS  ;
     */
    public Object production730UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIfThenStmt> ::= <xName> T_COLON T_IF T_LPAREN <xExpr> T_RPAREN T_THEN T_EOS  ;
     */
    public Object production731UserAction(Object v1, Token v2, Token v3, Token v4, Object v5, Token v6, Token v7, Token v8)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIfThenStmt> ::= <xLblDef> <xName> T_COLON T_IF T_LPAREN <xExpr> T_RPAREN T_THEN T_EOS  ;
     */
    public Object production732UserAction(Object v1, Object v2, Token v3, Token v4, Token v5, Object v6, Token v7, Token v8, Token v9)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElseIfStmt> ::= T_ELSEIF T_LPAREN <xExpr> T_RPAREN T_THEN T_EOS  ;
     */
    public Object production733UserAction(Token v1, Token v2, Object v3, Token v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElseIfStmt> ::= <xLblDef> T_ELSEIF T_LPAREN <xExpr> T_RPAREN T_THEN T_EOS  ;
     */
    public Object production734UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElseIfStmt> ::= T_ELSEIF T_LPAREN <xExpr> T_RPAREN T_THEN <xEndName> T_EOS  ;
     */
    public Object production735UserAction(Token v1, Token v2, Object v3, Token v4, Token v5, Object v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElseIfStmt> ::= <xLblDef> T_ELSEIF T_LPAREN <xExpr> T_RPAREN T_THEN <xEndName> T_EOS  ;
     */
    public Object production736UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6, Object v7, Token v8)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElseIfStmt> ::= T_ELSE T_IF T_LPAREN <xExpr> T_RPAREN T_THEN T_EOS  ;
     */
    public Object production737UserAction(Token v1, Token v2, Token v3, Object v4, Token v5, Token v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElseIfStmt> ::= <xLblDef> T_ELSE T_IF T_LPAREN <xExpr> T_RPAREN T_THEN T_EOS  ;
     */
    public Object production738UserAction(Object v1, Token v2, Token v3, Token v4, Object v5, Token v6, Token v7, Token v8)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElseIfStmt> ::= T_ELSE T_IF T_LPAREN <xExpr> T_RPAREN T_THEN <xEndName> T_EOS  ;
     */
    public Object production739UserAction(Token v1, Token v2, Token v3, Object v4, Token v5, Token v6, Object v7, Token v8)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElseIfStmt> ::= <xLblDef> T_ELSE T_IF T_LPAREN <xExpr> T_RPAREN T_THEN <xEndName> T_EOS  ;
     */
    public Object production740UserAction(Object v1, Token v2, Token v3, Token v4, Object v5, Token v6, Token v7, Object v8, Token v9)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElseStmt> ::= T_ELSE T_EOS  ;
     */
    public Object production741UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElseStmt> ::= <xLblDef> T_ELSE T_EOS  ;
     */
    public Object production742UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElseStmt> ::= T_ELSE <xEndName> T_EOS  ;
     */
    public Object production743UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xElseStmt> ::= <xLblDef> T_ELSE <xEndName> T_EOS  ;
     */
    public Object production744UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndIfStmt> ::= T_ENDIF T_EOS  ;
     */
    public Object production745UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndIfStmt> ::= T_ENDIF <xEndIfStmt@59> T_EOS  ;
     */
    public Object production746UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndIfStmt> ::= <xLblDef> T_ENDIF T_EOS  ;
     */
    public Object production747UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndIfStmt> ::= <xLblDef> T_ENDIF <xEndIfStmt@59> T_EOS  ;
     */
    public Object production748UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndIfStmt> ::= T_END T_IF T_EOS  ;
     */
    public Object production749UserAction(Token v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndIfStmt> ::= T_END T_IF <xEndIfStmt@60> T_EOS  ;
     */
    public Object production750UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndIfStmt> ::= <xLblDef> T_END T_IF T_EOS  ;
     */
    public Object production751UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndIfStmt> ::= <xLblDef> T_END T_IF <xEndIfStmt@60> T_EOS  ;
     */
    public Object production752UserAction(Object v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIfStmt> ::= T_IF T_LPAREN <xExpr> T_RPAREN <xActionStmt>  ;
     */
    public Object production753UserAction(Token v1, Token v2, Object v3, Token v4, Object v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIfStmt> ::= <xLblDef> T_IF T_LPAREN <xExpr> T_RPAREN <xActionStmt>  ;
     */
    public Object production754UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Object v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCaseConstruct> ::= <xSelectCaseStmt> <xSelectCaseRange>  ;
     */
    public Object production755UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSelectCaseRange> ::= <xSelectCaseBody> <xEndSelectStmt>  ;
     */
    public Object production756UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSelectCaseRange> ::= <xEndSelectStmt>  ;
     */
    public Object production757UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSelectCaseBody> ::= <xCaseStmt>  ;
     */
    public Object production758UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSelectCaseBody> ::= <xSelectCaseBody> <xCaseBodyConstruct>  ;
     */
    public Object production759UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCaseBodyConstruct> ::= <xCaseStmt>  ;
     */
    public Object production760UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCaseBodyConstruct> ::= <xExecutionPartConstruct>  ;
     */
    public Object production761UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSelectCaseStmt> ::= <xName> T_COLON T_SELECTCASE T_LPAREN <xExpr> T_RPAREN T_EOS  ;
     */
    public Object production762UserAction(Object v1, Token v2, Token v3, Token v4, Object v5, Token v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSelectCaseStmt> ::= <xLblDef> <xName> T_COLON T_SELECTCASE T_LPAREN <xExpr> T_RPAREN T_EOS  ;
     */
    public Object production763UserAction(Object v1, Object v2, Token v3, Token v4, Token v5, Object v6, Token v7, Token v8)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSelectCaseStmt> ::= T_SELECTCASE T_LPAREN <xExpr> T_RPAREN T_EOS  ;
     */
    public Object production764UserAction(Token v1, Token v2, Object v3, Token v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSelectCaseStmt> ::= <xLblDef> T_SELECTCASE T_LPAREN <xExpr> T_RPAREN T_EOS  ;
     */
    public Object production765UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSelectCaseStmt> ::= <xName> T_COLON T_SELECT T_CASE T_LPAREN <xExpr> T_RPAREN T_EOS  ;
     */
    public Object production766UserAction(Object v1, Token v2, Token v3, Token v4, Token v5, Object v6, Token v7, Token v8)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSelectCaseStmt> ::= <xLblDef> <xName> T_COLON T_SELECT T_CASE T_LPAREN <xExpr> T_RPAREN T_EOS  ;
     */
    public Object production767UserAction(Object v1, Object v2, Token v3, Token v4, Token v5, Token v6, Object v7, Token v8, Token v9)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSelectCaseStmt> ::= T_SELECT T_CASE T_LPAREN <xExpr> T_RPAREN T_EOS  ;
     */
    public Object production768UserAction(Token v1, Token v2, Token v3, Object v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSelectCaseStmt> ::= <xLblDef> T_SELECT T_CASE T_LPAREN <xExpr> T_RPAREN T_EOS  ;
     */
    public Object production769UserAction(Object v1, Token v2, Token v3, Token v4, Object v5, Token v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCaseStmt> ::= T_CASE <xCaseSelector> T_EOS  ;
     */
    public Object production770UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCaseStmt> ::= <xLblDef> T_CASE <xCaseSelector> T_EOS  ;
     */
    public Object production771UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCaseStmt> ::= T_CASE <xCaseSelector> <xName> T_EOS  ;
     */
    public Object production772UserAction(Token v1, Object v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCaseStmt> ::= <xLblDef> T_CASE <xCaseSelector> <xName> T_EOS  ;
     */
    public Object production773UserAction(Object v1, Token v2, Object v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndSelectStmt> ::= T_ENDSELECT T_EOS  ;
     */
    public Object production774UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndSelectStmt> ::= T_ENDSELECT <xEndSelectStmt@61> T_EOS  ;
     */
    public Object production775UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndSelectStmt> ::= <xLblDef> T_ENDSELECT T_EOS  ;
     */
    public Object production776UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndSelectStmt> ::= <xLblDef> T_ENDSELECT <xEndSelectStmt@61> T_EOS  ;
     */
    public Object production777UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndSelectStmt> ::= T_END T_SELECT T_EOS  ;
     */
    public Object production778UserAction(Token v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndSelectStmt> ::= T_END T_SELECT <xEndSelectStmt@62> T_EOS  ;
     */
    public Object production779UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndSelectStmt> ::= <xLblDef> T_END T_SELECT T_EOS  ;
     */
    public Object production780UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndSelectStmt> ::= <xLblDef> T_END T_SELECT <xEndSelectStmt@62> T_EOS  ;
     */
    public Object production781UserAction(Object v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCaseSelector> ::= T_LPAREN <xCaseValueRangeList> T_RPAREN  ;
     */
    public Object production782UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCaseSelector> ::= T_DEFAULT  ;
     */
    public Object production783UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCaseValueRangeList> ::= <xCaseValueRange>  ;
     */
    public Object production784UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCaseValueRangeList> ::= <xCaseValueRangeList> T_COMMA <xCaseValueRange>  ;
     */
    public Object production785UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCaseValueRange> ::= <xExpr>  ;
     */
    public Object production786UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCaseValueRange> ::= <xExpr> T_COLON  ;
     */
    public Object production787UserAction(Object v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCaseValueRange> ::= T_COLON <xExpr>  ;
     */
    public Object production788UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCaseValueRange> ::= <xExpr> T_COLON <xExpr>  ;
     */
    public Object production789UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDoConstruct> ::= <xBlockDoConstruct>  ;
     */
    public Object production790UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBlockDoConstruct> ::= <xLabelDoStmt>  ;
     */
    public Object production791UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLabelDoStmt> ::= T_DO <xLblRef> <xCommaLoopControl> T_EOS  ;
     */
    public Object production792UserAction(Token v1, Object v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLabelDoStmt> ::= <xLblDef> T_DO <xLblRef> <xCommaLoopControl> T_EOS  ;
     */
    public Object production793UserAction(Object v1, Token v2, Object v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLabelDoStmt> ::= T_DO <xLblRef> T_EOS  ;
     */
    public Object production794UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLabelDoStmt> ::= <xLblDef> T_DO <xLblRef> T_EOS  ;
     */
    public Object production795UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLabelDoStmt> ::= T_DO <xCommaLoopControl> T_EOS  ;
     */
    public Object production796UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLabelDoStmt> ::= <xLblDef> T_DO <xCommaLoopControl> T_EOS  ;
     */
    public Object production797UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLabelDoStmt> ::= T_DO T_EOS  ;
     */
    public Object production798UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLabelDoStmt> ::= <xLblDef> T_DO T_EOS  ;
     */
    public Object production799UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLabelDoStmt> ::= <xName> T_COLON T_DO <xLblRef> <xCommaLoopControl> T_EOS  ;
     */
    public Object production800UserAction(Object v1, Token v2, Token v3, Object v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLabelDoStmt> ::= <xLblDef> <xName> T_COLON T_DO <xLblRef> <xCommaLoopControl> T_EOS  ;
     */
    public Object production801UserAction(Object v1, Object v2, Token v3, Token v4, Object v5, Object v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLabelDoStmt> ::= <xName> T_COLON T_DO <xLblRef> T_EOS  ;
     */
    public Object production802UserAction(Object v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLabelDoStmt> ::= <xLblDef> <xName> T_COLON T_DO <xLblRef> T_EOS  ;
     */
    public Object production803UserAction(Object v1, Object v2, Token v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLabelDoStmt> ::= <xName> T_COLON T_DO <xCommaLoopControl> T_EOS  ;
     */
    public Object production804UserAction(Object v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLabelDoStmt> ::= <xLblDef> <xName> T_COLON T_DO <xCommaLoopControl> T_EOS  ;
     */
    public Object production805UserAction(Object v1, Object v2, Token v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLabelDoStmt> ::= <xName> T_COLON T_DO T_EOS  ;
     */
    public Object production806UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLabelDoStmt> ::= <xLblDef> <xName> T_COLON T_DO T_EOS  ;
     */
    public Object production807UserAction(Object v1, Object v2, Token v3, Token v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCommaLoopControl> ::= T_COMMA <xLoopControl>  ;
     */
    public Object production808UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCommaLoopControl> ::= <xLoopControl>  ;
     */
    public Object production809UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLoopControl> ::= <xVariableName> T_EQUALS <xExpr> T_COMMA <xExpr>  ;
     */
    public Object production810UserAction(Object v1, Token v2, Object v3, Token v4, Object v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLoopControl> ::= <xVariableName> T_EQUALS <xExpr> T_COMMA <xExpr> T_COMMA <xExpr>  ;
     */
    public Object production811UserAction(Object v1, Token v2, Object v3, Token v4, Object v5, Token v6, Object v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLoopControl> ::= T_WHILE T_LPAREN <xExpr> T_RPAREN  ;
     */
    public Object production812UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndDoStmt> ::= T_ENDDO T_EOS  ;
     */
    public Object production813UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndDoStmt> ::= T_ENDDO <xEndDoStmt@63> T_EOS  ;
     */
    public Object production814UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndDoStmt> ::= <xLblDef> T_ENDDO T_EOS  ;
     */
    public Object production815UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndDoStmt> ::= <xLblDef> T_ENDDO <xEndDoStmt@63> T_EOS  ;
     */
    public Object production816UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndDoStmt> ::= T_END T_DO T_EOS  ;
     */
    public Object production817UserAction(Token v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndDoStmt> ::= T_END T_DO <xEndDoStmt@64> T_EOS  ;
     */
    public Object production818UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndDoStmt> ::= <xLblDef> T_END T_DO T_EOS  ;
     */
    public Object production819UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndDoStmt> ::= <xLblDef> T_END T_DO <xEndDoStmt@64> T_EOS  ;
     */
    public Object production820UserAction(Object v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCycleStmt> ::= T_CYCLE T_EOS  ;
     */
    public Object production821UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCycleStmt> ::= T_CYCLE <xCycleStmt@65> T_EOS  ;
     */
    public Object production822UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCycleStmt> ::= <xLblDef> T_CYCLE T_EOS  ;
     */
    public Object production823UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCycleStmt> ::= <xLblDef> T_CYCLE <xCycleStmt@65> T_EOS  ;
     */
    public Object production824UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExitStmt> ::= T_EXIT T_EOS  ;
     */
    public Object production825UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExitStmt> ::= T_EXIT <xExitStmt@66> T_EOS  ;
     */
    public Object production826UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExitStmt> ::= <xLblDef> T_EXIT T_EOS  ;
     */
    public Object production827UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExitStmt> ::= <xLblDef> T_EXIT <xExitStmt@66> T_EOS  ;
     */
    public Object production828UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xGotoStmt> ::= <GoToKw> <xLblRef> T_EOS  ;
     */
    public Object production829UserAction(Object v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xGotoStmt> ::= <xLblDef> <GoToKw> <xLblRef> T_EOS  ;
     */
    public Object production830UserAction(Object v1, Object v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <GoToKw> ::= T_GOTO  ;
     */
    public Object production831UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <GoToKw> ::= T_GO T_TO  ;
     */
    public Object production832UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComputedGotoStmt> ::= <GoToKw> T_LPAREN <xLblRefList> T_RPAREN <xExpr> T_EOS  ;
     */
    public Object production833UserAction(Object v1, Token v2, Object v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComputedGotoStmt> ::= <xLblDef> <GoToKw> T_LPAREN <xLblRefList> T_RPAREN <xExpr> T_EOS  ;
     */
    public Object production834UserAction(Object v1, Object v2, Token v3, Object v4, Token v5, Object v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComputedGotoStmt> ::= <GoToKw> T_LPAREN <xLblRefList> T_RPAREN <xCommaExp> T_EOS  ;
     */
    public Object production835UserAction(Object v1, Token v2, Object v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComputedGotoStmt> ::= <xLblDef> <GoToKw> T_LPAREN <xLblRefList> T_RPAREN <xCommaExp> T_EOS  ;
     */
    public Object production836UserAction(Object v1, Object v2, Token v3, Object v4, Token v5, Object v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCommaExp> ::= T_COMMA <xExpr>  ;
     */
    public Object production837UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLblRefList> ::= <xLblRef>  ;
     */
    public Object production838UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLblRefList> ::= <xLblRefList> T_COMMA <xLblRef>  ;
     */
    public Object production839UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLblRef> ::= <xLabel>  ;
     */
    public Object production840UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xArithmeticIfStmt> ::= T_IF T_LPAREN <xExpr> T_RPAREN <xLblRef> T_COMMA <xLblRef> T_COMMA <xLblRef> T_EOS  ;
     */
    public Object production841UserAction(Token v1, Token v2, Object v3, Token v4, Object v5, Token v6, Object v7, Token v8, Object v9, Token v10)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xArithmeticIfStmt> ::= <xLblDef> T_IF T_LPAREN <xExpr> T_RPAREN <xLblRef> T_COMMA <xLblRef> T_COMMA <xLblRef> T_EOS  ;
     */
    public Object production842UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Object v6, Token v7, Object v8, Token v9, Object v10, Token v11)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xContinueStmt> ::= T_CONTINUE T_EOS  ;
     */
    public Object production843UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xContinueStmt> ::= <xLblDef> T_CONTINUE T_EOS  ;
     */
    public Object production844UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xStopStmt> ::= T_STOP T_EOS  ;
     */
    public Object production845UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xStopStmt> ::= <xLblDef> T_STOP T_EOS  ;
     */
    public Object production846UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xStopStmt> ::= T_STOP T_ICON T_EOS  ;
     */
    public Object production847UserAction(Token v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xStopStmt> ::= <xLblDef> T_STOP T_ICON T_EOS  ;
     */
    public Object production848UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xStopStmt> ::= T_STOP T_SCON T_EOS  ;
     */
    public Object production849UserAction(Token v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xStopStmt> ::= <xLblDef> T_STOP T_SCON T_EOS  ;
     */
    public Object production850UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUnitIdentifier> ::= <xUFExpr>  ;
     */
    public Object production851UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUnitIdentifier> ::= T_ASTERISK  ;
     */
    public Object production852UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOpenStmt> ::= T_OPEN T_LPAREN <xConnectSpecList> T_RPAREN T_EOS  ;
     */
    public Object production853UserAction(Token v1, Token v2, Object v3, Token v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOpenStmt> ::= <xLblDef> T_OPEN T_LPAREN <xConnectSpecList> T_RPAREN T_EOS  ;
     */
    public Object production854UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConnectSpecList> ::= <xUnitIdentifier>  ;
     */
    public Object production855UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConnectSpecList> ::= <xConnectSpec>  ;
     */
    public Object production856UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConnectSpecList> ::= <xConnectSpecList> T_COMMA <xConnectSpec>  ;
     */
    public Object production857UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConnectSpec> ::= T_UNITEQ <xUnitIdentifier>  ;
     */
    public Object production858UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConnectSpec> ::= T_ERREQ <xLblRef>  ;
     */
    public Object production859UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConnectSpec> ::= T_FILEEQ <xCExpr>  ;
     */
    public Object production860UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConnectSpec> ::= T_STATUSEQ <xCExpr>  ;
     */
    public Object production861UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConnectSpec> ::= T_ACCESSEQ <xCExpr>  ;
     */
    public Object production862UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConnectSpec> ::= T_FORMEQ <xCExpr>  ;
     */
    public Object production863UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConnectSpec> ::= T_RECLEQ <xExpr>  ;
     */
    public Object production864UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConnectSpec> ::= T_BLANKEQ <xCExpr>  ;
     */
    public Object production865UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConnectSpec> ::= T_IOSTATEQ <xScalarVariable>  ;
     */
    public Object production866UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConnectSpec> ::= T_POSITIONEQ <xCExpr>  ;
     */
    public Object production867UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConnectSpec> ::= T_ACTIONEQ <xCExpr>  ;
     */
    public Object production868UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConnectSpec> ::= T_DELIMEQ <xCExpr>  ;
     */
    public Object production869UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xConnectSpec> ::= T_PADEQ <xCExpr>  ;
     */
    public Object production870UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCloseStmt> ::= T_CLOSE T_LPAREN <xCloseSpecList> T_RPAREN T_EOS  ;
     */
    public Object production871UserAction(Token v1, Token v2, Object v3, Token v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCloseStmt> ::= <xLblDef> T_CLOSE T_LPAREN <xCloseSpecList> T_RPAREN T_EOS  ;
     */
    public Object production872UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCloseSpecList> ::= <xUnitIdentifier>  ;
     */
    public Object production873UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCloseSpecList> ::= <xCloseSpec>  ;
     */
    public Object production874UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCloseSpecList> ::= <xCloseSpecList> T_COMMA <xCloseSpec>  ;
     */
    public Object production875UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCloseSpec> ::= T_UNITEQ <xUnitIdentifier>  ;
     */
    public Object production876UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCloseSpec> ::= T_ERREQ <xLblRef>  ;
     */
    public Object production877UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCloseSpec> ::= T_STATUSEQ <xCExpr>  ;
     */
    public Object production878UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCloseSpec> ::= T_IOSTATEQ <xScalarVariable>  ;
     */
    public Object production879UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xReadStmt> ::= T_READ <xRdCtlSpec> <xInputItemList> T_EOS  ;
     */
    public Object production880UserAction(Token v1, Object v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xReadStmt> ::= <xLblDef> T_READ <xRdCtlSpec> <xInputItemList> T_EOS  ;
     */
    public Object production881UserAction(Object v1, Token v2, Object v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xReadStmt> ::= T_READ <xRdCtlSpec> T_EOS  ;
     */
    public Object production882UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xReadStmt> ::= <xLblDef> T_READ <xRdCtlSpec> T_EOS  ;
     */
    public Object production883UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xReadStmt> ::= T_READ <xRdFmtId> T_COMMA <xInputItemList> T_EOS  ;
     */
    public Object production884UserAction(Token v1, Object v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xReadStmt> ::= <xLblDef> T_READ <xRdFmtId> T_COMMA <xInputItemList> T_EOS  ;
     */
    public Object production885UserAction(Object v1, Token v2, Object v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xReadStmt> ::= T_READ <xRdFmtId> T_EOS  ;
     */
    public Object production886UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xReadStmt> ::= <xLblDef> T_READ <xRdFmtId> T_EOS  ;
     */
    public Object production887UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRdCtlSpec> ::= <xRdUnitId>  ;
     */
    public Object production888UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRdCtlSpec> ::= T_LPAREN <xRdIoCtlSpecList> T_RPAREN  ;
     */
    public Object production889UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRdUnitId> ::= T_LPAREN <xUFExpr> T_RPAREN  ;
     */
    public Object production890UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRdUnitId> ::= T_LPAREN T_ASTERISK T_RPAREN  ;
     */
    public Object production891UserAction(Token v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRdIoCtlSpecList> ::= <xUnitIdentifier> T_COMMA <xIoControlSpec>  ;
     */
    public Object production892UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRdIoCtlSpecList> ::= <xUnitIdentifier> T_COMMA <xFormatIdentifier>  ;
     */
    public Object production893UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRdIoCtlSpecList> ::= <xIoControlSpec>  ;
     */
    public Object production894UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRdIoCtlSpecList> ::= <xRdIoCtlSpecList> T_COMMA <xIoControlSpec>  ;
     */
    public Object production895UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRdFmtId> ::= <xLblRef>  ;
     */
    public Object production896UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRdFmtId> ::= T_ASTERISK  ;
     */
    public Object production897UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRdFmtId> ::= <xCOperand>  ;
     */
    public Object production898UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRdFmtId> ::= <xCOperand> <xConcatOp> <xCPrimary>  ;
     */
    public Object production899UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRdFmtId> ::= <xRdFmtIdExpr> <xConcatOp> <xCPrimary>  ;
     */
    public Object production900UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRdFmtIdExpr> ::= T_LPAREN <xUFExpr> T_RPAREN  ;
     */
    public Object production901UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWriteStmt> ::= T_WRITE T_LPAREN <xIoControlSpecList> T_RPAREN <xOutputItemList> T_EOS  ;
     */
    public Object production902UserAction(Token v1, Token v2, Object v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWriteStmt> ::= <xLblDef> T_WRITE T_LPAREN <xIoControlSpecList> T_RPAREN <xOutputItemList> T_EOS  ;
     */
    public Object production903UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Object v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWriteStmt> ::= T_WRITE T_LPAREN <xIoControlSpecList> T_RPAREN T_EOS  ;
     */
    public Object production904UserAction(Token v1, Token v2, Object v3, Token v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xWriteStmt> ::= <xLblDef> T_WRITE T_LPAREN <xIoControlSpecList> T_RPAREN T_EOS  ;
     */
    public Object production905UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrintStmt> ::= T_PRINT <xFormatIdentifier> T_COMMA <xOutputItemList> T_EOS  ;
     */
    public Object production906UserAction(Token v1, Object v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrintStmt> ::= <xLblDef> T_PRINT <xFormatIdentifier> T_COMMA <xOutputItemList> T_EOS  ;
     */
    public Object production907UserAction(Object v1, Token v2, Object v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrintStmt> ::= T_PRINT <xFormatIdentifier> T_EOS  ;
     */
    public Object production908UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrintStmt> ::= <xLblDef> T_PRINT <xFormatIdentifier> T_EOS  ;
     */
    public Object production909UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIoControlSpecList> ::= <xUnitIdentifier>  ;
     */
    public Object production910UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIoControlSpecList> ::= <xUnitIdentifier> T_COMMA <xFormatIdentifier>  ;
     */
    public Object production911UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIoControlSpecList> ::= <xUnitIdentifier> T_COMMA <xIoControlSpec>  ;
     */
    public Object production912UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIoControlSpecList> ::= <xIoControlSpec>  ;
     */
    public Object production913UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIoControlSpecList> ::= <xIoControlSpecList> T_COMMA <xIoControlSpec>  ;
     */
    public Object production914UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIoControlSpec> ::= T_FMTEQ <xFormatIdentifier>  ;
     */
    public Object production915UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIoControlSpec> ::= T_UNITEQ <xUnitIdentifier>  ;
     */
    public Object production916UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIoControlSpec> ::= T_RECEQ <xExpr>  ;
     */
    public Object production917UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIoControlSpec> ::= T_ENDEQ <xLblRef>  ;
     */
    public Object production918UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIoControlSpec> ::= T_ERREQ <xLblRef>  ;
     */
    public Object production919UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIoControlSpec> ::= T_IOSTATEQ <xScalarVariable>  ;
     */
    public Object production920UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIoControlSpec> ::= T_NMLEQ <xNamelistGroupName>  ;
     */
    public Object production921UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIoControlSpec> ::= T_ADVANCEEQ <xCExpr>  ;
     */
    public Object production922UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIoControlSpec> ::= T_SIZEEQ <xVariable>  ;
     */
    public Object production923UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIoControlSpec> ::= T_EOREQ <xLblRef>  ;
     */
    public Object production924UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFormatIdentifier> ::= <xLblRef>  ;
     */
    public Object production925UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFormatIdentifier> ::= <xCExpr>  ;
     */
    public Object production926UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFormatIdentifier> ::= T_ASTERISK  ;
     */
    public Object production927UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInputItemList> ::= <xInputItem>  ;
     */
    public Object production928UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInputItemList> ::= <xInputItemList> T_COMMA <xInputItem>  ;
     */
    public Object production929UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInputItem> ::= <xVariable>  ;
     */
    public Object production930UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInputItem> ::= <xInputImpliedDo>  ;
     */
    public Object production931UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOutputItemList> ::= <xExpr>  ;
     */
    public Object production932UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOutputItemList> ::= <xOutputItemList1>  ;
     */
    public Object production933UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOutputItemList1> ::= <xExpr> T_COMMA <xExpr>  ;
     */
    public Object production934UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOutputItemList1> ::= <xExpr> T_COMMA <xOutputImpliedDo>  ;
     */
    public Object production935UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOutputItemList1> ::= <xOutputImpliedDo>  ;
     */
    public Object production936UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOutputItemList1> ::= <xOutputItemList1> T_COMMA <xExpr>  ;
     */
    public Object production937UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOutputItemList1> ::= <xOutputItemList1> T_COMMA <xOutputImpliedDo>  ;
     */
    public Object production938UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInputImpliedDo> ::= T_LPAREN <xInputItemList> T_COMMA <T_xImpliedDoVariable> T_EQUALS <xExpr> T_COMMA <xExpr> T_RPAREN  ;
     */
    public Object production939UserAction(Token v1, Object v2, Token v3, Object v4, Token v5, Object v6, Token v7, Object v8, Token v9)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInputImpliedDo> ::= T_LPAREN <xInputItemList> T_COMMA <T_xImpliedDoVariable> T_EQUALS <xExpr> T_COMMA <xExpr> T_COMMA <xExpr> T_RPAREN  ;
     */
    public Object production940UserAction(Token v1, Object v2, Token v3, Object v4, Token v5, Object v6, Token v7, Object v8, Token v9, Object v10, Token v11)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOutputImpliedDo> ::= T_LPAREN <xExpr> T_COMMA <T_xImpliedDoVariable> T_EQUALS <xExpr> T_COMMA <xExpr> T_RPAREN  ;
     */
    public Object production941UserAction(Token v1, Object v2, Token v3, Object v4, Token v5, Object v6, Token v7, Object v8, Token v9)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOutputImpliedDo> ::= T_LPAREN <xExpr> T_COMMA <T_xImpliedDoVariable> T_EQUALS <xExpr> T_COMMA <xExpr> T_COMMA <xExpr> T_RPAREN  ;
     */
    public Object production942UserAction(Token v1, Object v2, Token v3, Object v4, Token v5, Object v6, Token v7, Object v8, Token v9, Object v10, Token v11)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOutputImpliedDo> ::= T_LPAREN <xOutputItemList1> T_COMMA <T_xImpliedDoVariable> T_EQUALS <xExpr> T_COMMA <xExpr> T_RPAREN  ;
     */
    public Object production943UserAction(Token v1, Object v2, Token v3, Object v4, Token v5, Object v6, Token v7, Object v8, Token v9)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOutputImpliedDo> ::= T_LPAREN <xOutputItemList1> T_COMMA <T_xImpliedDoVariable> T_EQUALS <xExpr> T_COMMA <xExpr> T_COMMA <xExpr> T_RPAREN  ;
     */
    public Object production944UserAction(Token v1, Object v2, Token v3, Object v4, Token v5, Object v6, Token v7, Object v8, Token v9, Object v10, Token v11)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBackspaceStmt> ::= T_BACKSPACE <xUnitIdentifier> T_EOS  ;
     */
    public Object production945UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBackspaceStmt> ::= <xLblDef> T_BACKSPACE <xUnitIdentifier> T_EOS  ;
     */
    public Object production946UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBackspaceStmt> ::= T_BACKSPACE T_LPAREN <xPositionSpecList> T_RPAREN T_EOS  ;
     */
    public Object production947UserAction(Token v1, Token v2, Object v3, Token v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBackspaceStmt> ::= <xLblDef> T_BACKSPACE T_LPAREN <xPositionSpecList> T_RPAREN T_EOS  ;
     */
    public Object production948UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndfileStmt> ::= T_ENDFILE <xUnitIdentifier> T_EOS  ;
     */
    public Object production949UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndfileStmt> ::= <xLblDef> T_ENDFILE <xUnitIdentifier> T_EOS  ;
     */
    public Object production950UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndfileStmt> ::= T_ENDFILE T_LPAREN <xPositionSpecList> T_RPAREN T_EOS  ;
     */
    public Object production951UserAction(Token v1, Token v2, Object v3, Token v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndfileStmt> ::= <xLblDef> T_ENDFILE T_LPAREN <xPositionSpecList> T_RPAREN T_EOS  ;
     */
    public Object production952UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndfileStmt> ::= T_END T_FILE <xUnitIdentifier> T_EOS  ;
     */
    public Object production953UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndfileStmt> ::= <xLblDef> T_END T_FILE <xUnitIdentifier> T_EOS  ;
     */
    public Object production954UserAction(Object v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndfileStmt> ::= T_END T_FILE T_LPAREN <xPositionSpecList> T_RPAREN T_EOS  ;
     */
    public Object production955UserAction(Token v1, Token v2, Token v3, Object v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndfileStmt> ::= <xLblDef> T_END T_FILE T_LPAREN <xPositionSpecList> T_RPAREN T_EOS  ;
     */
    public Object production956UserAction(Object v1, Token v2, Token v3, Token v4, Object v5, Token v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRewindStmt> ::= T_REWIND <xUnitIdentifier> T_EOS  ;
     */
    public Object production957UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRewindStmt> ::= <xLblDef> T_REWIND <xUnitIdentifier> T_EOS  ;
     */
    public Object production958UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRewindStmt> ::= T_REWIND T_LPAREN <xPositionSpecList> T_RPAREN T_EOS  ;
     */
    public Object production959UserAction(Token v1, Token v2, Object v3, Token v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRewindStmt> ::= <xLblDef> T_REWIND T_LPAREN <xPositionSpecList> T_RPAREN T_EOS  ;
     */
    public Object production960UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPositionSpecList> ::= <xUnitIdentifier> T_COMMA <xPositionSpec>  ;
     */
    public Object production961UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPositionSpecList> ::= <xPositionSpec>  ;
     */
    public Object production962UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPositionSpecList> ::= <xPositionSpecList> T_COMMA <xPositionSpec>  ;
     */
    public Object production963UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPositionSpec> ::= T_UNITEQ <xUnitIdentifier>  ;
     */
    public Object production964UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPositionSpec> ::= T_ERREQ <xLblRef>  ;
     */
    public Object production965UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPositionSpec> ::= T_IOSTATEQ <xScalarVariable>  ;
     */
    public Object production966UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireStmt> ::= T_INQUIRE T_LPAREN <xInquireSpecList> T_RPAREN T_EOS  ;
     */
    public Object production967UserAction(Token v1, Token v2, Object v3, Token v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireStmt> ::= <xLblDef> T_INQUIRE T_LPAREN <xInquireSpecList> T_RPAREN T_EOS  ;
     */
    public Object production968UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireStmt> ::= T_INQUIRE T_LPAREN T_IOLENGTHEQ <xScalarVariable> T_RPAREN <xOutputItemList> T_EOS  ;
     */
    public Object production969UserAction(Token v1, Token v2, Token v3, Object v4, Token v5, Object v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireStmt> ::= <xLblDef> T_INQUIRE T_LPAREN T_IOLENGTHEQ <xScalarVariable> T_RPAREN <xOutputItemList> T_EOS  ;
     */
    public Object production970UserAction(Object v1, Token v2, Token v3, Token v4, Object v5, Token v6, Object v7, Token v8)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpecList> ::= <xUnitIdentifier>  ;
     */
    public Object production971UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpecList> ::= <xInquireSpec>  ;
     */
    public Object production972UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpecList> ::= <xInquireSpecList> T_COMMA <xInquireSpec>  ;
     */
    public Object production973UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_UNITEQ <xUnitIdentifier>  ;
     */
    public Object production974UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_FILEEQ <xCExpr>  ;
     */
    public Object production975UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_ERREQ <xLblRef>  ;
     */
    public Object production976UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_IOSTATEQ <xScalarVariable>  ;
     */
    public Object production977UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_EXISTEQ <xScalarVariable>  ;
     */
    public Object production978UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_OPENEDEQ <xScalarVariable>  ;
     */
    public Object production979UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_NUMBEREQ <xScalarVariable>  ;
     */
    public Object production980UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_NAMEDEQ <xScalarVariable>  ;
     */
    public Object production981UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_NAMEEQ <xScalarVariable>  ;
     */
    public Object production982UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_ACCESSEQ <xScalarVariable>  ;
     */
    public Object production983UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_SEQUENTIALEQ <xScalarVariable>  ;
     */
    public Object production984UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_DIRECTEQ <xScalarVariable>  ;
     */
    public Object production985UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_FORMEQ <xScalarVariable>  ;
     */
    public Object production986UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_FORMATTEDEQ <xScalarVariable>  ;
     */
    public Object production987UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_UNFORMATTEDEQ <xScalarVariable>  ;
     */
    public Object production988UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_RECLEQ <xExpr>  ;
     */
    public Object production989UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_NEXTRECEQ <xScalarVariable>  ;
     */
    public Object production990UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_BLANKEQ <xScalarVariable>  ;
     */
    public Object production991UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_POSITIONEQ <xScalarVariable>  ;
     */
    public Object production992UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_ACTIONEQ <xScalarVariable>  ;
     */
    public Object production993UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_READEQ <xScalarVariable>  ;
     */
    public Object production994UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_WRITEEQ <xScalarVariable>  ;
     */
    public Object production995UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_READWRITEEQ <xScalarVariable>  ;
     */
    public Object production996UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_DELIMEQ <xScalarVariable>  ;
     */
    public Object production997UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInquireSpec> ::= T_PADEQ <xScalarVariable>  ;
     */
    public Object production998UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFormatStmt> ::= T_FORMAT T_LPAREN T_RPAREN T_EOS  ;
     */
    public Object production999UserAction(Token v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFormatStmt> ::= T_FORMAT T_LPAREN <xFormatStmt@67> T_RPAREN T_EOS  ;
     */
    public Object production1000UserAction(Token v1, Token v2, Object v3, Token v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFormatStmt> ::= <xLblDef> T_FORMAT T_LPAREN T_RPAREN T_EOS  ;
     */
    public Object production1001UserAction(Object v1, Token v2, Token v3, Token v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFormatStmt> ::= <xLblDef> T_FORMAT T_LPAREN <xFormatStmt@67> T_RPAREN T_EOS  ;
     */
    public Object production1002UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFmtSpec> ::= <xFormatedit>  ;
     */
    public Object production1003UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFmtSpec> ::= <xFormatsep>  ;
     */
    public Object production1004UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFmtSpec> ::= <xFormatsep> <xFormatedit>  ;
     */
    public Object production1005UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFmtSpec> ::= <xFmtSpec> <xFormatsep>  ;
     */
    public Object production1006UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFmtSpec> ::= <xFmtSpec> <xFormatsep> <xFormatedit>  ;
     */
    public Object production1007UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFmtSpec> ::= <xFmtSpec> T_COMMA <xFormatedit>  ;
     */
    public Object production1008UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFmtSpec> ::= <xFmtSpec> T_COMMA <xFormatsep>  ;
     */
    public Object production1009UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFmtSpec> ::= <xFmtSpec> T_COMMA <xFormatsep> <xFormatedit>  ;
     */
    public Object production1010UserAction(Object v1, Token v2, Object v3, Object v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFormatedit> ::= <xEditElement>  ;
     */
    public Object production1011UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFormatedit> ::= T_ICON <xEditElement>  ;
     */
    public Object production1012UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFormatedit> ::= T_XCON  ;
     */
    public Object production1013UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFormatedit> ::= T_PCON  ;
     */
    public Object production1014UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFormatedit> ::= T_PCON <xEditElement>  ;
     */
    public Object production1015UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFormatedit> ::= T_PCON T_ICON <xEditElement>  ;
     */
    public Object production1016UserAction(Token v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEditElement> ::= T_FCON  ;
     */
    public Object production1017UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEditElement> ::= T_SCON  ;
     */
    public Object production1018UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEditElement> ::= T_IDENT  ;
     */
    public Object production1019UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEditElement> ::= T_LPAREN <xFmtSpec> T_RPAREN  ;
     */
    public Object production1020UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEditElement> ::= T_HCON  ;
     */
    public Object production1021UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFormatsep> ::= T_SLASH  ;
     */
    public Object production1022UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFormatsep> ::= T_COLON  ;
     */
    public Object production1023UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xProgramStmt> ::= T_PROGRAM <xProgramName> T_EOS  ;
     */
    public Token production1024UserAction(Token v1, Token v2, Token v3)
    {
        return v2;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xProgramStmt> ::= <xLblDef> T_PROGRAM <xProgramName> T_EOS  ;
     */
    public Token production1025UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return v3;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndProgramStmt> ::= T_END T_EOS  ;
     */
    public Object production1026UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndProgramStmt> ::= <xLblDef> T_END T_EOS  ;
     */
    public Object production1027UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndProgramStmt> ::= T_ENDPROGRAM T_EOS  ;
     */
    public Object production1028UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndProgramStmt> ::= T_ENDPROGRAM <xEndProgramStmt@68> T_EOS  ;
     */
    public Object production1029UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndProgramStmt> ::= <xLblDef> T_ENDPROGRAM T_EOS  ;
     */
    public Object production1030UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndProgramStmt> ::= <xLblDef> T_ENDPROGRAM <xEndProgramStmt@68> T_EOS  ;
     */
    public Object production1031UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndProgramStmt> ::= T_END T_PROGRAM T_EOS  ;
     */
    public Object production1032UserAction(Token v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndProgramStmt> ::= T_END T_PROGRAM <xEndProgramStmt@69> T_EOS  ;
     */
    public Object production1033UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndProgramStmt> ::= <xLblDef> T_END T_PROGRAM T_EOS  ;
     */
    public Object production1034UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndProgramStmt> ::= <xLblDef> T_END T_PROGRAM <xEndProgramStmt@69> T_EOS  ;
     */
    public Object production1035UserAction(Object v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xModuleStmt> ::= T_MODULE <xModuleName> T_EOS  ;
     */
    public Token production1036UserAction(Token v1, Token v2, Token v3)
    {
        return v2;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xModuleStmt> ::= <xLblDef> T_MODULE <xModuleName> T_EOS  ;
     */
    public Token production1037UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return v3;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndModuleStmt> ::= T_END T_EOS  ;
     */
    public Object production1038UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndModuleStmt> ::= <xLblDef> T_END T_EOS  ;
     */
    public Object production1039UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndModuleStmt> ::= T_ENDMODULE T_EOS  ;
     */
    public Object production1040UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndModuleStmt> ::= T_ENDMODULE <xEndModuleStmt@70> T_EOS  ;
     */
    public Object production1041UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndModuleStmt> ::= <xLblDef> T_ENDMODULE T_EOS  ;
     */
    public Object production1042UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndModuleStmt> ::= <xLblDef> T_ENDMODULE <xEndModuleStmt@70> T_EOS  ;
     */
    public Object production1043UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndModuleStmt> ::= T_END T_MODULE T_EOS  ;
     */
    public Object production1044UserAction(Token v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndModuleStmt> ::= T_END T_MODULE <xEndModuleStmt@71> T_EOS  ;
     */
    public Object production1045UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndModuleStmt> ::= <xLblDef> T_END T_MODULE T_EOS  ;
     */
    public Object production1046UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndModuleStmt> ::= <xLblDef> T_END T_MODULE <xEndModuleStmt@71> T_EOS  ;
     */
    public Object production1047UserAction(Object v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUseStmt> ::= T_USE <xName> T_EOS  ;
     */
    public Object production1048UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUseStmt> ::= <xLblDef> T_USE <xName> T_EOS  ;
     */
    public Object production1049UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUseStmt> ::= T_USE <xName> T_COMMA <xRenameList> T_EOS  ;
     */
    public Object production1050UserAction(Token v1, Object v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUseStmt> ::= <xLblDef> T_USE <xName> T_COMMA <xRenameList> T_EOS  ;
     */
    public Object production1051UserAction(Object v1, Token v2, Object v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUseStmt> ::= T_USE <xName> T_COMMA T_ONLY T_COLON T_EOS  ;
     */
    public Object production1052UserAction(Token v1, Object v2, Token v3, Token v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUseStmt> ::= T_USE <xName> T_COMMA T_ONLY T_COLON <xUseStmt@72> T_EOS  ;
     */
    public Object production1053UserAction(Token v1, Object v2, Token v3, Token v4, Token v5, Object v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUseStmt> ::= <xLblDef> T_USE <xName> T_COMMA T_ONLY T_COLON T_EOS  ;
     */
    public Object production1054UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Token v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUseStmt> ::= <xLblDef> T_USE <xName> T_COMMA T_ONLY T_COLON <xUseStmt@72> T_EOS  ;
     */
    public Object production1055UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Token v6, Object v7, Token v8)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRenameList> ::= <xRename>  ;
     */
    public Object production1056UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRenameList> ::= <xRenameList> T_COMMA <xRename>  ;
     */
    public Object production1057UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOnlyList> ::= <xOnly>  ;
     */
    public Object production1058UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOnlyList> ::= <xOnlyList> T_COMMA <xOnly>  ;
     */
    public Object production1059UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xRename> ::= T_IDENT T_EQGREATERTHAN <xUseName>  ;
     */
    public Object production1060UserAction(Token v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOnly> ::= <xGenericSpec>  ;
     */
    public Object production1061UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOnly> ::= T_IDENT T_EQGREATERTHAN <xUseName>  ;
     */
    public Object production1062UserAction(Token v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xOnly> ::= <xUseName>  ;
     */
    public Object production1063UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBlockDataStmt> ::= T_BLOCKDATA <xBlockDataName> T_EOS  ;
     */
    public Token production1064UserAction(Token v1, Token v2, Token v3)
    {
        return v2;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBlockDataStmt> ::= <xLblDef> T_BLOCKDATA <xBlockDataName> T_EOS  ;
     */
    public Token production1065UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return v3;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBlockDataStmt> ::= T_BLOCKDATA T_EOS  ;
     */
    public Token production1066UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBlockDataStmt> ::= <xLblDef> T_BLOCKDATA T_EOS  ;
     */
    public Token production1067UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndBlockDataStmt> ::= T_END T_EOS  ;
     */
    public Object production1068UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndBlockDataStmt> ::= <xLblDef> T_END T_EOS  ;
     */
    public Object production1069UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndBlockDataStmt> ::= T_ENDBLOCKDATA T_EOS  ;
     */
    public Object production1070UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndBlockDataStmt> ::= T_ENDBLOCKDATA <xEndBlockDataStmt@73> T_EOS  ;
     */
    public Object production1071UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndBlockDataStmt> ::= <xLblDef> T_ENDBLOCKDATA T_EOS  ;
     */
    public Object production1072UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndBlockDataStmt> ::= <xLblDef> T_ENDBLOCKDATA <xEndBlockDataStmt@73> T_EOS  ;
     */
    public Object production1073UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndBlockDataStmt> ::= T_END T_BLOCKDATA T_EOS  ;
     */
    public Object production1074UserAction(Token v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndBlockDataStmt> ::= T_END T_BLOCKDATA <xEndBlockDataStmt@74> T_EOS  ;
     */
    public Object production1075UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndBlockDataStmt> ::= <xLblDef> T_END T_BLOCKDATA T_EOS  ;
     */
    public Object production1076UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndBlockDataStmt> ::= <xLblDef> T_END T_BLOCKDATA <xEndBlockDataStmt@74> T_EOS  ;
     */
    public Object production1077UserAction(Object v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndBlockDataStmt> ::= T_ENDBLOCK T_DATA T_EOS  ;
     */
    public Object production1078UserAction(Token v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndBlockDataStmt> ::= T_ENDBLOCK T_DATA <xEndBlockDataStmt@75> T_EOS  ;
     */
    public Object production1079UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndBlockDataStmt> ::= <xLblDef> T_ENDBLOCK T_DATA T_EOS  ;
     */
    public Object production1080UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndBlockDataStmt> ::= <xLblDef> T_ENDBLOCK T_DATA <xEndBlockDataStmt@75> T_EOS  ;
     */
    public Object production1081UserAction(Object v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndBlockDataStmt> ::= T_END T_BLOCK T_DATA T_EOS  ;
     */
    public Object production1082UserAction(Token v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndBlockDataStmt> ::= T_END T_BLOCK T_DATA <xEndBlockDataStmt@76> T_EOS  ;
     */
    public Object production1083UserAction(Token v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndBlockDataStmt> ::= <xLblDef> T_END T_BLOCK T_DATA T_EOS  ;
     */
    public Object production1084UserAction(Object v1, Token v2, Token v3, Token v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndBlockDataStmt> ::= <xLblDef> T_END T_BLOCK T_DATA <xEndBlockDataStmt@76> T_EOS  ;
     */
    public Object production1085UserAction(Object v1, Token v2, Token v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInterfaceBlock> ::= <xInterfaceStmt> <xInterfaceRange>  ;
     */
    public Object production1086UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInterfaceRange> ::= <xInterfaceBlockBody> <xEndInterfaceStmt>  ;
     */
    public Object production1087UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInterfaceBlockBody> ::= <xInterfaceSpecification>  ;
     */
    public Object production1088UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInterfaceBlockBody> ::= <xInterfaceBlockBody> <xInterfaceSpecification>  ;
     */
    public Object production1089UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInterfaceSpecification> ::= <xInterfaceBody>  ;
     */
    public Object production1090UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInterfaceSpecification> ::= <xModuleProcedureStmt>  ;
     */
    public Object production1091UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInterfaceStmt> ::= T_INTERFACE <xGenericName> T_EOS  ;
     */
    public Object production1092UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInterfaceStmt> ::= <xLblDef> T_INTERFACE <xGenericName> T_EOS  ;
     */
    public Object production1093UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInterfaceStmt> ::= T_INTERFACE <xGenericSpec> T_EOS  ;
     */
    public Object production1094UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInterfaceStmt> ::= <xLblDef> T_INTERFACE <xGenericSpec> T_EOS  ;
     */
    public Object production1095UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInterfaceStmt> ::= T_INTERFACE T_EOS  ;
     */
    public Object production1096UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInterfaceStmt> ::= <xLblDef> T_INTERFACE T_EOS  ;
     */
    public Object production1097UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndInterfaceStmt> ::= T_ENDINTERFACE T_EOS  ;
     */
    public Object production1098UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndInterfaceStmt> ::= T_ENDINTERFACE <xEndInterfaceStmt@77> T_EOS  ;
     */
    public Object production1099UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndInterfaceStmt> ::= <xLblDef> T_ENDINTERFACE T_EOS  ;
     */
    public Object production1100UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndInterfaceStmt> ::= <xLblDef> T_ENDINTERFACE <xEndInterfaceStmt@77> T_EOS  ;
     */
    public Object production1101UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndInterfaceStmt> ::= T_END T_INTERFACE T_EOS  ;
     */
    public Object production1102UserAction(Token v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndInterfaceStmt> ::= T_END T_INTERFACE <xEndInterfaceStmt@78> T_EOS  ;
     */
    public Object production1103UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndInterfaceStmt> ::= <xLblDef> T_END T_INTERFACE T_EOS  ;
     */
    public Object production1104UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndInterfaceStmt> ::= <xLblDef> T_END T_INTERFACE <xEndInterfaceStmt@78> T_EOS  ;
     */
    public Object production1105UserAction(Object v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInterfaceBody> ::= <xFunctionStmt> <xFunctionInterfaceRange>  ;
     */
    public Object production1106UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xInterfaceBody> ::= <xSubroutineStmt> <xSubroutineInterfaceRange>  ;
     */
    public Object production1107UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionInterfaceRange> ::= <xSubprogramInterfaceBody> <xEndFunctionStmt>  ;
     */
    public Object production1108UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionInterfaceRange> ::= <xEndFunctionStmt>  ;
     */
    public Object production1109UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutineInterfaceRange> ::= <xSubprogramInterfaceBody> <xEndSubroutineStmt>  ;
     */
    public Object production1110UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutineInterfaceRange> ::= <xEndSubroutineStmt>  ;
     */
    public Object production1111UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubprogramInterfaceBody> ::= <xSpecificationPartConstruct>  ;
     */
    public Object production1112UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubprogramInterfaceBody> ::= <xSubprogramInterfaceBody> <xSpecificationPartConstruct>  ;
     */
    public Object production1113UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xModuleProcedureStmt> ::= T_MODULE T_PROCEDURE <xProcedureNameList> T_EOS  ;
     */
    public Object production1114UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xModuleProcedureStmt> ::= <xLblDef> T_MODULE T_PROCEDURE <xProcedureNameList> T_EOS  ;
     */
    public Object production1115UserAction(Object v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xProcedureNameList> ::= <xProcedureName>  ;
     */
    public Object production1116UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xProcedureNameList> ::= <xProcedureNameList> T_COMMA <xProcedureName>  ;
     */
    public Object production1117UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xProcedureName> ::= T_IDENT  ;
     */
    public Object production1118UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xGenericSpec> ::= T_OPERATOR T_LPAREN <xDefinedOperator> T_RPAREN  ;
     */
    public Object production1119UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xGenericSpec> ::= T_ASSIGNMENT T_LPAREN T_EQUALS T_RPAREN  ;
     */
    public Object production1120UserAction(Token v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExternalStmt> ::= T_EXTERNAL <xExternalNameList> T_EOS  ;
     */
    public Object production1121UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExternalStmt> ::= <xLblDef> T_EXTERNAL <xExternalNameList> T_EOS  ;
     */
    public Object production1122UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExternalStmt> ::= T_EXTERNAL T_COLON T_COLON <xExternalNameList> T_EOS  ;
     */
    public Object production1123UserAction(Token v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExternalStmt> ::= <xLblDef> T_EXTERNAL T_COLON T_COLON <xExternalNameList> T_EOS  ;
     */
    public Object production1124UserAction(Object v1, Token v2, Token v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExternalNameList> ::= <xExternalName>  ;
     */
    public Object production1125UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExternalNameList> ::= <xExternalNameList> T_COMMA <xExternalName>  ;
     */
    public Object production1126UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIntrinsicStmt> ::= T_INTRINSIC <xIntrinsicList> T_EOS  ;
     */
    public Object production1127UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIntrinsicStmt> ::= <xLblDef> T_INTRINSIC <xIntrinsicList> T_EOS  ;
     */
    public Object production1128UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIntrinsicStmt> ::= T_INTRINSIC T_COLON T_COLON <xIntrinsicList> T_EOS  ;
     */
    public Object production1129UserAction(Token v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIntrinsicStmt> ::= <xLblDef> T_INTRINSIC T_COLON T_COLON <xIntrinsicList> T_EOS  ;
     */
    public Object production1130UserAction(Object v1, Token v2, Token v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIntrinsicList> ::= <xIntrinsicProcedureName>  ;
     */
    public Object production1131UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIntrinsicList> ::= <xIntrinsicList> T_COMMA <xIntrinsicProcedureName>  ;
     */
    public Object production1132UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionReference> ::= <xName> T_LPAREN T_RPAREN  ;
     */
    public Object production1133UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionReference> ::= <xName> T_LPAREN <xFunctionArgList> T_RPAREN  ;
     */
    public Object production1134UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCallStmt> ::= T_CALL <xSubroutineNameUse> T_EOS  ;
     */
    public Object production1135UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCallStmt> ::= <xLblDef> T_CALL <xSubroutineNameUse> T_EOS  ;
     */
    public Object production1136UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCallStmt> ::= T_CALL <xSubroutineNameUse> T_LPAREN T_RPAREN T_EOS  ;
     */
    public Object production1137UserAction(Token v1, Object v2, Token v3, Token v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCallStmt> ::= T_CALL <xSubroutineNameUse> T_LPAREN <xSubroutineArgList> T_RPAREN T_EOS  ;
     */
    public Object production1138UserAction(Token v1, Object v2, Token v3, Object v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCallStmt> ::= <xLblDef> T_CALL <xSubroutineNameUse> T_LPAREN T_RPAREN T_EOS  ;
     */
    public Object production1139UserAction(Object v1, Token v2, Object v3, Token v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCallStmt> ::= <xLblDef> T_CALL <xSubroutineNameUse> T_LPAREN <xSubroutineArgList> T_RPAREN T_EOS  ;
     */
    public Object production1140UserAction(Object v1, Token v2, Object v3, Token v4, Object v5, Token v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutineArgList> ::= <xSubroutineArg>  ;
     */
    public Object production1141UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutineArgList> ::= T_COMMA <xSubroutineArg>  ;
     */
    public Object production1142UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutineArgList> ::= <xSubroutineArgList> T_COMMA <xSubroutineArg>  ;
     */
    public Object production1143UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionArgList> ::= <xFunctionArg>  ;
     */
    public Object production1144UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionArgList> ::= <xFunctionArgList> T_COMMA <xFunctionArg>  ;
     */
    public Object production1145UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionArgList> ::= <xSectionSubscriptList> T_COMMA <xFunctionArg>  ;
     */
    public Object production1146UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionArg> ::= <xName> T_EQUALS <xExpr>  ;
     */
    public Object production1147UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutineArg> ::= <xExpr>  ;
     */
    public Object production1148UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutineArg> ::= T_ASTERISK <xLblRef>  ;
     */
    public Object production1149UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutineArg> ::= <xName> T_EQUALS <xExpr>  ;
     */
    public Object production1150UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutineArg> ::= <xName> T_EQUALS T_ASTERISK <xLblRef>  ;
     */
    public Object production1151UserAction(Object v1, Token v2, Token v3, Object v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutineArg> ::= T_HCON  ;
     */
    public Object production1152UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutineArg> ::= <xName> T_EQUALS T_HCON  ;
     */
    public Object production1153UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionStmt> ::= <xFunctionPrefix> <xFunctionName> T_LPAREN T_RPAREN T_EOS  ;
     */
    public Token production1154UserAction(Object v1, Token v2, Token v3, Token v4, Token v5)
    {
        return v2;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionStmt> ::= <xFunctionPrefix> <xFunctionName> T_LPAREN T_RPAREN <xFunctionStmt@79> T_EOS  ;
     */
    public Token production1155UserAction(Object v1, Token v2, Token v3, Token v4, Token v5, Token v6, Object v7, Token v8, Token v9)
    {
        return v2;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionStmt> ::= <xFunctionPrefix> <xFunctionName> T_LPAREN <xFunctionPars> T_RPAREN T_EOS  ;
     */
    public Token production1156UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6)
    {
        return v2;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionStmt> ::= <xFunctionPrefix> <xFunctionName> T_LPAREN <xFunctionPars> T_RPAREN <xFunctionStmt@79> T_EOS  ;
     */
    public Token production1157UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6, Token v7, Object v8, Token v9, Token v10)
    {
        return v2;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionStmt> ::= <xLblDef> <xFunctionPrefix> <xFunctionName> T_LPAREN T_RPAREN T_EOS  ;
     */
    public Token production1158UserAction(Object v1, Object v2, Token v3, Token v4, Token v5, Token v6)
    {
        return v3;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionStmt> ::= <xLblDef> <xFunctionPrefix> <xFunctionName> T_LPAREN T_RPAREN <xFunctionStmt@79> T_EOS  ;
     */
    public Token production1159UserAction(Object v1, Object v2, Token v3, Token v4, Token v5, Token v6, Token v7, Object v8, Token v9, Token v10)
    {
        return v3;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionStmt> ::= <xLblDef> <xFunctionPrefix> <xFunctionName> T_LPAREN <xFunctionPars> T_RPAREN T_EOS  ;
     */
    public Token production1160UserAction(Object v1, Object v2, Token v3, Token v4, Object v5, Token v6, Token v7)
    {
        return v3;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionStmt> ::= <xLblDef> <xFunctionPrefix> <xFunctionName> T_LPAREN <xFunctionPars> T_RPAREN <xFunctionStmt@79> T_EOS  ;
     */
    public Token production1161UserAction(Object v1, Object v2, Token v3, Token v4, Object v5, Token v6, Token v7, Token v8, Object v9, Token v10, Token v11)
    {
        return v3;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionPars> ::= <xFunctionPar>  ;
     */
    public Object production1162UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionPars> ::= T_COMMA <xFunctionPar>  ;
     */
    public Object production1163UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionPars> ::= <xFunctionPars> T_COMMA <xFunctionPar>  ;
     */
    public Object production1164UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionPar> ::= <xDummyArgName>  ;
     */
    public Object production1165UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionPrefix> ::= T_FUNCTION  ;
     */
    public Object production1166UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionPrefix> ::= <xPrefixSpecList> T_FUNCTION  ;
     */
    public Object production1167UserAction(Object v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrefixSpecList> ::= <xPrefixSpec>  ;
     */
    public Object production1168UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrefixSpecList> ::= <xPrefixSpecList> <xPrefixSpec>  ;
     */
    public Object production1169UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrefixSpec> ::= <xTypeSpec>  ;
     */
    public Object production1170UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrefixSpec> ::= T_RECURSIVE  ;
     */
    public Object production1171UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrefixSpec> ::= T_PURE  ;
     */
    public Object production1172UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPrefixSpec> ::= T_ELEMENTAL  ;
     */
    public Object production1173UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndFunctionStmt> ::= T_END T_EOS  ;
     */
    public Object production1174UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndFunctionStmt> ::= <xLblDef> T_END T_EOS  ;
     */
    public Object production1175UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndFunctionStmt> ::= T_ENDFUNCTION T_EOS  ;
     */
    public Object production1176UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndFunctionStmt> ::= T_ENDFUNCTION <xEndFunctionStmt@80> T_EOS  ;
     */
    public Object production1177UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndFunctionStmt> ::= <xLblDef> T_ENDFUNCTION T_EOS  ;
     */
    public Object production1178UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndFunctionStmt> ::= <xLblDef> T_ENDFUNCTION <xEndFunctionStmt@80> T_EOS  ;
     */
    public Object production1179UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndFunctionStmt> ::= T_END T_FUNCTION T_EOS  ;
     */
    public Object production1180UserAction(Token v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndFunctionStmt> ::= T_END T_FUNCTION <xEndFunctionStmt@81> T_EOS  ;
     */
    public Object production1181UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndFunctionStmt> ::= <xLblDef> T_END T_FUNCTION T_EOS  ;
     */
    public Object production1182UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndFunctionStmt> ::= <xLblDef> T_END T_FUNCTION <xEndFunctionStmt@81> T_EOS  ;
     */
    public Object production1183UserAction(Object v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutineStmt> ::= <xSubroutinePrefix> <xSubroutineName> T_EOS  ;
     */
    public Token production1184UserAction(Object v1, Token v2, Token v3)
    {
        return v2;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutineStmt> ::= <xSubroutinePrefix> <xSubroutineName> <xSubroutineStmt@82> T_EOS  ;
     */
    public Token production1185UserAction(Object v1, Token v2, Token v3, Object v4, Token v5, Token v6)
    {
        return v2;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutineStmt> ::= <xLblDef> <xSubroutinePrefix> <xSubroutineName> T_EOS  ;
     */
    public Token production1186UserAction(Object v1, Object v2, Token v3, Token v4)
    {
        return v3;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutineStmt> ::= <xLblDef> <xSubroutinePrefix> <xSubroutineName> <xSubroutineStmt@82> T_EOS  ;
     */
    public Token production1187UserAction(Object v1, Object v2, Token v3, Token v4, Object v5, Token v6, Token v7)
    {
        return v3;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutinePrefix> ::= T_SUBROUTINE  ;
     */
    public Object production1188UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutinePrefix> ::= <xPrefixSpecList> T_SUBROUTINE  ;
     */
    public Object production1189UserAction(Object v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutinePars> ::= <xSubroutinePar>  ;
     */
    public Object production1190UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutinePars> ::= T_COMMA <xSubroutinePar>  ;
     */
    public Object production1191UserAction(Token v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutinePars> ::= <xSubroutinePars> T_COMMA <xSubroutinePar>  ;
     */
    public Object production1192UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutinePar> ::= <xDummyArgName>  ;
     */
    public Object production1193UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutinePar> ::= T_ASTERISK  ;
     */
    public Object production1194UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndSubroutineStmt> ::= T_END T_EOS  ;
     */
    public Object production1195UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndSubroutineStmt> ::= <xLblDef> T_END T_EOS  ;
     */
    public Object production1196UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndSubroutineStmt> ::= T_ENDSUBROUTINE T_EOS  ;
     */
    public Object production1197UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndSubroutineStmt> ::= T_ENDSUBROUTINE <xEndSubroutineStmt@83> T_EOS  ;
     */
    public Object production1198UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndSubroutineStmt> ::= <xLblDef> T_ENDSUBROUTINE T_EOS  ;
     */
    public Object production1199UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndSubroutineStmt> ::= <xLblDef> T_ENDSUBROUTINE <xEndSubroutineStmt@83> T_EOS  ;
     */
    public Object production1200UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndSubroutineStmt> ::= T_END T_SUBROUTINE T_EOS  ;
     */
    public Object production1201UserAction(Token v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndSubroutineStmt> ::= T_END T_SUBROUTINE <xEndSubroutineStmt@84> T_EOS  ;
     */
    public Object production1202UserAction(Token v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndSubroutineStmt> ::= <xLblDef> T_END T_SUBROUTINE T_EOS  ;
     */
    public Object production1203UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndSubroutineStmt> ::= <xLblDef> T_END T_SUBROUTINE <xEndSubroutineStmt@84> T_EOS  ;
     */
    public Object production1204UserAction(Object v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEntryStmt> ::= T_ENTRY <xEntryName> T_EOS  ;
     */
    public Object production1205UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEntryStmt> ::= T_ENTRY <xEntryName> <xEntryStmt@85> T_EOS  ;
     */
    public Object production1206UserAction(Token v1, Object v2, Token v3, Object v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEntryStmt> ::= <xLblDef> T_ENTRY <xEntryName> T_EOS  ;
     */
    public Object production1207UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEntryStmt> ::= <xLblDef> T_ENTRY <xEntryName> <xEntryStmt@85> T_EOS  ;
     */
    public Object production1208UserAction(Object v1, Token v2, Object v3, Token v4, Object v5, Token v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xReturnStmt> ::= T_RETURN T_EOS  ;
     */
    public Object production1209UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xReturnStmt> ::= <xLblDef> T_RETURN T_EOS  ;
     */
    public Object production1210UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xReturnStmt> ::= T_RETURN <xExpr> T_EOS  ;
     */
    public Object production1211UserAction(Token v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xReturnStmt> ::= <xLblDef> T_RETURN <xExpr> T_EOS  ;
     */
    public Object production1212UserAction(Object v1, Token v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xContainsStmt> ::= T_CONTAINS T_EOS  ;
     */
    public Object production1213UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xContainsStmt> ::= <xLblDef> T_CONTAINS T_EOS  ;
     */
    public Object production1214UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xStmtFunctionStmt> ::= <xName> <xStmtFunctionRange>  ;
     */
    public Object production1215UserAction(Object v1, Object v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xStmtFunctionStmt> ::= <xLblDef> <xName> <xStmtFunctionRange>  ;
     */
    public Object production1216UserAction(Object v1, Object v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xStmtFunctionRange> ::= T_LPAREN T_RPAREN T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production1217UserAction(Token v1, Token v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xStmtFunctionRange> ::= T_LPAREN <xSFDummyArgNameList> T_RPAREN T_EQUALS <xExpr> T_EOS  ;
     */
    public Object production1218UserAction(Token v1, Object v2, Token v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFDummyArgNameList> ::= <xSFDummyArgName>  ;
     */
    public Object production1219UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFDummyArgNameList> ::= <xSFDummyArgNameList> T_COMMA <xSFDummyArgName>  ;
     */
    public Object production1220UserAction(Object v1, Token v2, Object v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xArrayName> ::= T_IDENT  ;
     */
    public Object production1221UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xBlockDataName> ::= T_IDENT  ;
     */
    public Token production1222UserAction(Token v1)
    {
        return v1;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xCommonBlockName> ::= T_IDENT  ;
     */
    public Object production1223UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xComponentName> ::= T_IDENT  ;
     */
    public Object production1224UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xDummyArgName> ::= T_IDENT  ;
     */
    public Object production1225UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEndName> ::= T_IDENT  ;
     */
    public Object production1226UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xEntryName> ::= T_IDENT  ;
     */
    public Object production1227UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xExternalName> ::= T_IDENT  ;
     */
    public Object production1228UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xFunctionName> ::= T_IDENT  ;
     */
    public Token production1229UserAction(Token v1)
    {
        return v1;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xGenericName> ::= T_IDENT  ;
     */
    public Object production1230UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <T_xImpliedDoVariable> ::= T_IDENT  ;
     */
    public Object production1231UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xIntrinsicProcedureName> ::= T_IDENT  ;
     */
    public Object production1232UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xModuleName> ::= T_IDENT  ;
     */
    public Token production1233UserAction(Token v1)
    {
        return v1;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xNamelistGroupName> ::= T_IDENT  ;
     */
    public Object production1234UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xObjectName> ::= T_IDENT  ;
     */
    public Object production1235UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xProgramName> ::= T_IDENT  ;
     */
    public Token production1236UserAction(Token v1)
    {
        return v1;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFDummyArgName> ::= <xName>  ;
     */
    public Object production1237UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSFVarName> ::= <xName>  ;
     */
    public Object production1238UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutineName> ::= T_IDENT  ;
     */
    public Token production1239UserAction(Token v1)
    {
        return v1;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xSubroutineNameUse> ::= T_IDENT  ;
     */
    public Object production1240UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xTypeName> ::= T_IDENT  ;
     */
    public Object production1241UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xUseName> ::= T_IDENT  ;
     */
    public Object production1242UserAction(Token v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xLblDef> ::= <xLabel>  ;
     */
    public Object production1243UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xAssignStmt>  ;
     */
    public Object production1244UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xAssignedGotoStmt>  ;
     */
    public Object production1245UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xActionStmt> ::= <xPauseStmt>  ;
     */
    public Object production1246UserAction(Object v1)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPauseStmt> ::= T_PAUSE T_EOS  ;
     */
    public Object production1247UserAction(Token v1, Token v2)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPauseStmt> ::= <xLblDef> T_PAUSE T_EOS  ;
     */
    public Object production1248UserAction(Object v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPauseStmt> ::= T_PAUSE T_ICON T_EOS  ;
     */
    public Object production1249UserAction(Token v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPauseStmt> ::= <xLblDef> T_PAUSE T_ICON T_EOS  ;
     */
    public Object production1250UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPauseStmt> ::= T_PAUSE T_SCON T_EOS  ;
     */
    public Object production1251UserAction(Token v1, Token v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xPauseStmt> ::= <xLblDef> T_PAUSE T_SCON T_EOS  ;
     */
    public Object production1252UserAction(Object v1, Token v2, Token v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignStmt> ::= T_ASSIGN <xLblRef> T_TO <xVariableName> T_EOS  ;
     */
    public Object production1253UserAction(Token v1, Object v2, Token v3, Object v4, Token v5)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignStmt> ::= <xLblDef> T_ASSIGN <xLblRef> T_TO <xVariableName> T_EOS  ;
     */
    public Object production1254UserAction(Object v1, Token v2, Object v3, Token v4, Object v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignedGotoStmt> ::= <GoToKw> <xVariableName> T_EOS  ;
     */
    public Object production1255UserAction(Object v1, Object v2, Token v3)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignedGotoStmt> ::= <xLblDef> <GoToKw> <xVariableName> T_EOS  ;
     */
    public Object production1256UserAction(Object v1, Object v2, Object v3, Token v4)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignedGotoStmt> ::= <GoToKw> <xVariableName> T_LPAREN <xLblRefList> T_RPAREN T_EOS  ;
     */
    public Object production1257UserAction(Object v1, Object v2, Token v3, Object v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignedGotoStmt> ::= <xLblDef> <GoToKw> <xVariableName> T_LPAREN <xLblRefList> T_RPAREN T_EOS  ;
     */
    public Object production1258UserAction(Object v1, Object v2, Object v3, Token v4, Object v5, Token v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignedGotoStmt> ::= <GoToKw> <xVariableComma> T_LPAREN <xLblRefList> T_RPAREN T_EOS  ;
     */
    public Object production1259UserAction(Object v1, Object v2, Token v3, Object v4, Token v5, Token v6)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xAssignedGotoStmt> ::= <xLblDef> <GoToKw> <xVariableComma> T_LPAREN <xLblRefList> T_RPAREN T_EOS  ;
     */
    public Object production1260UserAction(Object v1, Object v2, Object v3, Token v4, Object v5, Token v6, Token v7)
    {
        return null;
    }

    /**
     * This method is called when the parser is about to reduce by
     * <xVariableComma> ::= <xVariableName> T_COMMA  ;
     */
    public Object production1261UserAction(Object v1, Token v2)
    {
        return null;
    }
}
