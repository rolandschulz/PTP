AddOnlyToUseStmtRefactoring_AddingWouldChangeMeaningOf=Adding "{0}" to ONLY list would change the meaning of "{1}" on line {2} in {3}
AddOnlyToUseStmtRefactoring_Analyzing=Analyzing
AddOnlyToUseStmtRefactoring_CheckingForConflicts=Checking for conflicts after addition
AddOnlyToUseStmtRefactoring_CreatingChangeObject=Creating change object
AddOnlyToUseStmtRefactoring_FindingReferences=Finding references
AddOnlyToUseStmtRefactoring_InsertingUseStmt=Inserting USE statement
AddOnlyToUseStmtRefactoring_ModuleNameInUseStmtNotSelected=No module name in a USE statement is selected.
AddOnlyToUseStmtRefactoring_ModuleNodeNodeFound=Module AST node could not be found.
AddOnlyToUseStmtRefactoring_ModuleTokenNotFound=Module token could not be found.
AddOnlyToUseStmtRefactoring_MultipleDefinitionsOfModule=Multiple definitions of module {0} exist in project.
AddOnlyToUseStmtRefactoring_Name=Add ONLY Clause to USE Statement
AddOnlyToUseStmtRefactoring_NameConflicts=The name "{0}" conflicts with {1}
AddOnlyToUseStmtRefactoring_NameMightConflict=The name "{0}" might conflict with the name of an invoked subprogram.
AddOnlyToUseStmtRefactoring_NoDeclarationsInModule=Module contains no declared entities. No ONLY statement necessary.
AddOnlyToUseStmtRefactoring_NoFilesContainModule=No files in this project contain the module {0}.
AddOnlyToUseStmtRefactoring_NoModuleNamed=No module with name {0} found.
AddOnlyToUseStmtRefactoring_NoModuleNameSelected=No module name selected.
AddOnlyToUseStmtRefactoring_Parsing=Parsing 
AddOnlyToUseStmtRefactoring_PleaseSelectModuleName=Please select a module name.
AddOnlyToUseStmtRefactoring_ProjectDoesNotExist=Project does not exist\!
AddOnlyToUseStmtRefactoring_SelectModuleName=Please select the name of the module in the USE statement.
CommonVarNamesRefactoring_Name=Make COMMON Variable Names Consistent
CommonVarNamesRefactoring_NameConflictsWith=The name "{0}" conflicts with {1}
CommonVarNamesRefactoring_NameMightConflictWithSubprogram=The name "{0}" might conflict with the name of an invoked subprogram.
CommonVarNamesRefactoring_NoCommonBlockFoundWithName=No COMMON block found with name '{0}'.
CommonVarNamesRefactoring_NoFilesFoundContainingCommonBlock=No files found containing the specified COMMON block.
CommonVarNamesRefactoring_ProjectDoesNotExist=Project does not exist\!
CommonVarNamesRefactoring_SelectCommonBlockName=Please select a COMMON block name (highlight the name, excluding /'s)
CommonVarNamesRefactoring_VariableTypesDiffer=Variable types differ in different uses of the specified COMMON block. Refactoring will not proceed.
DataToParameterRefactoring_EmptyDataListInNode=Data list of a node was empty. Refactoring failed
DataToParameterRefactoring_Name=Data To Parameter
DataToParameterRefactoring_RefactorNotConsideringVarAssignment=This refactoring is NOT considering variable assignment that could happen as a result of passing a variable to a function/subroutine by reference. 
DataToParameterRefactoring_SelectedFileCannotBeParsed=One of the selected files ({0}) cannot be parsed.
EncapsulateVariableRefactoring_CannotEncapsulateArrays=Arrays cannot be encapsulated.
EncapsulateVariableRefactoring_CannotEncapsulatePARAMETER=Variables with the PARAMETER attribute cannot be encapsulated.
EncapsulateVariableRefactoring_CannotEncapsulatePointers=Pointers cannot be encapsulated.
EncapsulateVariableRefactoring_CannotEncapsulateTARGET=Variables with the TARGET attribute cannot be encapsulated.
EncapsulateVariableRefactoring_CannotRefactorFixedFormFile=Fixed form files cannot currently be refactored. File {0} is in fixed form and contains a reference to the variable you want to encapsulate.
EncapsulateVariableRefactoring_CouldNotFindToken=Could not find token based on selection.
EncapsulateVariableRefactoring_CouldNotFindTokenForVarDef=Could not find a token corresponding to the variable definition
EncapsulateVariableRefactoring_CouldNotFindTokenForVarRef=Could not find a token associated with the variable reference.
EncapsulateVariableRefactoring_Name=Encapsulate Variable
EncapsulateVariableRefactoring_NameConflicts=The name "{0}" conflicts with {1}
EncapsulateVariableRefactoring_NameMightConflict=The name "{0}" might conflict with the name of an invoked subprogram.
EncapsulateVariableRefactoring_NotAnExpression=Currently can only encapsulate variables that appear as expressions. This variable is used as a non-expression in {0} on line {1}.
EncapsulateVariableRefactoring_NoUniqueDefinition=Could not find definition for this identifier, or its definition was ambiguous.
EncapsulateVariableRefactoring_PleaseSelectAnIdentifier=Please select an identifier to encapsulate
EncapsulateVariableRefactoring_VariableNotSelected=The selected entity is not a variable.  Please select a variable defined in a module to encapsulate.
EncapsulateVariableRefactoring_WarningFunctionArgument=WARNING: The variable you want to encapsulate is used as an argument to a function. Encapsulating this variable might change the expected behavior of that function. Proceed at your own discretion.\n(File: {0}, line {1})
EncapsulateVariableRefactoring_WarningWillNotChangeReference=WARNING: The following reference to the selected variable will not be changed since it is neither written nor read:\nFile: {0}, line {1}
ExtractLocalVariableRefactoring_DeclarationDoesNotDeclareSingleVar=The declaration entered does not declare a single variable.
ExtractLocalVariableRefactoring_DeclarationMustNotContainInitialization=The declaration must not contain an initialization.
ExtractLocalVariableRefactoring_EnterDeclarationForExtractedVar=Please enter a declaration for the extracted variable.
ExtractLocalVariableRefactoring_ErrorSelectingPartOfExpression=You have selected part of an expression, but either (1) the part you have selected is not an expression by itself, or (2) extracting that portion of the expression could change the meaning of the larger expression, due to a change in associativity or precedence.
ExtractLocalVariableRefactoring_ExpressionNotInExtractableStmt=The selected expression is not located in a statement from which a variable can be extracted.
ExtractLocalVariableRefactoring_ExpressionTypeNotBeAutoDetermined=The type of the expression could not be determined automatically.
ExtractLocalVariableRefactoring_ExtractionMayNotPreserveBehavior=If any functions in the original or extracted expression have side effects, this refactoring may not preserve behavior.
ExtractLocalVariableRefactoring_InvalidTypeDeclStmt=The text entered ("{0}") is not a valid type declaration statement.
ExtractLocalVariableRefactoring_Name=Extract Local Variable
ExtractLocalVariableRefactoring_NameConflictsWith=The name "{0}" conflicts with {1}
ExtractLocalVariableRefactoring_NameMightConflictWithSubprogram=The name "{0}" might conflict with the name of an invoked subprogram
ExtractLocalVariableRefactoring_SelectExpressionToExtract=Please select an expression to extract.
ExtractLocalVariableRefactoring_VarsExtractedOnlyFromActionStmt=Variables can only be extracted from action statements (e.g., assignments, print statements, etc.).
ExtractLocalVariableRefactoring_VarsOnlyExtractedFromStmtsIn=Variables can only be extracted from action statements inside functions, subroutines, and main programs.
ExtractProcedureRefactoring_PleaseSelectContiguousStatements=Please select a sequence of contiguous statements to extract.
ExtractProcedureRefactoring_CanOnlyExtractFromSubprogramOrMainProgram=Statements can only be extracted from inside a subprogram or main program.
ExtractProcedureRefactoring_ExtractionWouldRequirePointerParameter=The selected statements cannot be extracted because doing so would require passing a pointer variable as a parameter
ExtractProcedureRefactoring_InvalidIdentifier={0} is not a valid identifier
ExtractProcedureRefactoring_Name=Extract Procedure
ExtractProcedureRefactoring_NameConflicts=The name "{0}" conflicts with "{1}" on line {2} in {3}.
ExtractProcedureRefactoring_OnlyExecutableStatementsCanBeExtracted=Only executable statements can be extracted; the statement "{0}" cannot.
ExtractProcedureRefactoring_ProcedureContainsLabels=This procedure contains labels; the extracted subprogram may not be correct if the selected statements reference a label outside the extracted statements.
ExtractProcedureRefactoring_StatementCannotBeExtracted=The statement "{0}" cannot be extracted
InterchangeLoopsRefactoring_Name=Interchange Loops (Unchecked)
InterchangeLoopsRefactoring_SelectTwoPerfNextedLoops=Please select two perfectly-nested loops to refactor.
InterchangeLoopsRefactoring_UncheckedTransNotGuaranteedToPreserve=WARNING: This is an UNCHECKED TRANSFORMATION and is NOT guaranteed to preserve behavior.  Proceed at your own risk.
IntroImplicitNoneRefactoring_Name=Introduce Implicit None
IntroImplicitNoneRefactoring_SelectedFileCannotBeParsed=One of the selected files ({0}) cannot be parsed.
KeywordCaseRefactoring_Name=Change Keyword Case
KeywordCaseRefactoring_SelectedFileCannotBeParsed=One of the selected files ({0}) cannot be parsed.
MakePrivateEntityPublicRefactoring_DoesNotSupportExternalEntities=Refactoring does not support External entities.
MakePrivateEntityPublicRefactoring_DoesNotSupportInterfaceDeclarations=Refactoring does not support Interface declarations.
MakePrivateEntityPublicRefactoring_DoesNotSupportIntrinsicEntities=Refactoring does not support Intrinsic entities.
MakePrivateEntityPublicRefactoring_HighlightPrivateEntityName=Please select a private entity name (highlight the entity name)
MakePrivateEntityPublicRefactoring_Name=Make Private Entity Public
MakePrivateEntityPublicRefactoring_NoPrivateEntitySelected=No private entities selected.
MakePrivateEntityPublicRefactoring_PublicEntitySelectedSelectPrivate=Public entity is selected. Please select a Private entity.
MakePrivateEntityPublicRefactoring_SelectPrivateEntityName=Please select a private entity name.
MinOnlyListRefactoring_ModuleIsEmpty=Module contains no declared entities. No ONLY clause is necessary. Please remove the ONLY clause from the USE statement.
MinOnlyListRefactoring_ModuleNodeNotFound=Module AST node could not be found.
MinOnlyListRefactoring_ModuleNotFoundWithName=No module with name {0}
MinOnlyListRefactoring_ModuleTokenNotFound=Module token could not be found.
MinOnlyListRefactoring_Name=Minimize ONLY List
MinOnlyListRefactoring_NoFilesContainModuleNamed=No files in this project contain the module {0}.
MinOnlyListRefactoring_NoModuleNameSelected=No module name selected.
MinOnlyListRefactoring_PleaseSelectModuleName=Please select a module name.
MinOnlyListRefactoring_PleaseSelectModuleNameInUSEStatement=Please select the name of the module in the USE statement.
MinOnlyListRefactoring_ProjectDoesNotExist=Project does not exist\!
MinOnlyListRefactoring_USEStatementNotFound=Use statement node could not be found.
MoveCommonToModuleRefactoring_InvalidIdentifier={0}\ is not a valid identifier
MoveCommonToModuleRefactoring_Name=Move COMMON Block to Module
MoveCommonToModuleRefactoring_SelectVarOrBlockInCommonStmt=Please select a variable or block in a COMMON statement.
MoveSavedToCommonBlockRefactoring_AbsentOrAmbiguousDefinition=Absent or ambiguous definition for variable "{0}".
MoveSavedToCommonBlockRefactoring_CouldNotFindArrayDeclaration=Could not find array declaration for DIMENSION specification of variable "{0}".
MoveSavedToCommonBlockRefactoring_CouldNotFindDeclarationNode=Could not find declaration node for variable "{0}".
MoveSavedToCommonBlockRefactoring_CouldNotFindTypeSpecificationNode=Could not find type specification node for variable "{0}".
MoveSavedToCommonBlockRefactoring_Name=Move Saved Variables to COMMON Block
MoveSavedToCommonBlockRefactoring_OnlyInternalSubprogramsSupported=The current implementation handles only subprograms that are in the CONTAINS section of the PROGRAM.
MoveSavedToCommonBlockRefactoring_PleaseSelectSubprogram=Please select a subroutine or a function (place the cursor in its statement).
MoveSavedToCommonBlockRefactoring_PleaseSelectSubprogramNotInINTERFACE=The subroutine's or the function's statement should not be the interface declaration.
RemoveArithmeticIfRefactoring_Error=One of the selected files ({0}) cannot be parsed.
RemoveArithmeticIfRefactoring_Name=Remove Arithmetic If Statements
RemoveUnusedVariablesRefactoring_CouldNotCompleteOperation=Sorry, could not complete the operation.
RemoveUnusedVariablesRefactoring_DoesNotRemovedUnusedVarsWithDefsOnAnotherLine=This refactoring does not remove unused variables when their dimentions are specified on another line. I.e. real a /n/n dimention a(10) will not be removed.
RemoveUnusedVariablesRefactoring_Name=Remove Unused Local Variables
RemoveUnusedVariablesRefactoring_RefactorAgainToRemoveAllUnusedVars=After clicking 'Continue', do the same refactoring again to make sure that all unused variables are removed from file {0}!
RemoveUnusedVariablesRefactoring_Scope=Scope: {0}
RemoveUnusedVariablesRefactoring_SelectedFileCannotBeParsed=One of the selected files ({0}) cannot be parsed.
RemoveUnusedVariablesRefactoring_SelectedFilesCannotBeParsed=One of the selected files ({0}) cannot be parsed
RemoveUnusedVariablesRefactoring_SelectedFilesMustBeImplicitNone=All of the selected files must be IMPLICIT NONE. Please use the Introduce Implict None refactoring first to introduce IMPLICIT NONE statements in the file {0}.
RemoveUnusedVariablesRefactoring_UnusedVarsRemovedFromFile=All unused variables have been removed from file {0}! 
RemoveUnusedVariablesRefactoring_VariableUnusedAndWillBeRemoved=The variable [{0}] was not used and will be removed.
RenameRefactoring_CannotRename=The {0} {1} cannot be renamed. Only local variables, subprograms and interfaces, derived types, main programs, namelists, common blocks, and block data subprograms can be renamed.  Derived type components and subprogram arguments cannot be renamed.
RenameRefactoring_CannotRenameAmbiguous={0} cannot be renamed: {1} is an ambiguous reference (it refers to {2} but may refer to another entity as well).
RenameRefactoring_CannotRenameInINCLUDEFile={0} cannot be renamed: It is declared in an INCLUDE file.
RenameRefactoring_CannotRenameIntrinsicProcedure={0} cannot be renamed: It is an intrinsic procedure.
RenameRefactoring_CannotRenameSubprogramArgs=Subprogram arguments cannot be renamed.
RenameRefactoring_CannotRenameTypeBoundProcedures=Type-bound procedures cannot be renamed.
RenameRefactoring_CannotRenameUsedInINCLUDEFile={0} cannot be renamed: It would require modifying an INCLUDE file ({1}).
RenameRefactoring_ChangingNameWouldChangeMeaning=Changing the name to "{0}" would change the meaning of {1} on line {2} in {3}.
RenameRefactoring_StatusCheckingIfReferencesInFileCanBeRenamed=Checking if references in {0} can be renamed
RenameRefactoring_CPreprocessedFileWillNotBeRefactored=The C-preprocessed file {0} will not be refactored.
RenameRefactoring_FixedFormFileWillNotBeRefactored=The fixed form file {0} will not be refactored.
RenameRefactoring_InvalidIdentifier={0} is not a valid identifier
RenameRefactoring_MultipleDeclarationsFoundFor=Multiple declarations were found for {0}.
RenameRefactoring_Name=Rename
RenameRefactoring_NameConflicts=The name "{0}" conflicts with {1}.
RenameRefactoring_NameMightConflict=The name "{0}" might conflict with the name of an invoked subprogram.
RenameRefactoring_NewNameIsExactlyTheSame=The new name ({0}) is exactly the same as the old name!
RenameRefactoring_NoDeclarationFoundFor=No declaration was found for {0}.
RenameRefactoring_PleaseSelectAnIdentifier=Please select an identifier to rename.
RenameRefactoring_StatusModifyingFile=Modifying {0}
RenameRefactoring_StatusRenaming=Renaming
RepObsOpersRefactoring_Name=Replace Obsolete Operators
RepObsOpersRefactoring_SelectedFileCannotBeParsed=One of the selected files ({0}) cannot be parsed.
ReverseLoopRefactoring_Name=Reverse Loop (Unchecked)
ReverseLoopRefactoring_SelectDoLoop=Please select a DO loop.
StandardizeStatementsRefactoring_Name=Standardize Statements
StandardizeStatementsRefactoring_SelectedFileCannotBeParsed=One of the selected files ({0}) cannot be parsed.
