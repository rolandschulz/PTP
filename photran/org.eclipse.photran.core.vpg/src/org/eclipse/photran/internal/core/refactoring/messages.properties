AddOnlyToUseStmtRefactoring_AddingWouldChangeMeaningOf=Adding "{0}" to ONLY list would change the meaning of "{1}" on line {2} in {3}
AddOnlyToUseStmtRefactoring_Analyzing=Analyzing
AddOnlyToUseStmtRefactoring_CheckingForConflicts=Checking for conflicts after addition
AddOnlyToUseStmtRefactoring_CreatingChangeObject=Creating change object
AddOnlyToUseStmtRefactoring_FindingReferences=Finding references
AddOnlyToUseStmtRefactoring_InsertingUseStmt=Inserting USE statement
AddOnlyToUseStmtRefactoring_ModuleNameInUseStmtNotSelected=No module name in a USE statement is selected.
AddOnlyToUseStmtRefactoring_ModuleNodeNodeFound=Module AST node could not be found.
AddOnlyToUseStmtRefactoring_ModuleTokenNotFound=Module token could not be found.
AddOnlyToUseStmtRefactoring_MultipleDefinitionsOfModule=Multiple definitions of module {0} exist in project.
AddOnlyToUseStmtRefactoring_Name=Add ONLY Clause to USE Statement
AddOnlyToUseStmtRefactoring_NameConflicts=The name "{0}" conflicts with {1}
AddOnlyToUseStmtRefactoring_NameMightConflict=The name "{0}" might conflict with the name of an invoked subprogram.
AddOnlyToUseStmtRefactoring_NoDeclarationsInModule=Module contains no declared entities. No ONLY statement necessary.
AddOnlyToUseStmtRefactoring_NoFilesContainModule=No files in this project contain the module {0}.
AddOnlyToUseStmtRefactoring_NoModuleNamed=No module with name {0} found.
AddOnlyToUseStmtRefactoring_NoModuleNameSelected=No module name selected.
AddOnlyToUseStmtRefactoring_Parsing=Parsing 
AddOnlyToUseStmtRefactoring_PleaseSelectModuleName=Please select a module name.
AddOnlyToUseStmtRefactoring_ProjectDoesNotExist=Project does not exist\!
AddOnlyToUseStmtRefactoring_SelectModuleName=Please select the name of the module in the USE statement.
EncapsulateVariableRefactoring_CannotEncapsulateArrays=Arrays cannot be encapsulated.
EncapsulateVariableRefactoring_CannotEncapsulatePARAMETER=Variables with the PARAMETER attribute cannot be encapsulated.
EncapsulateVariableRefactoring_CannotEncapsulatePointers=Pointers cannot be encapsulated.
EncapsulateVariableRefactoring_CannotEncapsulateTARGET=Variables with the TARGET attribute cannot be encapsulated.
EncapsulateVariableRefactoring_CannotRefactorFixedFormFile=Fixed form files cannot currently be refactored. File {0} is in fixed form and contains a reference to the variable you want to encapsulate.
EncapsulateVariableRefactoring_CouldNotFindToken=Could not find token based on selection.
EncapsulateVariableRefactoring_CouldNotFindTokenForVarDef=Could not find a token corresponding to the variable definition
EncapsulateVariableRefactoring_CouldNotFindTokenForVarRef=Could not find a token associated with the variable reference.
EncapsulateVariableRefactoring_Name=Encapsulate Variable
EncapsulateVariableRefactoring_NameConflicts=The name "{0}" conflicts with {1}
EncapsulateVariableRefactoring_NameMightConflict=The name "{0}" might conflict with the name of an invoked subprogram.
EncapsulateVariableRefactoring_NotAnExpression=Currently can only encapsulate variables that appear as expressions. This variable is used as a non-expression in {0} on line {1}.
EncapsulateVariableRefactoring_NoUniqueDefinition=Could not find definition for this identifier, or its definition was ambiguous.
EncapsulateVariableRefactoring_PleaseSelectAnIdentifier=Please select an identifier to encapsulate
EncapsulateVariableRefactoring_VariableNotSelected=The selected entity is not a variable.  Please select a variable defined in a module to encapsulate.
EncapsulateVariableRefactoring_WarningFunctionArgument=WARNING: The variable you want to encapsulate is used as an argument to a function. Encapsulating this variable might change the expected behavior of that function. Proceed at your own discretion.\n(File: {0}, line {1})
EncapsulateVariableRefactoring_WarningWillNotChangeReference=WARNING: The following reference to the selected variable will not be changedsince it is neither written nor read:\nFile: {0}, line {1}
ExtractProcedureRefactoring_PleaseSelectContiguousStatements=Please select a sequence of contiguous statements to extract.
ExtractProcedureRefactoring_CanOnlyExtractFromSubprogramOrMainProgram=Statements can only be extracted from inside a subprogram or main program.
ExtractProcedureRefactoring_ExtractionWouldRequirePointerParameter=The selected statements cannot be extracted because doing so would require passing a pointer variable as a parameter
ExtractProcedureRefactoring_InvalidIdentifier={0} is not a valid identifier
ExtractProcedureRefactoring_Name=Extract Procedure
ExtractProcedureRefactoring_NameConflicts=The name "{0}" conflicts with "{1}" on line {2} in {3}.
ExtractProcedureRefactoring_OnlyExecutableStatementsCanBeExtracted=Only executable statements can be extracted; the statement "{0}" cannot.
ExtractProcedureRefactoring_ProcedureContainsLabels=This procedure contains labels; the extracted subprogram may not be correct if the selected statements reference a label outside the extracted statements.
ExtractProcedureRefactoring_StatementCannotBeExtracted=The statement "{0}" cannot be extracted
MinOnlyListRefactoring_ModuleIsEmpty=Module contains no declared entities. No ONLY clause is necessary. Please remove the ONLY clause from the USE statement.
MinOnlyListRefactoring_ModuleNodeNotFound=Module AST node could not be found.
MinOnlyListRefactoring_ModuleNotFoundWithName=No module with name {0}
MinOnlyListRefactoring_ModuleTokenNotFound=Module token could not be found.
MinOnlyListRefactoring_Name=Minimize ONLY List
MinOnlyListRefactoring_NoFilesContainModuleNamed=No files in this project contain the module {0}.
MinOnlyListRefactoring_NoModuleNameSelected=No module name selected.
MinOnlyListRefactoring_PleaseSelectModuleName=Please select a module name.
MinOnlyListRefactoring_PleaseSelectModuleNameInUSEStatement=Please select the name of the module in the USE statement.
MinOnlyListRefactoring_ProjectDoesNotExist=Project does not exist\!
MinOnlyListRefactoring_USEStatementNotFound=Use statement node could not be found.
MoveSavedToCommonBlockRefactoring_AbsentOrAmbiguousDefinition=Absent or ambiguous definition for variable "{0}".
MoveSavedToCommonBlockRefactoring_CouldNotFindArrayDeclaration=Could not find array declaration for DIMENSION specification of variable "{0}".
MoveSavedToCommonBlockRefactoring_CouldNotFindDeclarationNode=Could not find declaration node for variable "{0}".
MoveSavedToCommonBlockRefactoring_CouldNotFindTypeSpecificationNode=Could not find type specification node for variable "{0}".
MoveSavedToCommonBlockRefactoring_Name=Move Saved Variables to COMMON Block
MoveSavedToCommonBlockRefactoring_OnlyInternalSubprogramsSupported=The current implementation handles only subprograms that are in the CONTAINS section of the PROGRAM.
MoveSavedToCommonBlockRefactoring_PleaseSelectSubprogram=Please select a subroutine or a function (place the cursor in its statement).
MoveSavedToCommonBlockRefactoring_PleaseSelectSubprogramNotInINTERFACE=The subroutine's or the function's statement should not be the interface declaration.
RenameRefactoring_CannotRename=The {0} {1} cannot be renamed. Only local variables, subprograms and interfaces, derived types, main programs, namelists, common blocks, and block data subprograms can be renamed.  Derived type components and subprogram arguments cannot be renamed.
RenameRefactoring_CannotRenameAmbiguous={0} cannot be renamed: {1} is an ambiguous reference (it refers to {2} but may refer to another entity as well).
RenameRefactoring_CannotRenameInINCLUDEFile={0} cannot be renamed: It is declared in an INCLUDE file.
RenameRefactoring_CannotRenameIntrinsicProcedure={0} cannot be renamed: It is an intrinsic procedure.
RenameRefactoring_CannotRenameSubprogramArgs=Subprogram arguments cannot be renamed.
RenameRefactoring_CannotRenameTypeBoundProcedures=Type-bound procedures cannot be renamed.
RenameRefactoring_CannotRenameUsedInINCLUDEFile={0} cannot be renamed: It would require modifying an INCLUDE file ({1}).
RenameRefactoring_ChangingNameWouldChangeMeaning=Changing the name to "{0}" would change the meaning of {1} on line {2} in {3}.
RenameRefactoring_StatusCheckingIfReferencesInFileCanBeRenamed=Checking if references in {0} can be renamed
RenameRefactoring_CPreprocessedFileWillNotBeRefactored=The C-preprocessed file {0} will not be refactored.
RenameRefactoring_FixedFormFileWillNotBeRefactored=The fixed form file {0} will not be refactored.
RenameRefactoring_InvalidIdentifier={0} is not a valid identifier
RenameRefactoring_MultipleDeclarationsFoundFor=Multiple declarations were found for {0}.
RenameRefactoring_Name=Rename
RenameRefactoring_NameConflicts=The name "{0}" conflicts with {1}.
RenameRefactoring_NameMightConflict=The name "{0}" might conflict with the name of an invoked subprogram.
RenameRefactoring_NewNameIsExactlyTheSame=The new name ({0}) is exactly the same as the old name!
RenameRefactoring_NoDeclarationFoundFor=No declaration was found for {0}.
RenameRefactoring_PleaseSelectAnIdentifier=Please select an identifier to rename.
RenameRefactoring_StatusModifyingFile=Modifying {0}
RenameRefactoring_StatusRenaming=Renaming
